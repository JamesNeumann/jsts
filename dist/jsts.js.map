{"version":3,"file":"jsts.js","sources":["../src/org/locationtech/jts/util/NumberUtil.js","../src/java/lang/Exception.js","../src/java/lang/IllegalArgumentException.js","../src/java/lang/Long.js","../src/java/lang/Double.js","../src/java/lang/Comparable.js","../src/java/lang/Cloneable.js","../src/java/util/Comparator.js","../src/java/io/Serializable.js","../src/java/lang/RuntimeException.js","../src/org/locationtech/jts/util/AssertionFailedException.js","../src/org/locationtech/jts/util/Assert.js","../src/org/locationtech/jts/geom/Coordinate.js","../src/org/locationtech/jts/geom/CoordinateXY.js","../src/org/locationtech/jts/geom/CoordinateXYM.js","../src/org/locationtech/jts/geom/CoordinateXYZM.js","../src/hasInterface.js","../src/java/util/Collection.js","../src/java/lang/IndexOutOfBoundsException.js","../src/java/util/List.js","../src/java/util/NoSuchElementException.js","../src/java/util/ArrayList.js","../src/org/locationtech/jts/geom/CoordinateList.js","../src/org/locationtech/jts/geom/CoordinateSequenceFilter.js","../src/org/locationtech/jts/geom/Envelope.js","../src/java/lang/StringBuffer.js","../src/java/lang/Integer.js","../src/java/lang/Character.js","../src/java/lang/IllegalStateException.js","../src/org/locationtech/jts/math/DD.js","../src/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","../src/org/locationtech/jts/geom/CoordinateSequence.js","../src/org/locationtech/jts/algorithm/Orientation.js","../src/org/locationtech/jts/algorithm/Intersection.js","../src/java/lang/System.js","../src/org/locationtech/jts/math/MathUtil.js","../src/org/locationtech/jts/algorithm/Distance.js","../src/org/locationtech/jts/geom/CoordinateSequenceFactory.js","../src/org/locationtech/jts/geom/GeometryComponentFilter.js","../src/org/locationtech/jts/geom/Geometry.js","../src/org/locationtech/jts/geom/CoordinateFilter.js","../src/org/locationtech/jts/algorithm/Length.js","../src/org/locationtech/jts/geom/Lineal.js","../src/org/locationtech/jts/geom/CoordinateSequences.js","../src/java/lang/UnsupportedOperationException.js","../src/org/locationtech/jts/geom/Dimension.js","../src/org/locationtech/jts/geom/GeometryFilter.js","../src/org/locationtech/jts/geom/LineString.js","../src/org/locationtech/jts/geom/Puntal.js","../src/org/locationtech/jts/geom/Point.js","../src/org/locationtech/jts/algorithm/Area.js","../src/java/util/Arrays.js","../src/org/locationtech/jts/geom/Polygonal.js","../src/org/locationtech/jts/geom/Polygon.js","../src/java/util/Set.js","../src/java/util/SortedSet.js","../src/java/util/TreeSet.js","../src/org/locationtech/jts/geom/GeometryCollection.js","../src/org/locationtech/jts/geom/MultiPoint.js","../src/org/locationtech/jts/geom/LinearRing.js","../src/org/locationtech/jts/geom/Coordinates.js","../src/org/locationtech/jts/geom/CoordinateArrays.js","../src/java/lang/StringBuilder.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","../src/org/locationtech/jts/geom/MultiPolygon.js","../src/java/util/Map.js","../src/java/util/HashSet.js","../src/java/util/HashMap.js","../src/org/locationtech/jts/geom/PrecisionModel.js","../src/org/locationtech/jts/geom/MultiLineString.js","../src/org/locationtech/jts/geom/GeometryFactory.js","../src/org/locationtech/jts/io/WKTParser.js","../src/org/locationtech/jts/io/WKTWriter.js","../src/org/locationtech/jts/algorithm/LineIntersector.js","../src/org/locationtech/jts/algorithm/RobustLineIntersector.js","../src/org/locationtech/jts/geom/LineSegment.js","../src/org/locationtech/jts/geom/Location.js","../src/org/locationtech/jts/geom/IntersectionMatrix.js","../src/org/locationtech/jts/algorithm/Angle.js","../src/org/locationtech/jts/algorithm/NotRepresentableException.js","../src/org/locationtech/jts/algorithm/HCoordinate.js","../src/org/locationtech/jts/geom/Triangle.js","../src/org/locationtech/jts/geom/util/NoninvertibleTransformationException.js","../src/org/locationtech/jts/geom/util/AffineTransformation.js","../src/org/locationtech/jts/math/Matrix.js","../src/org/locationtech/jts/geom/util/AffineTransformationBuilder.js","../src/org/locationtech/jts/geom/util/AffineTransformationFactory.js","../src/org/locationtech/jts/geom/util/ComponentCoordinateExtracter.js","../src/org/locationtech/jts/geom/util/GeometryCollectionMapper.js","../src/org/locationtech/jts/geom/util/GeometryCombiner.js","../src/org/locationtech/jts/geom/util/GeometryEditor.js","../src/org/locationtech/jts/geom/util/GeometryExtracter.js","../src/org/locationtech/jts/geom/util/GeometryMapper.js","../src/org/locationtech/jts/geom/util/GeometryTransformer.js","../src/org/locationtech/jts/geom/util/LineStringExtracter.js","../src/org/locationtech/jts/geom/util/LinearComponentExtracter.js","../src/java/util/Collections.js","../src/org/locationtech/jts/geom/util/PointExtracter.js","../src/org/locationtech/jts/geom/util/PolygonExtracter.js","../src/org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js","../src/org/locationtech/jts/util/GeometricShapeFactory.js","../src/org/locationtech/jts/geom/util/SineStarFactory.js","../src/org/locationtech/jts/algorithm/distance/PointPairDistance.js","../src/org/locationtech/jts/algorithm/distance/DistanceToPoint.js","../src/org/locationtech/jts/algorithm/distance/DiscreteHausdorffDistance.js","../src/org/locationtech/jts/index/ItemVisitor.js","../src/org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","../src/org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","../src/org/locationtech/jts/index/ArrayListVisitor.js","../src/org/locationtech/jts/algorithm/RayCrossingCounter.js","../src/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","../src/org/locationtech/jts/algorithm/PointLocation.js","../src/java/util/Iterator.js","../src/org/locationtech/jts/geom/GeometryCollectionIterator.js","../src/org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","../src/org/locationtech/jts/algorithm/match/SimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/AreaSimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/HausdorffSimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/SimilarityMeasureCombiner.js","../src/org/locationtech/jts/algorithm/Centroid.js","../src/java/util/EmptyStackException.js","../src/java/util/Stack.js","../src/org/locationtech/jts/util/UniqueCoordinateArrayFilter.js","../src/org/locationtech/jts/algorithm/ConvexHull.js","../src/org/locationtech/jts/algorithm/InteriorPointArea.js","../src/org/locationtech/jts/algorithm/InteriorPointLine.js","../src/org/locationtech/jts/algorithm/InteriorPointPoint.js","../src/org/locationtech/jts/algorithm/BoundaryNodeRule.js","../src/org/locationtech/jts/algorithm/PointLocator.js","../src/org/locationtech/jts/algorithm/MinimumBoundingCircle.js","../src/org/locationtech/jts/algorithm/MinimumDiameter.js","../src/org/locationtech/jts/densify/Densifier.js","../src/org/locationtech/jts/geomgraph/Quadrant.js","../src/org/locationtech/jts/edgegraph/HalfEdge.js","../src/org/locationtech/jts/edgegraph/MarkHalfEdge.js","../src/org/locationtech/jts/edgegraph/EdgeGraph.js","../src/org/locationtech/jts/dissolve/DissolveHalfEdge.js","../src/org/locationtech/jts/dissolve/DissolveEdgeGraph.js","../src/org/locationtech/jts/dissolve/LineDissolver.js","../src/org/locationtech/jts/geomgraph/Position.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/index/SweepLineEvent.js","../src/org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","../src/org/locationtech/jts/geomgraph/index/SegmentIntersector.js","../src/org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","../src/org/locationtech/jts/geomgraph/TopologyLocation.js","../src/org/locationtech/jts/geomgraph/Label.js","../src/org/locationtech/jts/geomgraph/EdgeIntersection.js","../src/java/util/SortedMap.js","../src/java/util/TreeMap.js","../src/org/locationtech/jts/geomgraph/EdgeIntersectionList.js","../src/org/locationtech/jts/util/IntArrayList.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","../src/org/locationtech/jts/geomgraph/Depth.js","../src/org/locationtech/jts/geomgraph/GraphComponent.js","../src/org/locationtech/jts/geomgraph/Edge.js","../src/org/locationtech/jts/geomgraph/Node.js","../src/org/locationtech/jts/geomgraph/NodeMap.js","../src/org/locationtech/jts/geomgraph/EdgeEnd.js","../src/org/locationtech/jts/geom/TopologyException.js","../src/org/locationtech/jts/geomgraph/DirectedEdge.js","../src/org/locationtech/jts/geomgraph/NodeFactory.js","../src/org/locationtech/jts/geomgraph/PlanarGraph.js","../src/org/locationtech/jts/geomgraph/GeometryGraph.js","../src/org/locationtech/jts/index/kdtree/KdNodeVisitor.js","../src/org/locationtech/jts/index/kdtree/KdNode.js","../src/org/locationtech/jts/index/kdtree/KdTree.js","../src/org/locationtech/jts/index/quadtree/NodeBase.js","../src/org/locationtech/jts/index/quadtree/DoubleBits.js","../src/org/locationtech/jts/index/quadtree/Key.js","../src/org/locationtech/jts/index/quadtree/Node.js","../src/org/locationtech/jts/index/quadtree/IntervalSize.js","../src/org/locationtech/jts/index/quadtree/Root.js","../src/org/locationtech/jts/index/SpatialIndex.js","../src/org/locationtech/jts/index/quadtree/Quadtree.js","../src/org/locationtech/jts/index/strtree/Boundable.js","../src/org/locationtech/jts/index/strtree/ItemBoundable.js","../src/org/locationtech/jts/util/PriorityQueue.js","../src/org/locationtech/jts/index/strtree/AbstractNode.js","../src/org/locationtech/jts/index/strtree/EnvelopeDistance.js","../src/org/locationtech/jts/index/strtree/BoundablePair.js","../src/org/locationtech/jts/index/strtree/AbstractSTRtree.js","../src/org/locationtech/jts/index/strtree/ItemDistance.js","../src/org/locationtech/jts/index/strtree/STRtree.js","../src/org/locationtech/jts/io/GeoJSONParser.js","../src/org/locationtech/jts/io/GeoJSONReader.js","../src/org/locationtech/jts/io/GeoJSONWriter.js","../src/org/locationtech/jts/io/WKTReader.js","../src/org/locationtech/jts/io/OL3Parser.js","../src/org/locationtech/jts/noding/SegmentPointComparator.js","../src/org/locationtech/jts/noding/SegmentNode.js","../src/org/locationtech/jts/noding/SegmentNodeList.js","../src/org/locationtech/jts/noding/Octant.js","../src/org/locationtech/jts/noding/SegmentString.js","../src/org/locationtech/jts/noding/NodableSegmentString.js","../src/org/locationtech/jts/noding/NodedSegmentString.js","../src/org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","../src/org/locationtech/jts/index/chain/MonotoneChain.js","../src/org/locationtech/jts/index/chain/MonotoneChainBuilder.js","../src/org/locationtech/jts/noding/Noder.js","../src/org/locationtech/jts/noding/SinglePassNoder.js","../src/org/locationtech/jts/noding/MCIndexNoder.js","../src/org/locationtech/jts/noding/ScaledNoder.js","../src/org/locationtech/jts/operation/BoundaryOp.js","../src/org/locationtech/jts/operation/IsSimpleOp.js","../src/org/locationtech/jts/operation/buffer/BufferParameters.js","../src/org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","../src/java/util/LinkedList.js","../src/org/locationtech/jts/operation/buffer/BufferSubgraph.js","../src/org/locationtech/jts/geomgraph/EdgeRing.js","../src/org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/PolygonBuilder.js","../src/org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentString.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","../src/org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","../src/org/locationtech/jts/geomgraph/EdgeEndStar.js","../src/org/locationtech/jts/geomgraph/DirectedEdgeStar.js","../src/org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","../src/org/locationtech/jts/noding/OrientedCoordinateArray.js","../src/org/locationtech/jts/geomgraph/EdgeList.js","../src/org/locationtech/jts/noding/SegmentIntersector.js","../src/org/locationtech/jts/noding/IntersectionAdder.js","../src/org/locationtech/jts/operation/buffer/BufferBuilder.js","../src/org/locationtech/jts/noding/NodingValidator.js","../src/org/locationtech/jts/noding/snapround/HotPixel.js","../src/org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","../src/org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","../src/org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","../src/org/locationtech/jts/operation/buffer/BufferOp.js","../src/org/locationtech/jts/operation/distance/GeometryLocation.js","../src/org/locationtech/jts/operation/distance/ConnectedElementLocationFilter.js","../src/org/locationtech/jts/operation/distance/DistanceOp.js","../src/org/locationtech/jts/operation/linemerge/EdgeString.js","../src/org/locationtech/jts/planargraph/GraphComponent.js","../src/org/locationtech/jts/planargraph/DirectedEdge.js","../src/org/locationtech/jts/operation/linemerge/LineMergeDirectedEdge.js","../src/org/locationtech/jts/planargraph/Edge.js","../src/org/locationtech/jts/planargraph/DirectedEdgeStar.js","../src/org/locationtech/jts/planargraph/Node.js","../src/org/locationtech/jts/operation/linemerge/LineMergeEdge.js","../src/org/locationtech/jts/planargraph/NodeMap.js","../src/org/locationtech/jts/planargraph/PlanarGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMergeGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMerger.js","../src/org/locationtech/jts/planargraph/Subgraph.js","../src/org/locationtech/jts/planargraph/algorithm/ConnectedSubgraphFinder.js","../src/org/locationtech/jts/operation/linemerge/LineSequencer.js","../src/org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","../src/org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","../src/org/locationtech/jts/noding/BasicSegmentString.js","../src/org/locationtech/jts/noding/NodingIntersectionFinder.js","../src/org/locationtech/jts/noding/FastNodingValidator.js","../src/org/locationtech/jts/geomgraph/EdgeNodingValidator.js","../src/org/locationtech/jts/operation/overlay/LineBuilder.js","../src/org/locationtech/jts/operation/overlay/PointBuilder.js","../src/org/locationtech/jts/precision/CommonBits.js","../src/org/locationtech/jts/precision/CommonBitsRemover.js","../src/org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","../src/org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","../src/org/locationtech/jts/operation/GeometryGraphOperation.js","../src/org/locationtech/jts/operation/overlay/OverlayOp.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeDirectedEdge.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeEdge.js","../src/org/locationtech/jts/operation/valid/ConnectedInteriorTester.js","../src/org/locationtech/jts/operation/relate/EdgeEndBuilder.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundle.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","../src/org/locationtech/jts/operation/relate/RelateNode.js","../src/org/locationtech/jts/operation/relate/RelateNodeFactory.js","../src/org/locationtech/jts/operation/relate/RelateNodeGraph.js","../src/org/locationtech/jts/operation/valid/ConsistentAreaTester.js","../src/org/locationtech/jts/operation/valid/IndexedNestedRingTester.js","../src/org/locationtech/jts/operation/valid/TopologyValidationError.js","../src/org/locationtech/jts/operation/valid/IsValidOp.js","../src/org/locationtech/jts/operation/polygonize/EdgeRing.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeGraph.js","../src/org/locationtech/jts/operation/polygonize/HoleAssigner.js","../src/org/locationtech/jts/operation/polygonize/Polygonizer.js","../src/org/locationtech/jts/operation/relate/RelateComputer.js","../src/org/locationtech/jts/operation/predicate/RectangleContains.js","../src/org/locationtech/jts/algorithm/RectangleLineIntersector.js","../src/org/locationtech/jts/operation/predicate/RectangleIntersects.js","../src/org/locationtech/jts/operation/relate/RelateOp.js","../src/org/locationtech/jts/operation/union/PointGeometryUnion.js","../src/org/locationtech/jts/operation/union/InputExtracter.js","../src/org/locationtech/jts/operation/union/UnionOp.js","../src/org/locationtech/jts/operation/union/OverlapUnion.js","../src/org/locationtech/jts/operation/union/CascadedPolygonUnion.js","../src/org/locationtech/jts/operation/union/UnaryUnionOp.js","../src/org/locationtech/jts/precision/CommonBitsOp.js","../src/org/locationtech/jts/precision/EnhancedPrecisionOp.js","../src/org/locationtech/jts/precision/PrecisionReducerCoordinateOperation.js","../src/org/locationtech/jts/precision/GeometryPrecisionReducer.js","../src/org/locationtech/jts/operation/distance/FacetSequence.js","../src/org/locationtech/jts/operation/distance/FacetSequenceTreeBuilder.js","../src/org/locationtech/jts/precision/MinimumClearance.js","../src/org/locationtech/jts/precision/SimpleMinimumClearance.js","../src/org/locationtech/jts/simplify/DouglasPeuckerLineSimplifier.js","../src/org/locationtech/jts/simplify/DouglasPeuckerSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLineSegment.js","../src/org/locationtech/jts/simplify/TaggedLineString.js","../src/org/locationtech/jts/simplify/LineSegmentIndex.js","../src/org/locationtech/jts/simplify/TaggedLineStringSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLinesSimplifier.js","../src/org/locationtech/jts/simplify/TopologyPreservingSimplifier.js","../src/org/locationtech/jts/simplify/VWLineSimplifier.js","../src/org/locationtech/jts/simplify/VWSimplifier.js","../src/org/locationtech/jts/triangulate/SplitSegment.js","../src/org/locationtech/jts/triangulate/ConstraintSplitPointFinder.js","../src/org/locationtech/jts/triangulate/NonEncroachingSplitPointFinder.js","../src/org/locationtech/jts/triangulate/quadedge/TrianglePredicate.js","../src/org/locationtech/jts/triangulate/quadedge/Vertex.js","../src/org/locationtech/jts/triangulate/ConstraintVertex.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdge.js","../src/org/locationtech/jts/triangulate/IncrementalDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LastFoundQuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LocateFailureException.js","../src/org/locationtech/jts/triangulate/quadedge/TriangleVisitor.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeSubdivision.js","../src/org/locationtech/jts/triangulate/Segment.js","../src/org/locationtech/jts/triangulate/ConstraintEnforcementException.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/DelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/VoronoiDiagramBuilder.js","../src/org/locationtech/jts/linearref/LinearIterator.js","../src/org/locationtech/jts/linearref/LengthIndexOfPoint.js","../src/org/locationtech/jts/linearref/LinearLocation.js","../src/org/locationtech/jts/linearref/LocationIndexOfPoint.js","../src/org/locationtech/jts/linearref/LocationIndexOfLine.js","../src/org/locationtech/jts/linearref/LengthLocationMap.js","../src/org/locationtech/jts/linearref/LinearGeometryBuilder.js","../src/org/locationtech/jts/linearref/ExtractLineByLocation.js","../src/org/locationtech/jts/linearref/LengthIndexedLine.js","../src/org/locationtech/jts/linearref/LocationIndexedLine.js","../src/org/locationtech/jts/util/CollectionUtil.js","../src/org/locationtech/jts/util/CoordinateArrayFilter.js","../src/org/locationtech/jts/util/CoordinateCountFilter.js","../src/org/locationtech/jts/util/ObjectCounter.js","../src/java/io/PrintStream.js","../src/java/io/StringReader.js","../src/java/io/ByteArrayOutputStream.js","../src/java/io/IOException.js","../src/java/io/LineNumberReader.js","../src/org/locationtech/jts/util/StringUtil.js","../src/org/locationtech/jts/monkey.js","../src/jsts.js"],"sourcesContent":["export default class NumberUtil {\n  static equalsWithTolerance(x1, x2, tolerance) {\n    return Math.abs(x1 - x2) <= tolerance\n  }\n}\n","export default class Exception extends Error {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ Exception })[0]\n  }\n  toString() {\n    return this.message\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class IllegalArgumentException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IllegalArgumentException })[0]\n  }\n}\n","export default class Long {\n  constructor(high, low) {\n    this.low = low || 0\n    this.high = high || 0\n  }\n\n  static toBinaryString(i) {\n    let mask\n    let result = ''\n    for (mask = 0x80000000; mask > 0; mask >>>= 1)\n      result += (i.high & mask) === mask ? '1' : '0'\n    for (mask = 0x80000000; mask > 0; mask >>>= 1)\n      result += (i.low & mask) === mask ? '1' : '0'\n    return result\n  }\n}\n","import Long from './Long.js'\n\nexport default function Double() { }\n\nDouble.NaN = NaN\nDouble.isNaN = n => Number.isNaN(n)\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\nDouble.POSITIVE_INFINITY = Number.POSITIVE_INFINITY\nDouble.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY\n\nif (typeof Float64Array === 'function' &&\n  typeof Int32Array === 'function')\n// Simple and fast conversion between double and long bits\n// using TypedArrays and ArrayViewBuffers.\n\n  (function() {\n    const EXP_BIT_MASK = 0x7ff00000\n    const SIGNIF_BIT_MASK = 0xFFFFF\n    const f64buf = new Float64Array(1)\n    const i32buf = new Int32Array(f64buf.buffer)\n    Double.doubleToLongBits = function(value) {\n      f64buf[0] = value\n      let low = i32buf[0] | 0\n      let high = i32buf[1] | 0\n      // Check for NaN based on values of bit fields, maximum\n      // exponent and nonzero significand.\n      if (((high & EXP_BIT_MASK) === EXP_BIT_MASK) &&\n        ((high & SIGNIF_BIT_MASK) !== 0) &&\n        (low !== 0)) {\n        low = 0 | 0\n        high = 0x7ff80000 | 0\n      }\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function(bits) {\n      i32buf[0] = bits.low\n      i32buf[1] = bits.high\n      return f64buf[0]\n    }\n  })()\nelse\n// More complex and slower fallback implementation using\n// math and the divide-by-two and multiply-by-two algorithms.\n\n  (function() {\n    const BIAS = 1023\n    const log2 = Math.log2\n    const floor = Math.floor\n    const pow = Math.pow\n    const MAX_REL_BITS_INTEGER = (function() {\n      for (let i = 53; i > 0; i--) {\n        const bits = pow(2, i) - 1\n        if (floor(log2(bits)) + 1 === i) return bits\n      }\n      return 0\n    })()\n    Double.doubleToLongBits = function(value) {\n      let x, y, f, bits, skip\n      let sign, exp, high, low\n\n      // Get the sign bit and absolute value.\n      if (value < 0 || 1 / value === Number.NEGATIVE_INFINITY) {\n        sign = (1 << 31)\n        value = (-value)\n      } else {\n        sign = 0\n      }\n\n      // Handle some special values.\n      if (value === 0) {\n        // Handle zeros (+/-0).\n        low = 0 | 0\n        high = sign // exponent: 00..00, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value === Infinity) {\n        // Handle infinity (only positive values for value possible).\n        low = 0 | 0\n        high = sign | 0x7ff00000 // exponent: 11..11, significand: 00..00\n        return new Long(high, low)\n      }\n\n      if (value !== value) { // eslint-disable-line\n        // Handle NaNs (boiled down to only one distinct NaN).\n        low = 0 | 0\n        high = 0x7ff80000 // exponent: 11..11, significand: 10..00\n        return new Long(high, low)\n      }\n\n      // Preinitialize variables, that are not neccessarily set by\n      // the algorithm.\n      bits = 0\n      low = 0 | 0\n\n      // Get the (always positive) integer part of value.\n      x = floor(value)\n\n      // Process the integer part if it's greater than 1. Zero requires\n      // no bits at all, 1 represents the implicit (hidden) leading bit,\n      // which must not be written as well.\n      if (x > 1)\n      // If we can reliably determine the number of bits required for\n      // the integer part,\n\n        if (x <= MAX_REL_BITS_INTEGER) {\n          // get the number of bits required to represent it minus 1\n          bits = floor(log2(x)) /* + 1 - 1 */\n          // and simply copy/shift the integer bits into low and high.\n          // That's much faster than the divide-by-two algorithm (saves\n          // up to ~60%).\n          // We always need to mask out the most significant bit, which\n          // is the implicit (aka hidden) bit.\n          if (bits <= 20) {\n            // The simple case in which the integer fits into the\n            // lower 20 bits of the high word is worth to be handled\n            // separately (saves ~25%).\n            low = 0 | 0\n            high = (x << (20 - bits)) & 0xfffff\n          } else {\n            // Here, the integer part is split into low and high.\n            // Since its value may require more than 32 bits, we\n            // cannot use bitwise operators (which implicitly cast\n            // to Int32), but use arithmetic operators % and / to\n            // get low and high parts. The uppper 20 bits go to high,\n            // the remaining bits (in f) to low.\n            f = bits - 20\n            // Like (1 << f) but safe with even more than 32 bits.\n            y = pow(2, f)\n            low = (x % y) << (32 - f)\n            high = (x / y) & 0xfffff\n          }\n        } else {\n          // For greater values, we must use the much slower divide-by-two\n          // algorithm. Bits are generated from right to left, that is from\n          // least to most significant bit. For each bit, we left-shift both\n          // low and high by one and carry bit #0 from high to #31 in low.\n          // The next bit is then copied into bit #19 in high, the leftmost\n          // bit of the double's significand.\n\n          // Preserve x for later user, so work with f.\n          f = x\n          low = 0 | 0\n          for (;;) {\n            y = f / 2\n            f = floor(y)\n            if (f === 0)\n            // We just found the most signigicant (1-)bit, which\n            // is the implicit bit and so, not stored in the double\n            // value. So, it's time to leave the loop.\n              break\n\n            // Count this bit, shift low and carry bit #0 from high.\n            bits++\n            low >>>= 1\n            low |= (high & 0x1) << 31\n            // Shift high.\n            high >>>= 1\n            if (y !== f)\n            // Copy the new bit into bit #19 in high (only required if 1).\n              high |= 0x80000\n          }\n        }\n\n      // Bias the exponent.\n      exp = bits + BIAS\n\n      // If the integer part is zero, we've not yet seen the implicit\n      // leading bit. Variable skip is later used while processing the\n      // fractional part (if any).\n      skip = (x === 0)\n\n      // Get fraction only into x.\n      x = value - x\n\n      // If some significand bits are still left to be filled and\n      // the fractional part is not zero, convert the fraction using\n      // the multiply-by-2 algorithm.\n      if (bits < 52 && x !== 0) {\n        // Initialize 'buffer' f, into which newly created bits get\n        // shifted from right to left.\n        f = 0\n\n        for (;;) {\n          y = x * 2\n          if (y >= 1) {\n            // This is a new 1-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y - 1\n            if (!skip) {\n              f <<= 1\n              f |= 1\n              bits++\n            } else {\n              // Otherwise, decrement the exponent and unset\n              // skip, so that all following bits get written.\n              exp--\n              skip = false\n            }\n          } else {\n            // This is a new 0-bit. Add and count this bit, if not\n            // prohibited by skip.\n            x = y\n            if (!skip) {\n              f <<= 1\n              bits++\n            } else if (--exp === 0) {\n              // Otherwise we've just decremented the exponent. If the\n              // biased exponent is zero now (-1023), we process a\n              // subnormal number, which has no impled leading 1-bit.\n              // So, count this 0-bit and unset skip to write out\n              // all the following bits.\n              bits++\n              skip = false\n            }\n          }\n          if (bits === 20) {\n            // When 20 bits have been created in total, we're done with\n            // the high word. Copy the bits from 'buffer' f into high\n            // and reset 'buffer' f. Following bits will end up in the\n            // low word.\n            high |= f\n            f = 0\n          } else if (bits === 52) {\n            // When 52 bits have been created in total, we're done with\n            // low word as well. Copy the bits from 'buffer' f into low\n            // and exit the loop.\n            low |= f\n            break\n          }\n          if (y === 1) {\n            // When y is exactly 1, there is no remainder and the process\n            // is complete (the number is finite). Copy the bits from\n            // 'buffer' f into either low or high and exit the loop.\n            if (bits < 20)\n              high |= (f << (20 - bits))\n            else if (bits < 52) low |= (f << (52 - bits))\n\n            break\n          }\n        }\n      }\n\n      // Copy/shift the exponent and sign bits into the high word.\n      high |= (exp << 20)\n      high |= sign\n\n      return new Long(high, low)\n    }\n    Double.longBitsToDouble = function(bits) {\n      let i\n      let x, exp, fract\n      const high = bits.high\n      const low = bits.low\n\n      // Extract the sign.\n      const sign = (high & (1 << 31)) ? -1 : 1\n\n      // Extract the unbiased exponent.\n      exp = ((high & 0x7ff00000) >> 20) - BIAS\n\n      // Calculate the fraction from left to right. Start\n      // off with the 20 lower bits from the high word.\n      fract = 0\n      x = (1 << 19)\n      for (i = 1; i <= 20; i++) {\n        if (high & x) fract += pow(2, -i)\n\n        x >>>= 1\n      }\n      // Continue with all 32 bits from the low word.\n      x = (1 << 31)\n      for (i = 21; i <= 52; i++) {\n        if (low & x) fract += pow(2, -i)\n\n        x >>>= 1\n      }\n\n      // Handle special values.\n      // Check for zero and subnormal values.\n      if (exp === -BIAS) {\n        if (fract === 0)\n        // +/-1.0 * 0.0 => +/-0.0\n          return sign * 0\n\n        exp = -1022\n      } else if (exp === BIAS + 1) { // Check for +/-Infinity or NaN.\n        if (fract === 0)\n        // +/-1.0 / 0.0 => +/-Infinity\n          return sign / 0\n\n        return NaN\n      } else { // Nothing special? Seems to be a normal number.\n        // Add the implicit leading bit (1*2^0).\n        fract += 1\n      }\n\n      return sign * fract * pow(2, exp)\n    }\n  })()\n","export default function Comparable() {}\n","export default function Clonable() {}\n","export default function Comparator() {}\n","export default function Serializable() {}\n","import Exception from './Exception.js'\n\nexport default class RuntimeException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ RuntimeException })[0]\n  }\n}\n","import RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class AssertionFailedException extends RuntimeException {\n  constructor() {\n    super()\n    AssertionFailedException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      RuntimeException.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      RuntimeException.constructor_.call(this, message)\n    }\n  }\n}\n","import AssertionFailedException from './AssertionFailedException.js'\nexport default class Assert {\n  static shouldNeverReachHere() {\n    if (arguments.length === 0) {\n      Assert.shouldNeverReachHere(null)\n    } else if (arguments.length === 1) {\n      const message = arguments[0]\n      throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n    }\n  }\n  static isTrue() {\n    if (arguments.length === 1) {\n      const assertion = arguments[0]\n      Assert.isTrue(assertion, null)\n    } else if (arguments.length === 2) {\n      const assertion = arguments[0], message = arguments[1]\n      if (!assertion) \n        if (message === null) \n          throw new AssertionFailedException()\n        else \n          throw new AssertionFailedException(message)\n        \n      \n    }\n  }\n  static equals() {\n    if (arguments.length === 2) {\n      const expectedValue = arguments[0], actualValue = arguments[1]\n      Assert.equals(expectedValue, actualValue, null)\n    } else if (arguments.length === 3) {\n      const expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2]\n      if (!actualValue.equals(expectedValue)) \n        throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n      \n    }\n  }\n}\n","import NumberUtil from '../util/NumberUtil.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Comparator from '../../../../java/util/Comparator.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Assert from '../util/Assert.js'\n\nconst kBuf = new ArrayBuffer(8)\nconst kBufAsF64 = new Float64Array(kBuf)\nconst kBufAsI32 = new Int32Array(kBuf)\n\nexport default class Coordinate {\n  constructor() {\n    Coordinate.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.x = null\n    this.y = null\n    this.z = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this, 0.0, 0.0)\n    } else if (arguments.length === 1) {\n      const c = arguments[0]\n      Coordinate.constructor_.call(this, c.x, c.y, c.getZ())\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n    } else if (arguments.length === 3) {\n      const x = arguments[0], y = arguments[1], z = arguments[2]\n      this.x = x\n      this.y = y\n      this.z = z\n    }\n  }\n  static hashCode(n) {\n    kBufAsF64[0] = n\n    return kBufAsI32[0] ^ kBufAsI32[1]\n  }\n  getM() {\n    return Double.NaN\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value\n      break\n    case Coordinate.Y:\n      this.y = value\n      break\n    case Coordinate.Z:\n      this.setZ(value)\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  equals2D() {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      if (this.x !== other.x) \n        return false\n      \n      if (this.y !== other.y) \n        return false\n      \n      return true\n    } else if (arguments.length === 2) {\n      const c = arguments[0], tolerance = arguments[1]\n      if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) \n        return false\n      \n      if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) \n        return false\n      \n      return true\n    }\n  }\n  setM(m) {\n    throw new IllegalArgumentException('Invalid ordinate index: ' + Coordinate.M)\n  }\n  getZ() {\n    return this.z\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.getZ()\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  equals3D(other) {\n    return this.x === other.x && this.y === other.y && (this.getZ() === other.getZ() || Double.isNaN(this.getZ()) && Double.isNaN(other.getZ()))\n  }\n  equals(other) {\n    if (!(other instanceof Coordinate)) \n      return false\n    \n    return this.equals2D(other)\n  }\n  equalInZ(c, tolerance) {\n    return NumberUtil.equalsWithTolerance(this.getZ(), c.getZ(), tolerance)\n  }\n  setX(x) {\n    this.x = x\n  }\n  compareTo(o) {\n    const other = o\n    if (this.x < other.x) return -1\n    if (this.x > other.x) return 1\n    if (this.y < other.y) return -1\n    if (this.y > other.y) return 1\n    return 0\n  }\n  getX() {\n    return this.x\n  }\n  setZ(z) {\n    this.z = z\n  }\n  clone() {\n    try {\n      const coord = null\n      return coord\n    } catch (e) {\n      if (e instanceof CloneNotSupportedException) {\n        Assert.shouldNeverReachHere('this shouldn\\'t happen because this class is Cloneable')\n        return null\n      } else {\n        throw e\n      }\n    } finally {}\n  }\n  copy() {\n    return new Coordinate(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ', ' + this.getZ() + ')'\n  }\n  distance3D(c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    const dz = this.getZ() - c.getZ()\n    return Math.sqrt(dx * dx + dy * dy + dz * dz)\n  }\n  getY() {\n    return this.y\n  }\n  setY(y) {\n    this.y = y\n  }\n  distance(c) {\n    const dx = this.x - c.x\n    const dy = this.y - c.y\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  hashCode() {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this.x)\n    result = 37 * result + Coordinate.hashCode(this.y)\n    return result\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n  }\n  get interfaces_() {\n    return [Comparable, Cloneable, Serializable]\n  }\n}\nclass DimensionalComparator {\n  constructor() {\n    DimensionalComparator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dimensionsToTest = 2\n    if (arguments.length === 0) {\n      DimensionalComparator.constructor_.call(this, 2)\n    } else if (arguments.length === 1) {\n      const dimensionsToTest = arguments[0]\n      if (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException('only 2 or 3 dimensions may be specified')\n      this._dimensionsToTest = dimensionsToTest\n    }\n  }\n  static compare(a, b) {\n    if (a < b) return -1\n    if (a > b) return 1\n    if (Double.isNaN(a)) {\n      if (Double.isNaN(b)) return 0\n      return -1\n    }\n    if (Double.isNaN(b)) return 1\n    return 0\n  }\n  compare(c1, c2) {\n    const compX = DimensionalComparator.compare(c1.x, c2.x)\n    if (compX !== 0) return compX\n    const compY = DimensionalComparator.compare(c1.y, c2.y)\n    if (compY !== 0) return compY\n    if (this._dimensionsToTest <= 2) return 0\n    const compZ = DimensionalComparator.compare(c1.getZ(), c2.getZ())\n    return compZ\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nCoordinate.DimensionalComparator = DimensionalComparator\nCoordinate.NULL_ORDINATE = Double.NaN\nCoordinate.X = 0\nCoordinate.Y = 1\nCoordinate.Z = 2\nCoordinate.M = 3\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXY extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXY.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXY) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n    }\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateXY.X:\n      this.x = value\n      break\n    case CoordinateXY.Y:\n      this.y = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  getZ() {\n    return Coordinate.NULL_ORDINATE\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateXY.X:\n      return this.x\n    case CoordinateXY.Y:\n      return this.y\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  setZ(z) {\n    throw new IllegalArgumentException('CoordinateXY dimension 2 does not support z-ordinate')\n  }\n  copy() {\n    return new CoordinateXY(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n  }\n}\nCoordinateXY.X = 0\nCoordinateXY.Y = 1\nCoordinateXY.Z = -1\nCoordinateXY.M = -1\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXYM extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXYM.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n      this._m = 0.0\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXYM) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n        this._m = coord._m\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord.x, coord.y)\n        this._m = this.getM()\n      }\n    } else if (arguments.length === 3) {\n      const x = arguments[0], y = arguments[1], m = arguments[2]\n      Coordinate.constructor_.call(this, x, y, Coordinate.NULL_ORDINATE)\n      this._m = m\n    }\n  }\n  getM() {\n    return this._m\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateXYM.X:\n      this.x = value\n      break\n    case CoordinateXYM.Y:\n      this.y = value\n      break\n    case CoordinateXYM.M:\n      this._m = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  setM(m) {\n    this._m = m\n  }\n  getZ() {\n    return Coordinate.NULL_ORDINATE\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateXYM.X:\n      return this.x\n    case CoordinateXYM.Y:\n      return this.y\n    case CoordinateXYM.M:\n      return this._m\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  setZ(z) {\n    throw new IllegalArgumentException('CoordinateXY dimension 2 does not support z-ordinate')\n  }\n  copy() {\n    return new CoordinateXYM(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ' m=' + this.getM() + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n    this._m = other.getM()\n  }\n}\nCoordinateXYM.X = 0\nCoordinateXYM.Y = 1\nCoordinateXYM.Z = -1\nCoordinateXYM.M = 2\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class CoordinateXYZM extends Coordinate {\n  constructor() {\n    super()\n    CoordinateXYZM.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m = null\n    if (arguments.length === 0) {\n      Coordinate.constructor_.call(this)\n      this._m = 0.0\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof CoordinateXYZM) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord)\n        this._m = coord._m\n      } else if (arguments[0] instanceof Coordinate) {\n        const coord = arguments[0]\n        Coordinate.constructor_.call(this, coord)\n        this._m = this.getM()\n      }\n    } else if (arguments.length === 4) {\n      const x = arguments[0], y = arguments[1], z = arguments[2], m = arguments[3]\n      Coordinate.constructor_.call(this, x, y, z)\n      this._m = m\n    }\n  }\n  getM() {\n    return this._m\n  }\n  setOrdinate(ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value\n      break\n    case Coordinate.Y:\n      this.y = value\n      break\n    case Coordinate.Z:\n      this.z = value\n      break\n    case Coordinate.M:\n      this._m = value\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n    }\n  }\n  setM(m) {\n    this._m = m\n  }\n  getOrdinate(ordinateIndex) {\n    switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.getZ()\n    case Coordinate.M:\n      return this.getM()\n    }\n    throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n  copy() {\n    return new CoordinateXYZM(this)\n  }\n  toString() {\n    return '(' + this.x + ', ' + this.y + ', ' + this.getZ() + ' m=' + this.getM() + ')'\n  }\n  setCoordinate(other) {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.getZ()\n    this._m = other.getM()\n  }\n}\n","export default function(o, i) {\n  return o.interfaces_ && o.interfaces_.indexOf(i) > -1\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n */\nexport default class Collection {\n  /**\n     * Ensures that this collection contains the specified element (optional\n     * operation).\n     * @param {Object} e\n     * @return {boolean}\n     */\n  add() { }\n  /**\n     * Appends all of the elements in the specified collection to the end of this\n     * list, in the order that they are returned by the specified collection's\n     * iterator (optional operation).\n     * @param {javascript.util.Collection} c\n     * @return {boolean}\n     */\n  addAll() { }\n  /**\n     * Returns true if this collection contains no elements.\n     * @return {boolean}\n     */\n  isEmpty() { }\n  /**\n     * Returns an iterator over the elements in this collection.\n     * @return {javascript.util.Iterator}\n     */\n  iterator() { }\n  /**\n     * Returns an iterator over the elements in this collection.\n     * @return {number}\n     */\n  size() { }\n  /**\n     * Returns an array containing all of the elements in this collection.\n     * @return {Array}\n     */\n  toArray() { }\n  /**\n     * Removes a single instance of the specified element from this collection if it\n     * is present. (optional)\n     * @param {Object} e\n     * @return {boolean}\n     */\n  remove() { }\n}\n","import Exception from './Exception.js'\n\nexport default class IndexOutOfBoundsException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IndexOutOfBoundsException })[0]\n  } \n}","import Collection from './Collection.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n */\nexport default class List extends Collection {\n  /**\n     * Returns the element at the specified position in this list.\n     * @param {number} index\n     * @return {Object}\n     */\n  get() { }\n  /**\n     * Replaces the element at the specified position in this list with the\n     * specified element (optional operation).\n     * @param {number} index\n     * @param {Object} e\n     * @return {Object}\n     */\n  set() { }\n  /**\n     * Returns true if this collection contains no elements.\n     * @return {boolean}\n     */\n  isEmpty() { }\n}\n","import Exception from '../lang/Exception.js'\n\nexport default class NoSuchElementException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ NoSuchElementException })[0]\n  }\n}","import Collection from './Collection.js'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException.js'\nimport List from './List.js'\nimport NoSuchElementException from './NoSuchElementException.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n */\nexport default class ArrayList extends List {\n\n  constructor(o) {\n    super()\n    this.array = []\n    if (o instanceof Collection) this.addAll(o)\n  }\n\n  get interfaces_() {\n    return [List, Collection]\n  }\n\n  ensureCapacity() { }\n\n  add(e) {\n    if (arguments.length === 1)\n      this.array.push(e)\n    else\n      this.array.splice(arguments[0], 0, arguments[1])\n    return true\n  }\n\n  clear() {\n    this.array = []\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.array.push(e)\n  }\n\n  set(index, element) {\n    const oldElement = this.array[index]\n    this.array[index] = element\n    return oldElement\n  }\n\n  iterator() {\n    return new Iterator(this)\n  }\n\n  get(index) {\n    if (index < 0 || index >= this.size())\n      throw new IndexOutOfBoundsException()\n    return this.array[index]\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n\n  sort(comparator) {\n    if (comparator)\n      this.array.sort((a, b) => comparator.compare(a, b))\n    else this.array.sort()\n  }\n\n  size() {\n    return this.array.length\n  }\n\n  toArray() {\n    return this.array.slice()\n  }\n\n  remove(o) {\n    for (let i = 0, len = this.array.length; i < len; i++)\n      if (this.array[i] === o)\n        return !!this.array.splice(i, 1)\n    return false\n  }\n\n  [Symbol.iterator]() {\n    return this.array.values()\n  }\n}\n\nclass Iterator {\n  constructor(arrayList) {\n    this.arrayList = arrayList\n    this.position = 0\n  }\n\n  next() {\n    if (this.position === this.arrayList.size())\n      throw new NoSuchElementException()\n    return this.arrayList.get(this.position++)\n  }\n\n  hasNext() {\n    return this.position < this.arrayList.size()\n  }\n\n  set(element) {\n    return this.arrayList.set(this.position - 1, element)\n  }\n\n  remove() {\n    this.arrayList.remove(this.arrayList.get(this.position))\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport Coordinate from './Coordinate.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class CoordinateList extends ArrayList {\n  constructor() {\n    super()\n    CoordinateList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const coord = arguments[0]\n      this.ensureCapacity(coord.length)\n      this.add(coord, true)\n    } else if (arguments.length === 2) {\n      const coord = arguments[0], allowRepeated = arguments[1]\n      this.ensureCapacity(coord.length)\n      this.add(coord, allowRepeated)\n    }\n  }\n  getCoordinate(i) {\n    return this.get(i)\n  }\n  addAll() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'boolean' && hasInterface(arguments[0], Collection))) {\n      const coll = arguments[0], allowRepeated = arguments[1]\n      let isChanged = false\n      for (let i = coll.iterator(); i.hasNext(); ) {\n        this.add(i.next(), allowRepeated)\n        isChanged = true\n      }\n      return isChanged\n    } else {\n      return super.addAll.apply(this, arguments)\n    }\n  }\n  clone() {\n    const clone = super.clone.call(this)\n    for (let i = 0; i < this.size(); i++) \n      clone.add(i, this.get(i).clone())\n    \n    return clone\n  }\n  toCoordinateArray() {\n    if (arguments.length === 0) {\n      return this.toArray(CoordinateList.coordArrayType)\n    } else if (arguments.length === 1) {\n      const isForward = arguments[0]\n      if (isForward) \n        return this.toArray(CoordinateList.coordArrayType)\n      \n      const size = this.size()\n      const pts = new Array(size).fill(null)\n      for (let i = 0; i < size; i++) \n        pts[i] = this.get(size - i - 1)\n      \n      return pts\n    }\n  }\n  add() {\n    if (arguments.length === 1) {\n      const coord = arguments[0]\n      return super.add.call(this, coord)\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0], allowRepeated = arguments[1]\n        this.add(coord, allowRepeated, true)\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        const coord = arguments[0], allowRepeated = arguments[1]\n        if (!allowRepeated) \n          if (this.size() >= 1) {\n            const last = this.get(this.size() - 1)\n            if (last.equals2D(coord)) return null\n          }\n        \n        super.add.call(this, coord)\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        const obj = arguments[0], allowRepeated = arguments[1]\n        this.add(obj, allowRepeated)\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        const coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2]\n        if (direction) \n          for (let i = 0; i < coord.length; i++) \n            this.add(coord[i], allowRepeated)\n          \n        else \n          for (let i = coord.length - 1; i >= 0; i--) \n            this.add(coord[i], allowRepeated)\n          \n        \n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        const i = arguments[0], coord = arguments[1], allowRepeated = arguments[2]\n        if (!allowRepeated) {\n          const size = this.size()\n          if (size > 0) {\n            if (i > 0) {\n              const prev = this.get(i - 1)\n              if (prev.equals2D(coord)) return null\n            }\n            if (i < size) {\n              const next = this.get(i)\n              if (next.equals2D(coord)) return null\n            }\n          }\n        }\n        super.add.call(this, i, coord)\n      }\n    } else if (arguments.length === 4) {\n      const coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3]\n      let inc = 1\n      if (start > end) inc = -1\n      for (let i = start; i !== end; i += inc) \n        this.add(coord[i], allowRepeated)\n      \n      return true\n    }\n  }\n  closeRing() {\n    if (this.size() > 0) {\n      const duplicate = this.get(0).copy()\n      this.add(duplicate, false)\n    }\n  }\n}\nCoordinateList.coordArrayType = new Array(0).fill(null)\n","export default class CoordinateSequenceFilter {\n  filter(seq, i) {}\n  isDone() {}\n  isGeometryChanged() {}\n}\n","import Coordinate from './Coordinate.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class Envelope {\n  constructor() {\n    Envelope.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._minx = null\n    this._maxx = null\n    this._miny = null\n    this._maxy = null\n    if (arguments.length === 0) {\n      this.init()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this.init(env)\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0], p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3]\n      this.init(x1, x2, y1, y2)\n    }\n  }\n  static intersects() {\n    if (arguments.length === 3) {\n      const p1 = arguments[0], p2 = arguments[1], q = arguments[2]\n      if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) \n        return true\n      \n      return false\n    } else if (arguments.length === 4) {\n      const p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3]\n      let minq = Math.min(q1.x, q2.x)\n      let maxq = Math.max(q1.x, q2.x)\n      let minp = Math.min(p1.x, p2.x)\n      let maxp = Math.max(p1.x, p2.x)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      minq = Math.min(q1.y, q2.y)\n      maxq = Math.max(q1.y, q2.y)\n      minp = Math.min(p1.y, p2.y)\n      maxp = Math.max(p1.y, p2.y)\n      if (minp > maxq) return false\n      if (maxp < minq) return false\n      return true\n    }\n  }\n  getArea() {\n    return this.getWidth() * this.getHeight()\n  }\n  equals(other) {\n    if (!(other instanceof Envelope)) \n      return false\n    \n    const otherEnvelope = other\n    if (this.isNull()) \n      return otherEnvelope.isNull()\n    \n    return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n  }\n  intersection(env) {\n    if (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope()\n    const intMinX = this._minx > env._minx ? this._minx : env._minx\n    const intMinY = this._miny > env._miny ? this._miny : env._miny\n    const intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx\n    const intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy\n    return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n  }\n  isNull() {\n    return this._maxx < this._minx\n  }\n  getMaxX() {\n    return this._maxx\n  }\n  covers() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) \n          return false\n        \n        return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (this.isNull()) return false\n      return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n    }\n  }\n  intersects() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (this.isNull() || other.isNull()) \n          return false\n        \n        return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.intersects(p.x, p.y)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const a = arguments[0], b = arguments[1]\n        if (this.isNull()) \n          return false\n        \n        const envminx = a.x < b.x ? a.x : b.x\n        if (envminx > this._maxx) return false\n        const envmaxx = a.x > b.x ? a.x : b.x\n        if (envmaxx < this._minx) return false\n        const envminy = a.y < b.y ? a.y : b.y\n        if (envminy > this._maxy) return false\n        const envmaxy = a.y > b.y ? a.y : b.y\n        if (envmaxy < this._miny) return false\n        return true\n      } else if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n        const x = arguments[0], y = arguments[1]\n        if (this.isNull()) return false\n        return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n      }\n    }\n  }\n  getMinY() {\n    return this._miny\n  }\n  getDiameter() {\n    if (this.isNull()) \n      return 0\n    \n    const w = this.getWidth()\n    const h = this.getHeight()\n    return Math.sqrt(w * w + h * h)\n  }\n  getMinX() {\n    return this._minx\n  }\n  expandToInclude() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.expandToInclude(p.x, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        if (other.isNull()) \n          return null\n        \n        if (this.isNull()) {\n          this._minx = other.getMinX()\n          this._maxx = other.getMaxX()\n          this._miny = other.getMinY()\n          this._maxy = other.getMaxY()\n        } else {\n          if (other._minx < this._minx) \n            this._minx = other._minx\n          \n          if (other._maxx > this._maxx) \n            this._maxx = other._maxx\n          \n          if (other._miny < this._miny) \n            this._miny = other._miny\n          \n          if (other._maxy > this._maxy) \n            this._maxy = other._maxy\n          \n        }\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (this.isNull()) {\n        this._minx = x\n        this._maxx = x\n        this._miny = y\n        this._maxy = y\n      } else {\n        if (x < this._minx) \n          this._minx = x\n        \n        if (x > this._maxx) \n          this._maxx = x\n        \n        if (y < this._miny) \n          this._miny = y\n        \n        if (y > this._maxy) \n          this._maxy = y\n        \n      }\n    }\n  }\n  minExtent() {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w < h) return w\n    return h\n  }\n  getWidth() {\n    if (this.isNull()) \n      return 0\n    \n    return this._maxx - this._minx\n  }\n  compareTo(o) {\n    const env = o\n    if (this.isNull()) {\n      if (env.isNull()) return 0\n      return -1\n    } else {\n      if (env.isNull()) return 1\n    }\n    if (this._minx < env._minx) return -1\n    if (this._minx > env._minx) return 1\n    if (this._miny < env._miny) return -1\n    if (this._miny > env._miny) return 1\n    if (this._maxx < env._maxx) return -1\n    if (this._maxx > env._maxx) return 1\n    if (this._maxy < env._maxy) return -1\n    if (this._maxy > env._maxy) return 1\n    return 0\n  }\n  translate(transX, transY) {\n    if (this.isNull()) \n      return null\n    \n    this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY)\n  }\n  copy() {\n    return new Envelope(this)\n  }\n  toString() {\n    return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n  }\n  setToNull() {\n    this._minx = 0\n    this._maxx = -1\n    this._miny = 0\n    this._maxy = -1\n  }\n  disjoint(other) {\n    if (this.isNull() || other.isNull()) \n      return true\n    \n    return other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny\n  }\n  getHeight() {\n    if (this.isNull()) \n      return 0\n    \n    return this._maxy - this._miny\n  }\n  maxExtent() {\n    if (this.isNull()) return 0.0\n    const w = this.getWidth()\n    const h = this.getHeight()\n    if (w > h) return w\n    return h\n  }\n  expandBy() {\n    if (arguments.length === 1) {\n      const distance = arguments[0]\n      this.expandBy(distance, distance)\n    } else if (arguments.length === 2) {\n      const deltaX = arguments[0], deltaY = arguments[1]\n      if (this.isNull()) return null\n      this._minx -= deltaX\n      this._maxx += deltaX\n      this._miny -= deltaY\n      this._maxy += deltaY\n      if (this._minx > this._maxx || this._miny > this._maxy) this.setToNull()\n    }\n  }\n  contains() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Envelope) {\n        const other = arguments[0]\n        return this.covers(other)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this.covers(p)\n      }\n    } else if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      return this.covers(x, y)\n    }\n  }\n  centre() {\n    if (this.isNull()) return null\n    return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n  }\n  init() {\n    if (arguments.length === 0) {\n      this.setToNull()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        this.init(p.x, p.x, p.y, p.y)\n      } else if (arguments[0] instanceof Envelope) {\n        const env = arguments[0]\n        this._minx = env._minx\n        this._maxx = env._maxx\n        this._miny = env._miny\n        this._maxy = env._maxy\n      }\n    } else if (arguments.length === 2) {\n      const p1 = arguments[0], p2 = arguments[1]\n      this.init(p1.x, p2.x, p1.y, p2.y)\n    } else if (arguments.length === 4) {\n      const x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3]\n      if (x1 < x2) {\n        this._minx = x1\n        this._maxx = x2\n      } else {\n        this._minx = x2\n        this._maxx = x1\n      }\n      if (y1 < y2) {\n        this._miny = y1\n        this._maxy = y2\n      } else {\n        this._miny = y2\n        this._maxy = y1\n      }\n    }\n  }\n  getMaxY() {\n    return this._maxy\n  }\n  distance(env) {\n    if (this.intersects(env)) return 0\n    let dx = 0.0\n    if (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx\n    let dy = 0.0\n    if (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy\n    if (dx === 0.0) return dy\n    if (dy === 0.0) return dx\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  hashCode() {\n    let result = 17\n    result = 37 * result + Coordinate.hashCode(this._minx)\n    result = 37 * result + Coordinate.hashCode(this._maxx)\n    result = 37 * result + Coordinate.hashCode(this._miny)\n    result = 37 * result + Coordinate.hashCode(this._maxy)\n    return result\n  }\n  get interfaces_() {\n    return [Comparable, Serializable]\n  }\n}\n","export default class StringBuffer {\n  constructor(str) {\n    this.str = str\n  }\n  append(e) {\n    this.str += e\n  }\n  setCharAt(i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  toString() {\n    return this.str\n  }\n}","export default class Integer {\n  constructor(value) {\n    this.value = value\n  }\n\n  intValue() {\n    return this.value\n  }\n\n  compareTo(o) {\n    if (this.value < o)\n      return -1\n    if (this.value > o)\n      return 1\n    return 0\n  }\n\n  static compare(x, y) {\n    if (x < y)\n      return -1\n    if (x > y)\n      return 1\n    return 0\n  }\n\n  static isNan(n) {\n    return Number.isNaN(n)\n  }\n\n  static valueOf(value) {\n    return new Integer(value)\n  }\n}\n","export default class Character {\n  static isWhitespace(c) {\n    return ((c <= 32 && c >= 0) || c === 127)\n  }\n\n  static toUpperCase(c) {\n    return c.toUpperCase()\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class IllegalStateException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ IllegalStateException })[0]\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport Character from '../../../../java/lang/Character.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport IllegalStateException from '../../../../java/lang/IllegalStateException.js'\nexport default class DD {\n  constructor() {\n    DD.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hi = 0.0\n    this._lo = 0.0\n    if (arguments.length === 0) {\n      this.init(0.0)\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this.init(x)\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this.init(dd)\n      } else if (typeof arguments[0] === 'string') {\n        const str = arguments[0]\n        DD.constructor_.call(this, DD.parse(str))\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0], lo = arguments[1]\n      this.init(hi, lo)\n    }\n  }\n  static determinant() {\n    if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      return DD.determinant(DD.valueOf(x1), DD.valueOf(y1), DD.valueOf(x2), DD.valueOf(y2))\n    } else if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det\n    }\n  }\n  static sqr(x) {\n    return DD.valueOf(x).selfMultiply(x)\n  }\n  static valueOf() {\n    if (typeof arguments[0] === 'string') {\n      const str = arguments[0]\n      return DD.parse(str)\n    } else if (typeof arguments[0] === 'number') {\n      const x = arguments[0]\n      return new DD(x)\n    }\n  }\n  static sqrt(x) {\n    return DD.valueOf(x).sqrt()\n  }\n  static parse(str) {\n    let i = 0\n    const strlen = str.length\n    while (Character.isWhitespace(str.charAt(i))) i++\n    let isNegative = false\n    if (i < strlen) {\n      const signCh = str.charAt(i)\n      if (signCh === '-' || signCh === '+') {\n        i++\n        if (signCh === '-') isNegative = true\n      }\n    }\n    const val = new DD()\n    let numDigits = 0\n    let numBeforeDec = 0\n    let exp = 0\n    let hasDecimalChar = false\n    while (true) {\n      if (i >= strlen) break\n      const ch = str.charAt(i)\n      i++\n      if (Character.isDigit(ch)) {\n        const d = ch - '0'\n        val.selfMultiply(DD.TEN)\n        val.selfAdd(d)\n        numDigits++\n        continue\n      }\n      if (ch === '.') {\n        numBeforeDec = numDigits\n        hasDecimalChar = true\n        continue\n      }\n      if (ch === 'e' || ch === 'E') {\n        const expStr = str.substring(i)\n        try {\n          exp = Integer.parseInt(expStr)\n        } catch (ex) {\n          if (ex instanceof NumberFormatException) \n            throw new NumberFormatException('Invalid exponent ' + expStr + ' in string ' + str)\n          else throw ex\n        } finally {}\n        break\n      }\n      throw new NumberFormatException('Unexpected character \\'' + ch + '\\' at position ' + i + ' in string ' + str)\n    }\n    let val2 = val\n    if (!hasDecimalChar) numBeforeDec = numDigits\n    const numDecPlaces = numDigits - numBeforeDec - exp\n    if (numDecPlaces === 0) {\n      val2 = val\n    } else if (numDecPlaces > 0) {\n      const scale = DD.TEN.pow(numDecPlaces)\n      val2 = val.divide(scale)\n    } else if (numDecPlaces < 0) {\n      const scale = DD.TEN.pow(-numDecPlaces)\n      val2 = val.multiply(scale)\n    }\n    if (isNegative) \n      return val2.negate()\n    \n    return val2\n  }\n  static createNaN() {\n    return new DD(Double.NaN, Double.NaN)\n  }\n  static copy(dd) {\n    return new DD(dd)\n  }\n  static magnitude(x) {\n    const xAbs = Math.abs(x)\n    const xLog10 = Math.log(xAbs) / Math.log(10)\n    let xMag = Math.trunc(Math.floor(xLog10))\n    const xApprox = Math.pow(10, xMag)\n    if (xApprox * 10 <= xAbs) xMag += 1\n    return xMag\n  }\n  static stringOfChar(ch, len) {\n    const buf = new StringBuffer()\n    for (let i = 0; i < len; i++) \n      buf.append(ch)\n    \n    return buf.toString()\n  }\n  le(y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo\n  }\n  extractSignificantDigits(insertDecimalPoint, magnitude) {\n    let y = this.abs()\n    let mag = DD.magnitude(y._hi)\n    const scale = DD.TEN.pow(mag)\n    y = y.divide(scale)\n    if (y.gt(DD.TEN)) {\n      y = y.divide(DD.TEN)\n      mag += 1\n    } else if (y.lt(DD.ONE)) {\n      y = y.multiply(DD.TEN)\n      mag -= 1\n    }\n    const decimalPointPos = mag + 1\n    const buf = new StringBuffer()\n    const numDigits = DD.MAX_PRINT_DIGITS - 1\n    for (let i = 0; i <= numDigits; i++) {\n      if (insertDecimalPoint && i === decimalPointPos) \n        buf.append('.')\n      \n      const digit = Math.trunc(y._hi)\n      if (digit < 0 || digit > 9) {}\n      if (digit < 0) \n        break\n      \n      let rebiasBy10 = false\n      let digitChar = 0\n      if (digit > 9) {\n        rebiasBy10 = true\n        digitChar = '9'\n      } else {\n        digitChar = '0' + digit\n      }\n      buf.append(digitChar)\n      y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN)\n      if (rebiasBy10) y.selfAdd(DD.TEN)\n      let continueExtractingDigits = true\n      const remMag = DD.magnitude(y._hi)\n      if (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false\n      if (!continueExtractingDigits) break\n    }\n    magnitude[0] = mag\n    return buf.toString()\n  }\n  sqr() {\n    return this.multiply(this)\n  }\n  doubleValue() {\n    return this._hi + this._lo\n  }\n  subtract() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this.add(y.negate())\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return this.add(-y)\n    }\n  }\n  equals() {\n    if (arguments.length === 1 && arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return this._hi === y._hi && this._lo === y._lo\n    }\n  }\n  isZero() {\n    return this._hi === 0.0 && this._lo === 0.0\n  }\n  selfSubtract() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y._hi, -y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (this.isNaN()) return this\n      return this.selfAdd(-y, 0.0)\n    }\n  }\n  getSpecialNumberString() {\n    if (this.isZero()) return '0.0'\n    if (this.isNaN()) return 'NaN '\n    return null\n  }\n  min(x) {\n    if (this.le(x)) \n      return this\n    else \n      return x\n    \n  }\n  selfDivide() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfDivide(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfDivide(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n      C = this._hi / yhi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * yhi\n      hc = c - hc\n      tc = C - hc\n      hy = u - yhi\n      U = C * yhi\n      hy = u - hy\n      ty = yhi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * ylo) / yhi\n      u = C + c\n      this._hi = u\n      this._lo = C - u + c\n      return this\n    }\n  }\n  dump() {\n    return 'DD<' + this._hi + ', ' + this._lo + '>'\n  }\n  divide() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n      C = this._hi / y._hi\n      c = DD.SPLIT * C\n      hc = c - C\n      u = DD.SPLIT * y._hi\n      hc = c - hc\n      tc = C - hc\n      hy = u - y._hi\n      U = C * y._hi\n      hy = u - hy\n      ty = y._hi - hy\n      u = hc * hy - U + hc * ty + tc * hy + tc * ty\n      c = (this._hi - U - u + this._lo - C * y._lo) / y._hi\n      u = C + c\n      const zhi = u\n      const zlo = C - u + c\n      return new DD(zhi, zlo)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfDivide(y, 0.0)\n    }\n  }\n  ge(y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo\n  }\n  pow(exp) {\n    if (exp === 0.0) return DD.valueOf(1.0)\n    let r = new DD(this)\n    let s = DD.valueOf(1.0)\n    let n = Math.abs(exp)\n    if (n > 1) \n      while (n > 0) {\n        if (n % 2 === 1) \n          s.selfMultiply(r)\n        \n        n /= 2\n        if (n > 0) r = r.sqr()\n      }\n    else \n      s = r\n    \n    if (exp < 0) return s.reciprocal()\n    return s\n  }\n  ceil() {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.ceil(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) \n      flo = Math.ceil(this._lo)\n    \n    return new DD(fhi, flo)\n  }\n  compareTo(o) {\n    const other = o\n    if (this._hi < other._hi) return -1\n    if (this._hi > other._hi) return 1\n    if (this._lo < other._lo) return -1\n    if (this._lo > other._lo) return 1\n    return 0\n  }\n  rint() {\n    if (this.isNaN()) return this\n    const plus5 = this.add(0.5)\n    return plus5.floor()\n  }\n  setValue() {\n    if (arguments[0] instanceof DD) {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    } else if (typeof arguments[0] === 'number') {\n      const value = arguments[0]\n      this.init(value)\n      return this\n    }\n  }\n  max(x) {\n    if (this.ge(x)) \n      return this\n    else \n      return x\n    \n  }\n  sqrt() {\n    if (this.isZero()) return DD.valueOf(0.0)\n    if (this.isNegative()) \n      return DD.NaN\n    \n    const x = 1.0 / Math.sqrt(this._hi)\n    const ax = this._hi * x\n    const axdd = DD.valueOf(ax)\n    const diffSq = this.subtract(axdd.sqr())\n    const d2 = diffSq._hi * (x * 0.5)\n    return axdd.add(d2)\n  }\n  selfAdd() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfAdd(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        let H = null, h = null, S = null, s = null, e = null, f = null\n        S = this._hi + y\n        e = S - this._hi\n        s = S - e\n        s = y - e + (this._hi - s)\n        f = s + this._lo\n        H = S + f\n        h = f + (S - H)\n        this._hi = H + h\n        this._lo = h + (H - this._hi)\n        return this\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null\n      S = this._hi + yhi\n      T = this._lo + ylo\n      e = S - this._hi\n      f = T - this._lo\n      s = S - e\n      t = T - f\n      s = yhi - e + (this._hi - s)\n      t = ylo - f + (this._lo - t)\n      e = s + T\n      H = S + e\n      h = e + (S - H)\n      e = t + h\n      const zhi = H + e\n      const zlo = e + (H - zhi)\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n  selfMultiply() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof DD) {\n        const y = arguments[0]\n        return this.selfMultiply(y._hi, y._lo)\n      } else if (typeof arguments[0] === 'number') {\n        const y = arguments[0]\n        return this.selfMultiply(y, 0.0)\n      }\n    } else if (arguments.length === 2) {\n      const yhi = arguments[0], ylo = arguments[1]\n      let hx = null, tx = null, hy = null, ty = null, C = null, c = null\n      C = DD.SPLIT * this._hi\n      hx = C - this._hi\n      c = DD.SPLIT * yhi\n      hx = C - hx\n      tx = this._hi - hx\n      hy = c - yhi\n      C = this._hi * yhi\n      hy = c - hy\n      ty = yhi - hy\n      c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi)\n      const zhi = C + c\n      hx = C - zhi\n      const zlo = c + hx\n      this._hi = zhi\n      this._lo = zlo\n      return this\n    }\n  }\n  selfSqr() {\n    return this.selfMultiply(this)\n  }\n  floor() {\n    if (this.isNaN()) return DD.NaN\n    const fhi = Math.floor(this._hi)\n    let flo = 0.0\n    if (fhi === this._hi) \n      flo = Math.floor(this._lo)\n    \n    return new DD(fhi, flo)\n  }\n  negate() {\n    if (this.isNaN()) return this\n    return new DD(-this._hi, -this._lo)\n  }\n  clone() {\n    try {\n      return null\n    } catch (ex) {\n      if (ex instanceof CloneNotSupportedException) \n        return null\n      else throw ex\n    } finally {}\n  }\n  multiply() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      if (y.isNaN()) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      if (Double.isNaN(y)) return DD.createNaN()\n      return DD.copy(this).selfMultiply(y, 0.0)\n    }\n  }\n  isNaN() {\n    return Double.isNaN(this._hi)\n  }\n  intValue() {\n    return Math.trunc(this._hi)\n  }\n  toString() {\n    const mag = DD.magnitude(this._hi)\n    if (mag >= -3 && mag <= 20) return this.toStandardNotation()\n    return this.toSciNotation()\n  }\n  toStandardNotation() {\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const sigDigits = this.extractSignificantDigits(true, magnitude)\n    const decimalPointPos = magnitude[0] + 1\n    let num = sigDigits\n    if (sigDigits.charAt(0) === '.') {\n      num = '0' + sigDigits\n    } else if (decimalPointPos < 0) {\n      num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits\n    } else if (sigDigits.indexOf('.') === -1) {\n      const numZeroes = decimalPointPos - sigDigits.length\n      const zeroes = DD.stringOfChar('0', numZeroes)\n      num = sigDigits + zeroes + '.0'\n    }\n    if (this.isNegative()) return '-' + num\n    return num\n  }\n  reciprocal() {\n    let hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null\n    C = 1.0 / this._hi\n    c = DD.SPLIT * C\n    hc = c - C\n    u = DD.SPLIT * this._hi\n    hc = c - hc\n    tc = C - hc\n    hy = u - this._hi\n    U = C * this._hi\n    hy = u - hy\n    ty = this._hi - hy\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty\n    c = (1.0 - U - u - C * this._lo) / this._hi\n    const zhi = C + c\n    const zlo = C - zhi + c\n    return new DD(zhi, zlo)\n  }\n  toSciNotation() {\n    if (this.isZero()) return DD.SCI_NOT_ZERO\n    const specialStr = this.getSpecialNumberString()\n    if (specialStr !== null) return specialStr\n    const magnitude = new Array(1).fill(null)\n    const digits = this.extractSignificantDigits(false, magnitude)\n    const expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0]\n    if (digits.charAt(0) === '0') \n      throw new IllegalStateException('Found leading zero: ' + digits)\n    \n    let trailingDigits = ''\n    if (digits.length > 1) trailingDigits = digits.substring(1)\n    const digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits\n    if (this.isNegative()) return '-' + digitsWithDecimal + expStr\n    return digitsWithDecimal + expStr\n  }\n  abs() {\n    if (this.isNaN()) return DD.NaN\n    if (this.isNegative()) return this.negate()\n    return new DD(this)\n  }\n  isPositive() {\n    return this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0\n  }\n  lt(y) {\n    return this._hi < y._hi || this._hi === y._hi && this._lo < y._lo\n  }\n  add() {\n    if (arguments[0] instanceof DD) {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    } else if (typeof arguments[0] === 'number') {\n      const y = arguments[0]\n      return DD.copy(this).selfAdd(y)\n    }\n  }\n  init() {\n    if (arguments.length === 1) {\n      if (typeof arguments[0] === 'number') {\n        const x = arguments[0]\n        this._hi = x\n        this._lo = 0.0\n      } else if (arguments[0] instanceof DD) {\n        const dd = arguments[0]\n        this._hi = dd._hi\n        this._lo = dd._lo\n      }\n    } else if (arguments.length === 2) {\n      const hi = arguments[0], lo = arguments[1]\n      this._hi = hi\n      this._lo = lo\n    }\n  }\n  gt(y) {\n    return this._hi > y._hi || this._hi === y._hi && this._lo > y._lo\n  }\n  isNegative() {\n    return this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0\n  }\n  trunc() {\n    if (this.isNaN()) return DD.NaN\n    if (this.isPositive()) return this.floor(); else return this.ceil()\n  }\n  signum() {\n    if (this._hi > 0) return 1\n    if (this._hi < 0) return -1\n    if (this._lo > 0) return 1\n    if (this._lo < 0) return -1\n    return 0\n  }\n  get interfaces_() {\n    return [Serializable, Comparable, Cloneable]\n  }\n}\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16)\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16)\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17)\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16)\nDD.NaN = new DD(Double.NaN, Double.NaN)\nDD.EPS = 1.23259516440783e-32\nDD.SPLIT = 134217729.0\nDD.MAX_PRINT_DIGITS = 32\nDD.TEN = DD.valueOf(10.0)\nDD.ONE = DD.valueOf(1.0)\nDD.SCI_NOT_EXPONENT_CHAR = 'E'\nDD.SCI_NOT_ZERO = '0.0E0'\n","import Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport DD from '../math/DD.js'\nexport default class CGAlgorithmsDD {\n  static orientationIndex(p1, p2, q) {\n    const index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q)\n    if (index <= 1) return index\n    const dx1 = DD.valueOf(p2.x).selfAdd(-p1.x)\n    const dy1 = DD.valueOf(p2.y).selfAdd(-p1.y)\n    const dx2 = DD.valueOf(q.x).selfAdd(-p2.x)\n    const dy2 = DD.valueOf(q.y).selfAdd(-p2.y)\n    return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n  }\n  static signOfDet2x2() {\n    if (arguments[3] instanceof DD && (arguments[2] instanceof DD && (arguments[0] instanceof DD && arguments[1] instanceof DD))) {\n      const x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3]\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    } else if (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))) {\n      const dx1 = arguments[0], dy1 = arguments[1], dx2 = arguments[2], dy2 = arguments[3]\n      const x1 = DD.valueOf(dx1)\n      const y1 = DD.valueOf(dy1)\n      const x2 = DD.valueOf(dx2)\n      const y2 = DD.valueOf(dy2)\n      const det = x1.multiply(y2).selfSubtract(y1.multiply(x2))\n      return det.signum()\n    }\n  }\n  static intersection(p1, p2, q1, q2) {\n    const px = new DD(p1.y).selfSubtract(p2.y)\n    const py = new DD(p2.x).selfSubtract(p1.x)\n    const pw = new DD(p1.x).selfMultiply(p2.y).selfSubtract(new DD(p2.x).selfMultiply(p1.y))\n    const qx = new DD(q1.y).selfSubtract(q2.y)\n    const qy = new DD(q2.x).selfSubtract(q1.x)\n    const qw = new DD(q1.x).selfMultiply(q2.y).selfSubtract(new DD(q2.x).selfMultiply(q1.y))\n    const x = py.multiply(qw).selfSubtract(qy.multiply(pw))\n    const y = qx.multiply(pw).selfSubtract(px.multiply(qw))\n    const w = px.multiply(qy).selfSubtract(qx.multiply(py))\n    const xInt = x.selfDivide(w).doubleValue()\n    const yInt = y.selfDivide(w).doubleValue()\n    if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) \n      return null\n    \n    return new Coordinate(xInt, yInt)\n  }\n  static orientationIndexFilter(pa, pb, pc) {\n    let detsum = null\n    const detleft = (pa.x - pc.x) * (pb.y - pc.y)\n    const detright = (pa.y - pc.y) * (pb.x - pc.x)\n    const det = detleft - detright\n    if (detleft > 0.0) \n      if (detright <= 0.0) \n        return CGAlgorithmsDD.signum(det)\n      else \n        detsum = detleft + detright\n      \n    else if (detleft < 0.0) \n      if (detright >= 0.0) \n        return CGAlgorithmsDD.signum(det)\n      else \n        detsum = -detleft - detright\n      \n    else \n      return CGAlgorithmsDD.signum(det)\n    \n    const errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum\n    if (det >= errbound || -det >= errbound) \n      return CGAlgorithmsDD.signum(det)\n    \n    return 2\n  }\n  static signum(x) {\n    if (x > 0) return 1\n    if (x < 0) return -1\n    return 0\n  }\n}\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15\n","import Double from '../../../../java/lang/Double.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nexport default class CoordinateSequence {\n  getM(index) {\n    if (this.hasM()) {\n      const mIndex = this.getDimension() - this.getMeasures()\n      return this.getOrdinate(index, mIndex)\n    } else {\n      return Double.NaN\n    }\n  }\n  setOrdinate(index, ordinateIndex, value) {}\n  getZ(index) {\n    if (this.hasZ()) \n      return this.getOrdinate(index, 2)\n    else \n      return Double.NaN\n    \n  }\n  size() {}\n  getOrdinate(index, ordinateIndex) {}\n  getCoordinate() {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n    } else if (arguments.length === 2) {\n      const index = arguments[0], coord = arguments[1]\n    }\n  }\n  getCoordinateCopy(i) {}\n  createCoordinate() {}\n  getDimension() {}\n  hasM() {\n    return this.getMeasures() > 0\n  }\n  getX(index) {}\n  hasZ() {\n    return this.getDimension() - this.getMeasures() > 2\n  }\n  getMeasures() {\n    return 0\n  }\n  expandEnvelope(env) {}\n  copy() {}\n  getY(index) {}\n  toCoordinateArray() {}\n  get interfaces_() {\n    return [Cloneable]\n  }\n}\nCoordinateSequence.X = 0\nCoordinateSequence.Y = 1\nCoordinateSequence.Z = 2\nCoordinateSequence.M = 3\n","import hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport CGAlgorithmsDD from './CGAlgorithmsDD.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class Orientation {\n  static index(p1, p2, q) {\n    return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n  }\n  static isCCW() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      const nPts = ring.length - 1\n      if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n      let hiPt = ring[0]\n      let hiIndex = 0\n      for (let i = 1; i <= nPts; i++) {\n        const p = ring[i]\n        if (p.y > hiPt.y) {\n          hiPt = p\n          hiIndex = i\n        }\n      }\n      let iPrev = hiIndex\n      do {\n        iPrev = iPrev - 1\n        if (iPrev < 0) iPrev = nPts\n      } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n      let iNext = hiIndex\n      do \n        iNext = (iNext + 1) % nPts\n      while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n      const prev = ring[iPrev]\n      const next = ring[iNext]\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n      const disc = Orientation.index(prev, hiPt, next)\n      let isCCW = null\n      if (disc === 0) \n        isCCW = prev.x > next.x\n      else \n        isCCW = disc > 0\n      \n      return isCCW\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const nPts = ring.size() - 1\n      if (nPts < 3) throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined')\n      let hiPt = ring.getCoordinate(0)\n      let hiIndex = 0\n      for (let i = 1; i <= nPts; i++) {\n        const p = ring.getCoordinate(i)\n        if (p.y > hiPt.y) {\n          hiPt = p\n          hiIndex = i\n        }\n      }\n      let prev = null\n      let iPrev = hiIndex\n      do {\n        iPrev = iPrev - 1\n        if (iPrev < 0) iPrev = nPts\n        prev = ring.getCoordinate(iPrev)\n      } while (prev.equals2D(hiPt) && iPrev !== hiIndex)\n      let next = null\n      let iNext = hiIndex\n      do {\n        iNext = (iNext + 1) % nPts\n        next = ring.getCoordinate(iNext)\n      } while (next.equals2D(hiPt) && iNext !== hiIndex)\n      if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false\n      const disc = Orientation.index(prev, hiPt, next)\n      let isCCW = null\n      if (disc === 0) \n        isCCW = prev.x > next.x\n      else \n        isCCW = disc > 0\n      \n      return isCCW\n    }\n  }\n}\nOrientation.CLOCKWISE = -1\nOrientation.RIGHT = Orientation.CLOCKWISE\nOrientation.COUNTERCLOCKWISE = 1\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE\nOrientation.COLLINEAR = 0\nOrientation.STRAIGHT = Orientation.COLLINEAR\n","import Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nexport default class Intersection {\n  static intersection(p1, p2, q1, q2) {\n    const minX0 = p1.x < p2.x ? p1.x : p2.x\n    const minY0 = p1.y < p2.y ? p1.y : p2.y\n    const maxX0 = p1.x > p2.x ? p1.x : p2.x\n    const maxY0 = p1.y > p2.y ? p1.y : p2.y\n    const minX1 = q1.x < q2.x ? q1.x : q2.x\n    const minY1 = q1.y < q2.y ? q1.y : q2.y\n    const maxX1 = q1.x > q2.x ? q1.x : q2.x\n    const maxY1 = q1.y > q2.y ? q1.y : q2.y\n    const intMinX = minX0 > minX1 ? minX0 : minX1\n    const intMaxX = maxX0 < maxX1 ? maxX0 : maxX1\n    const intMinY = minY0 > minY1 ? minY0 : minY1\n    const intMaxY = maxY0 < maxY1 ? maxY0 : maxY1\n    const midx = (intMinX + intMaxX) / 2.0\n    const midy = (intMinY + intMaxY) / 2.0\n    const p1x = p1.x - midx\n    const p1y = p1.y - midy\n    const p2x = p2.x - midx\n    const p2y = p2.y - midy\n    const q1x = q1.x - midx\n    const q1y = q1.y - midy\n    const q2x = q2.x - midx\n    const q2y = q2.y - midy\n    const px = p1y - p2y\n    const py = p2x - p1x\n    const pw = p1x * p2y - p2x * p1y\n    const qx = q1y - q2y\n    const qy = q2x - q1x\n    const qw = q1x * q2y - q2x * q1y\n    const x = py * qw - qy * pw\n    const y = qx * pw - px * qw\n    const w = px * qy - qx * py\n    const xInt = x / w\n    const yInt = y / w\n    if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) \n      return null\n    \n    return new Coordinate(xInt + midx, yInt + midy)\n  }\n}\n","export default class System {\n  static arraycopy(src, srcPos, dest, destPos, len) {\n    let c = 0\n    for (let i = srcPos; i < srcPos + len; i++) {\n      dest[destPos + c] = src[i]\n      c++\n    }\n  }\n\n  static getProperty(name) {\n    return {\n      'line.separator': '\\n'\n    }[name]\n  }\n}\n","import Double from '../../../../java/lang/Double.js'\nexport default class MathUtil {\n  static log10(x) {\n    const ln = Math.log(x)\n    if (Double.isInfinite(ln)) return ln\n    if (Double.isNaN(ln)) return ln\n    return ln / MathUtil.LOG_10\n  }\n  static min(v1, v2, v3, v4) {\n    let min = v1\n    if (v2 < min) min = v2\n    if (v3 < min) min = v3\n    if (v4 < min) min = v4\n    return min\n  }\n  static clamp() {\n    if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n      const x = arguments[0], min = arguments[1], max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n      const x = arguments[0], min = arguments[1], max = arguments[2]\n      if (x < min) return min\n      if (x > max) return max\n      return x\n    }\n  }\n  static wrap(index, max) {\n    if (index < 0) \n      return max - -index % max\n    \n    return index % max\n  }\n  static max() {\n    if (arguments.length === 3) {\n      const v1 = arguments[0], v2 = arguments[1], v3 = arguments[2]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      return max\n    } else if (arguments.length === 4) {\n      const v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3]\n      let max = v1\n      if (v2 > max) max = v2\n      if (v3 > max) max = v3\n      if (v4 > max) max = v4\n      return max\n    }\n  }\n  static average(x1, x2) {\n    return (x1 + x2) / 2.0\n  }\n}\nMathUtil.LOG_10 = Math.log(10)\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport MathUtil from '../math/MathUtil.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class Distance {\n  static segmentToSegment(A, B, C, D) {\n    if (A.equals(B)) return Distance.pointToSegment(A, C, D)\n    if (C.equals(D)) return Distance.pointToSegment(D, A, B)\n    let noIntersection = false\n    if (!Envelope.intersects(A, B, C, D)) {\n      noIntersection = true\n    } else {\n      const denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x)\n      if (denom === 0) {\n        noIntersection = true\n      } else {\n        const r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y)\n        const s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y)\n        const s = s_num / denom\n        const r = r_num / denom\n        if (r < 0 || r > 1 || s < 0 || s > 1) \n          noIntersection = true\n        \n      }\n    }\n    if (noIntersection) \n      return MathUtil.min(Distance.pointToSegment(A, C, D), Distance.pointToSegment(B, C, D), Distance.pointToSegment(C, A, B), Distance.pointToSegment(D, A, B))\n    \n    return 0.0\n  }\n  static pointToSegment(p, A, B) {\n    if (A.x === B.x && A.y === B.y) return p.distance(A)\n    const len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y)\n    const r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2\n    if (r <= 0.0) return p.distance(A)\n    if (r >= 1.0) return p.distance(B)\n    const s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n  static pointToLinePerpendicular(p, A, B) {\n    const len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y)\n    const s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n  static pointToSegmentString(p, line) {\n    if (line.length === 0) throw new IllegalArgumentException('Line array must contain at least one vertex')\n    let minDistance = p.distance(line[0])\n    for (let i = 0; i < line.length - 1; i++) {\n      const dist = Distance.pointToSegment(p, line[i], line[i + 1])\n      if (dist < minDistance) \n        minDistance = dist\n      \n    }\n    return minDistance\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nexport default class CoordinateSequenceFactory {\n  create() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n      }\n    } else if (arguments.length === 2) {\n      const size = arguments[0], dimension = arguments[1]\n    } else if (arguments.length === 3) {\n      const size = arguments[0], dimension = arguments[1], measures = arguments[2]\n      return this.create(size, dimension)\n    }\n  }\n}\n","export default class GeometryComponentFilter {\n  filter(geom) {}\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Envelope from './Envelope.js'\nexport default class Geometry {\n  constructor() {\n    Geometry.constructor_.apply(this, arguments)\n  }\n\n  isGeometryCollection() {\n    return this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n\n  getFactory() {\n    return this._factory\n  }\n\n  getGeometryN(n) {\n    return this\n  }\n\n  getArea() {\n    return 0.0\n  }\n\n  isRectangle() {\n    return false\n  }\n\n  equalsExact(other) {\n    return this === other || this.equalsExact(other, 0)\n  }\n\n  geometryChanged() {\n    this.apply(Geometry.geometryChangedFilter)\n  }\n\n  geometryChangedAction() {\n    this._envelope = null\n  }\n\n  equalsNorm(g) {\n    if (g === null) return false\n    return this.norm().equalsExact(g.norm())\n  }\n\n  getLength() {\n    return 0.0\n  }\n\n  getNumGeometries() {\n    return 1\n  }\n\n  compareTo() {\n    let other\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) return this.getTypeCode() - other.getTypeCode()\n\n      if (this.isEmpty() && other.isEmpty()) return 0\n\n      if (this.isEmpty()) return -1\n\n      if (other.isEmpty()) return 1\n\n      return this.compareToSameClass(o)\n    } else if (arguments.length === 2) {\n      const o = arguments[0]; const comp = arguments[1]\n      other = o\n      if (this.getTypeCode() !== other.getTypeCode()) return this.getTypeCode() - other.getTypeCode()\n\n      if (this.isEmpty() && other.isEmpty()) return 0\n\n      if (this.isEmpty()) return -1\n\n      if (other.isEmpty()) return 1\n\n      return this.compareToSameClass(o, comp)\n    }\n  }\n\n  getUserData() {\n    return this._userData\n  }\n\n  getSRID() {\n    return this._SRID\n  }\n\n  getEnvelope() {\n    return this.getFactory().toGeometry(this.getEnvelopeInternal())\n  }\n\n  static checkNotGeometryCollection(g) {\n    if (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n\n  equal(a, b, tolerance) {\n    if (tolerance === 0) return a.equals(b)\n\n    return a.distance(b) <= tolerance\n  }\n\n  norm() {\n    const copy = this.copy()\n    copy.normalize()\n    return copy\n  }\n\n  reverse() {\n    const res = this.reverseInternal()\n    if (this.envelope != null) res.envelope = this.envelope.copy()\n\n    res.setSRID(this.getSRID())\n    return res\n  }\n\n  copy() {\n    const copy = this.copyInternal()\n    copy.envelope = this._envelope == null ? null : this._envelope.copy()\n    copy._SRID = this._SRID\n    copy._userData = this._userData\n    return copy\n  }\n\n  getPrecisionModel() {\n    return this._factory.getPrecisionModel()\n  }\n\n  getEnvelopeInternal() {\n    if (this._envelope === null) this._envelope = this.computeEnvelopeInternal()\n\n    return new Envelope(this._envelope)\n  }\n\n  setSRID(SRID) {\n    this._SRID = SRID\n  }\n\n  setUserData(userData) {\n    this._userData = userData\n  }\n\n  compare(a, b) {\n    const i = a.iterator()\n    const j = b.iterator()\n    while (i.hasNext() && j.hasNext()) {\n      const aElement = i.next()\n      const bElement = j.next()\n      const comparison = aElement.compareTo(bElement)\n      if (comparison !== 0) return comparison\n    }\n    if (i.hasNext()) return 1\n\n    if (j.hasNext()) return -1\n\n    return 0\n  }\n\n  hashCode() {\n    return this.getEnvelopeInternal().hashCode()\n  }\n\n  isEquivalentClass(other) {\n    return this.getClass() === other.getClass()\n  }\n\n  isGeometryCollectionOrDerived() {\n    if (this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === Geometry.TYPECODE_MULTIPOINT || this.getTypeCode() === Geometry.TYPECODE_MULTILINESTRING || this.getTypeCode() === Geometry.TYPECODE_MULTIPOLYGON) return true\n\n    return false\n  }\n\n  get interfaces_() {\n    return [Cloneable, Comparable, Serializable]\n  }\n\n  getClass() {\n    return Geometry\n  }\n\n  static hasNonEmptyElements(geometries) {\n    for (let i = 0; i < geometries.length; i++)\n      if (!geometries[i].isEmpty()) return true\n\n    return false\n  }\n\n  static hasNullElements(array) {\n    for (let i = 0; i < array.length; i++)\n      if (array[i] === null) return true\n\n    return false\n  }\n}\nGeometry.constructor_ = function(factory) {\n  if (!factory) return\n  this._envelope = null\n  this._userData = null\n  this._factory = factory\n  this._SRID = factory.getSRID()\n}\nGeometry.TYPECODE_POINT = 0\nGeometry.TYPECODE_MULTIPOINT = 1\nGeometry.TYPECODE_LINESTRING = 2\nGeometry.TYPECODE_LINEARRING = 3\nGeometry.TYPECODE_MULTILINESTRING = 4\nGeometry.TYPECODE_POLYGON = 5\nGeometry.TYPECODE_MULTIPOLYGON = 6\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7\nGeometry.TYPENAME_POINT = 'Point'\nGeometry.TYPENAME_MULTIPOINT = 'MultiPoint'\nGeometry.TYPENAME_LINESTRING = 'LineString'\nGeometry.TYPENAME_LINEARRING = 'LinearRing'\nGeometry.TYPENAME_MULTILINESTRING = 'MultiLineString'\nGeometry.TYPENAME_POLYGON = 'Polygon'\nGeometry.TYPENAME_MULTIPOLYGON = 'MultiPolygon'\nGeometry.TYPENAME_GEOMETRYCOLLECTION = 'GeometryCollection'\nGeometry.geometryChangedFilter = {\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  },\n  filter(geom) {\n    geom.geometryChangedAction()\n  }\n}\n","export default class CoordinateFilter {\n  filter(coord) {}\n}\n","import Coordinate from '../geom/Coordinate.js'\nexport default class Length {\n  static ofLine(pts) {\n    const n = pts.size()\n    if (n <= 1) return 0.0\n    let len = 0.0\n    const p = new Coordinate()\n    pts.getCoordinate(0, p)\n    let x0 = p.x\n    let y0 = p.y\n    for (let i = 1; i < n; i++) {\n      pts.getCoordinate(i, p)\n      const x1 = p.x\n      const y1 = p.y\n      const dx = x1 - x0\n      const dy = y1 - y0\n      len += Math.sqrt(dx * dx + dy * dy)\n      x0 = x1\n      y0 = y1\n    }\n    return len\n  }\n}\n","export default class Lineal {}\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nexport default class CoordinateSequences {\n  static copyCoord(src, srcPos, dest, destPos) {\n    const minDim = Math.min(src.getDimension(), dest.getDimension())\n    for (let dim = 0; dim < minDim; dim++) \n      dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim))\n    \n  }\n  static isRing(seq) {\n    const n = seq.size()\n    if (n === 0) return true\n    if (n <= 3) return false\n    return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n  }\n  static scroll() {\n    if (arguments.length === 2) {\n      if (hasInterface(arguments[0], CoordinateSequence) && Number.isInteger(arguments[1])) {\n        const seq = arguments[0], indexOfFirstCoordinate = arguments[1]\n        CoordinateSequences.scroll(seq, indexOfFirstCoordinate, CoordinateSequences.isRing(seq))\n      } else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof Coordinate) {\n        const seq = arguments[0], firstCoordinate = arguments[1]\n        const i = CoordinateSequences.indexOf(firstCoordinate, seq)\n        if (i <= 0) return null\n        CoordinateSequences.scroll(seq, i)\n      }\n    } else if (arguments.length === 3) {\n      const seq = arguments[0], indexOfFirstCoordinate = arguments[1], ensureRing = arguments[2]\n      const i = indexOfFirstCoordinate\n      if (i <= 0) return null\n      const copy = seq.copy()\n      const last = ensureRing ? seq.size() - 1 : seq.size()\n      for (let j = 0; j < last; j++) \n        for (let k = 0; k < seq.getDimension(); k++) seq.setOrdinate(j, k, copy.getOrdinate((indexOfFirstCoordinate + j) % last, k))\n      \n      if (ensureRing) \n        for (let k = 0; k < seq.getDimension(); k++) seq.setOrdinate(last, k, seq.getOrdinate(0, k))\n      \n    }\n  }\n  static isEqual(cs1, cs2) {\n    const cs1Size = cs1.size()\n    const cs2Size = cs2.size()\n    if (cs1Size !== cs2Size) return false\n    const dim = Math.min(cs1.getDimension(), cs2.getDimension())\n    for (let i = 0; i < cs1Size; i++) \n      for (let d = 0; d < dim; d++) {\n        const v1 = cs1.getOrdinate(i, d)\n        const v2 = cs2.getOrdinate(i, d)\n        if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue\n        if (Double.isNaN(v1) && Double.isNaN(v2)) continue\n        return false\n      }\n    \n    return true\n  }\n  static minCoordinateIndex() {\n    if (arguments.length === 1) {\n      const seq = arguments[0]\n      return CoordinateSequences.minCoordinateIndex(seq, 0, seq.size() - 1)\n    } else if (arguments.length === 3) {\n      const seq = arguments[0], from = arguments[1], to = arguments[2]\n      let minCoordIndex = -1\n      let minCoord = null\n      for (let i = from; i <= to; i++) {\n        const testCoord = seq.getCoordinate(i)\n        if (minCoord === null || minCoord.compareTo(testCoord) > 0) {\n          minCoord = testCoord\n          minCoordIndex = i\n        }\n      }\n      return minCoordIndex\n    }\n  }\n  static extend(fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    if (n > 0) \n      for (let i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1)\n    \n    return newseq\n  }\n  static reverse(seq) {\n    const last = seq.size() - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) \n      CoordinateSequences.swap(seq, i, last - i)\n    \n  }\n  static swap(seq, i, j) {\n    if (i === j) return null\n    for (let dim = 0; dim < seq.getDimension(); dim++) {\n      const tmp = seq.getOrdinate(i, dim)\n      seq.setOrdinate(i, dim, seq.getOrdinate(j, dim))\n      seq.setOrdinate(j, dim, tmp)\n    }\n  }\n  static copy(src, srcPos, dest, destPos, length) {\n    for (let i = 0; i < length; i++) \n      CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i)\n    \n  }\n  static ensureValidRing(fact, seq) {\n    const n = seq.size()\n    if (n === 0) return seq\n    if (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4)\n    const isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n    if (isClosed) return seq\n    return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n  }\n  static indexOf(coordinate, seq) {\n    for (let i = 0; i < seq.size(); i++) \n      if (coordinate.x === seq.getOrdinate(i, CoordinateSequence.X) && coordinate.y === seq.getOrdinate(i, CoordinateSequence.Y)) \n        return i\n      \n    \n    return -1\n  }\n  static createClosedRing(fact, seq, size) {\n    const newseq = fact.create(size, seq.getDimension())\n    const n = seq.size()\n    CoordinateSequences.copy(seq, 0, newseq, 0, n)\n    for (let i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1)\n    return newseq\n  }\n  static minCoordinate(seq) {\n    let minCoord = null\n    for (let i = 0; i < seq.size(); i++) {\n      const testCoord = seq.getCoordinate(i)\n      if (minCoord === null || minCoord.compareTo(testCoord) > 0) \n        minCoord = testCoord\n      \n    }\n    return minCoord\n  }\n}\n","import Exception from './Exception.js'\n\nexport default class UnsupportedOperationException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ UnsupportedOperationException })[0]\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Character from '../../../../java/lang/Character.js'\nexport default class Dimension {\n  static toDimensionSymbol(dimensionValue) {\n    switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    }\n    throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n  }\n  static toDimensionValue(dimensionSymbol) {\n    switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    }\n    throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n  }\n}\nDimension.P = 0\nDimension.L = 1\nDimension.A = 2\nDimension.FALSE = -1\nDimension.TRUE = -2\nDimension.DONTCARE = -3\nDimension.SYM_FALSE = 'F'\nDimension.SYM_TRUE = 'T'\nDimension.SYM_DONTCARE = '*'\nDimension.SYM_P = '0'\nDimension.SYM_L = '1'\nDimension.SYM_A = '2'\n","export default class GeometryFilter {\n  filter(geom) {}\n}\n","import Geometry from './Geometry.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Length from '../algorithm/Length.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Lineal from './Lineal.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport Dimension from './Dimension.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Envelope from './Envelope.js'\nexport default class LineString extends Geometry {\n  constructor() {\n    super()\n    LineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._points = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      const points = arguments[0], factory = arguments[1]\n      Geometry.constructor_.call(this, factory)\n      this.init(points)\n    }\n  }\n  computeEnvelopeInternal() {\n    if (this.isEmpty()) \n      return new Envelope()\n    \n    return this._points.expandEnvelope(new Envelope())\n  }\n  isRing() {\n    return this.isClosed() && this.isSimple()\n  }\n  getCoordinates() {\n    return this._points.toCoordinateArray()\n  }\n  copyInternal() {\n    return new LineString(this._points.copy(), this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherLineString = other\n      if (this._points.size() !== otherLineString._points.size()) \n        return false\n      \n      for (let i = 0; i < this._points.size(); i++) \n        if (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  normalize() {\n    for (let i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      const j = this._points.size() - 1 - i\n      if (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n        if (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n          const copy = this._points.copy()\n          CoordinateSequences.reverse(copy)\n          this._points = copy\n        }\n        return null\n      }\n    }\n  }\n  getCoordinate() {\n    if (this.isEmpty()) return null\n    return this._points.getCoordinate(0)\n  }\n  getBoundaryDimension() {\n    if (this.isClosed()) \n      return Dimension.FALSE\n    \n    return 0\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return false\n    \n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  }\n  reverseInternal() {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    return this.getFactory().createLineString(seq)\n  }\n  getEndPoint() {\n    if (this.isEmpty()) \n      return null\n    \n    return this.getPointN(this.getNumPoints() - 1)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_LINESTRING\n  }\n  getDimension() {\n    return 1\n  }\n  getLength() {\n    return Length.ofLine(this._points)\n  }\n  getNumPoints() {\n    return this._points.size()\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const line = o\n      let i = 0\n      let j = 0\n      while (i < this._points.size() && j < line._points.size()) {\n        const comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j))\n        if (comparison !== 0) \n          return comparison\n        \n        i++\n        j++\n      }\n      if (i < this._points.size()) \n        return 1\n      \n      if (j < line._points.size()) \n        return -1\n      \n      return 0\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const line = o\n      return comp.compare(this._points, line._points)\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._points.size(); i++) \n        filter.filter(this._points.getCoordinate(i))\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._points.size() === 0) return null\n      for (let i = 0; i < this._points.size(); i++) {\n        filter.filter(this._points, i)\n        if (filter.isDone()) break\n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n  getBoundary() {\n    throw new UnsupportedOperationException()\n  }\n  isEquivalentClass(other) {\n    return other instanceof LineString\n  }\n  getCoordinateN(n) {\n    return this._points.getCoordinate(n)\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_LINESTRING\n  }\n  getCoordinateSequence() {\n    return this._points\n  }\n  isEmpty() {\n    return this._points.size() === 0\n  }\n  init(points) {\n    if (points === null) \n      points = this.getFactory().getCoordinateSequenceFactory().create([])\n    \n    if (points.size() === 1) \n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    \n    this._points = points\n  }\n  isCoordinate(pt) {\n    for (let i = 0; i < this._points.size(); i++) \n      if (this._points.getCoordinate(i).equals(pt)) \n        return true\n      \n    \n    return false\n  }\n  getStartPoint() {\n    if (this.isEmpty()) \n      return null\n    \n    return this.getPointN(0)\n  }\n  getPointN(n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  }\n  get interfaces_() {\n    return [Lineal]\n  }\n}\n","export default class Puntal {}\n","import Geometry from './Geometry.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Dimension from './Dimension.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Puntal from './Puntal.js'\nimport Envelope from './Envelope.js'\nimport Assert from '../util/Assert.js'\nimport IllegalStateException from '../../../../java/lang/IllegalStateException.js'\nexport default class Point extends Geometry {\n  constructor() {\n    super()\n    Point.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coordinates = null\n    const coordinates = arguments[0], factory = arguments[1]\n    Geometry.constructor_.call(this, factory)\n    this.init(coordinates)\n  }\n  computeEnvelopeInternal() {\n    if (this.isEmpty()) \n      return new Envelope()\n    \n    const env = new Envelope()\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0))\n    return env\n  }\n  getCoordinates() {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  }\n  copyInternal() {\n    return new Point(this._coordinates.copy(), this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      if (this.isEmpty() && other.isEmpty()) \n        return true\n      \n      if (this.isEmpty() !== other.isEmpty()) \n        return false\n      \n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  normalize() {}\n  getCoordinate() {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  reverseInternal() {\n    return this.getFactory().createPoint(this._coordinates.copy())\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_POINT\n  }\n  getDimension() {\n    return 0\n  }\n  getNumPoints() {\n    return this.isEmpty() ? 0 : 1\n  }\n  getX() {\n    if (this.getCoordinate() === null) \n      throw new IllegalStateException('getX called on empty Point')\n    \n    return this.getCoordinate().x\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const other = arguments[0]\n      const point = other\n      return this.getCoordinate().compareTo(point.getCoordinate())\n    } else if (arguments.length === 2) {\n      const other = arguments[0], comp = arguments[1]\n      const point = other\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) \n        return null\n      \n      filter.filter(this.getCoordinate())\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this.isEmpty()) return null\n      filter.filter(this._coordinates, 0)\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    }\n  }\n  getBoundary() {\n    return this.getFactory().createGeometryCollection()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_POINT\n  }\n  getCoordinateSequence() {\n    return this._coordinates\n  }\n  getY() {\n    if (this.getCoordinate() === null) \n      throw new IllegalStateException('getY called on empty Point')\n    \n    return this.getCoordinate().y\n  }\n  isEmpty() {\n    return this._coordinates.size() === 0\n  }\n  init(coordinates) {\n    if (coordinates === null) \n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([])\n    \n    Assert.isTrue(coordinates.size() <= 1)\n    this._coordinates = coordinates\n  }\n  isSimple() {\n    return true\n  }\n  get interfaces_() {\n    return [Puntal]\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class Area {\n  static ofRing() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      return Math.abs(Area.ofRingSigned(ring))\n    }\n  }\n  static ofRingSigned() {\n    if (arguments[0] instanceof Array) {\n      const ring = arguments[0]\n      if (ring.length < 3) return 0.0\n      let sum = 0.0\n      const x0 = ring[0].x\n      for (let i = 1; i < ring.length - 1; i++) {\n        const x = ring[i].x - x0\n        const y1 = ring[i + 1].y\n        const y2 = ring[i - 1].y\n        sum += x * (y2 - y1)\n      }\n      return sum / 2.0\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      const ring = arguments[0]\n      const n = ring.size()\n      if (n < 3) return 0.0\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      ring.getCoordinate(0, p1)\n      ring.getCoordinate(1, p2)\n      const x0 = p1.x\n      p2.x -= x0\n      let sum = 0.0\n      for (let i = 1; i < n - 1; i++) {\n        p0.y = p1.y\n        p1.x = p2.x\n        p1.y = p2.y\n        ring.getCoordinate(i + 1, p2)\n        p2.x -= x0\n        sum += p1.x * (p0.y - p2.y)\n      }\n      return sum / 2.0\n    }\n  }\n}\n","import ArrayList from './ArrayList.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n */\nexport default class Arrays {\n  static sort() {\n    const a = arguments[0]\n    if (arguments.length === 1) {\n      a.sort((a, b) => a.compareTo(b))\n    } else if (arguments.length === 2) {\n      a.sort((a, b) => arguments[1].compare(a, b))\n    } else if (arguments.length === 3) {\n      const t = a.slice(arguments[1], arguments[2])\n      t.sort()\n      const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n      a.splice(0, a.length)\n      for (const e of r)\n        a.push(e)\n    } else if (arguments.length === 4) {\n      const t = a.slice(arguments[1], arguments[2])\n      t.sort((a, b) => arguments[3].compare(a, b))\n      const r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length))\n      a.splice(0, a.length)\n      for (const e of r)\n        a.push(e)\n    }\n  }\n\n  /**\n   * @param {Array} array\n   * @return {ArrayList}\n   */\n  static asList(array) {\n    const arrayList = new ArrayList()\n    for (const e of array)\n      arrayList.add(e)\n    return arrayList\n  }\n\n  static copyOf(original, newLength) {\n    return original.slice(0, newLength)\n  }\n}\n","export default class Polygonal {}\n","import Area from '../algorithm/Area.js'\nimport Geometry from './Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Polygonal from './Polygonal.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nexport default class Polygon extends Geometry {\n  constructor() {\n    super()\n    Polygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._shell = null\n    this._holes = null\n    let shell = arguments[0], holes = arguments[1], factory = arguments[2]\n    Geometry.constructor_.call(this, factory)\n    if (shell === null) \n      shell = this.getFactory().createLinearRing()\n    \n    if (holes === null) \n      holes = []\n    \n    if (Geometry.hasNullElements(holes)) \n      throw new IllegalArgumentException('holes must not contain null elements')\n    \n    if (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) \n      throw new IllegalArgumentException('shell is empty but holes are not')\n    \n    this._shell = shell\n    this._holes = holes\n  }\n  computeEnvelopeInternal() {\n    return this._shell.getEnvelopeInternal()\n  }\n  getCoordinates() {\n    if (this.isEmpty()) \n      return []\n    \n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    const shellCoordinates = this._shell.getCoordinates()\n    for (let x = 0; x < shellCoordinates.length; x++) {\n      k++\n      coordinates[k] = shellCoordinates[x]\n    }\n    for (let i = 0; i < this._holes.length; i++) {\n      const childCoordinates = this._holes[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n  getArea() {\n    let area = 0.0\n    area += Area.ofRing(this._shell.getCoordinateSequence())\n    for (let i = 0; i < this._holes.length; i++) \n      area -= Area.ofRing(this._holes[i].getCoordinateSequence())\n    \n    return area\n  }\n  copyInternal() {\n    const shellCopy = this._shell.copy()\n    const holeCopies = new Array(this._holes.length).fill(null)\n    for (let i = 0; i < this._holes.length; i++) \n      holeCopies[i] = this._holes[i].copy()\n    \n    return new Polygon(shellCopy, holeCopies, this._factory)\n  }\n  isRectangle() {\n    if (this.getNumInteriorRing() !== 0) return false\n    if (this._shell === null) return false\n    if (this._shell.getNumPoints() !== 5) return false\n    const seq = this._shell.getCoordinateSequence()\n    const env = this.getEnvelopeInternal()\n    for (let i = 0; i < 5; i++) {\n      const x = seq.getX(i)\n      if (!(x === env.getMinX() || x === env.getMaxX())) return false\n      const y = seq.getY(i)\n      if (!(y === env.getMinY() || y === env.getMaxY())) return false\n    }\n    let prevX = seq.getX(0)\n    let prevY = seq.getY(0)\n    for (let i = 1; i <= 4; i++) {\n      const x = seq.getX(i)\n      const y = seq.getY(i)\n      const xChanged = x !== prevX\n      const yChanged = y !== prevY\n      if (xChanged === yChanged) return false\n      prevX = x\n      prevY = y\n    }\n    return true\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherPolygon = other\n      const thisShell = this._shell\n      const otherPolygonShell = otherPolygon._shell\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) \n        return false\n      \n      if (this._holes.length !== otherPolygon._holes.length) \n        return false\n      \n      for (let i = 0; i < this._holes.length; i++) \n        if (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  normalize() {\n    if (arguments.length === 0) {\n      this._shell = this.normalized(this._shell, true)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i] = this.normalized(this._holes[i], false)\n      \n      Arrays.sort(this._holes)\n    } else if (arguments.length === 2) {\n      const ring = arguments[0], clockwise = arguments[1]\n      if (ring.isEmpty()) \n        return null\n      \n      const seq = ring.getCoordinateSequence()\n      const minCoordinateIndex = CoordinateSequences.minCoordinateIndex(seq, 0, seq.size() - 2)\n      CoordinateSequences.scroll(seq, minCoordinateIndex, true)\n      if (Orientation.isCCW(seq) === clockwise) CoordinateSequences.reverse(seq)\n    }\n  }\n  getCoordinate() {\n    return this._shell.getCoordinate()\n  }\n  getNumInteriorRing() {\n    return this._holes.length\n  }\n  getBoundaryDimension() {\n    return 1\n  }\n  reverseInternal() {\n    const shell = this.getExteriorRing().reverse()\n    const holes = new Array(this.getNumInteriorRing()).fill(null)\n    for (let i = 0; i < holes.length; i++) \n      holes[i] = this.getInteriorRingN(i).reverse()\n    \n    return this.getFactory().createPolygon(shell, holes)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_POLYGON\n  }\n  getDimension() {\n    return 2\n  }\n  getLength() {\n    let len = 0.0\n    len += this._shell.getLength()\n    for (let i = 0; i < this._holes.length; i++) \n      len += this._holes[i].getLength()\n    \n    return len\n  }\n  getNumPoints() {\n    let numPoints = this._shell.getNumPoints()\n    for (let i = 0; i < this._holes.length; i++) \n      numPoints += this._holes[i].getNumPoints()\n    \n    return numPoints\n  }\n  convexHull() {\n    return this.getExteriorRing().convexHull()\n  }\n  normalized(ring, clockwise) {\n    const res = ring.copy()\n    this.normalize(res, clockwise)\n    return res\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const thisShell = this._shell\n      const otherShell = o._shell\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const poly = o\n      const thisShell = this._shell\n      const otherShell = poly._shell\n      const shellComp = thisShell.compareToSameClass(otherShell, comp)\n      if (shellComp !== 0) return shellComp\n      const nHole1 = this.getNumInteriorRing()\n      const nHole2 = poly.getNumInteriorRing()\n      let i = 0\n      while (i < nHole1 && i < nHole2) {\n        const thisHole = this.getInteriorRingN(i)\n        const otherHole = poly.getInteriorRingN(i)\n        const holeComp = thisHole.compareToSameClass(otherHole, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < nHole1) return 1\n      if (i < nHole2) return -1\n      return 0\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      this._shell.apply(filter)\n      if (!filter.isDone()) \n        for (let i = 0; i < this._holes.length; i++) {\n          this._holes[i].apply(filter)\n          if (filter.isDone()) break\n        }\n      \n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      this._shell.apply(filter)\n      for (let i = 0; i < this._holes.length; i++) \n        this._holes[i].apply(filter)\n      \n    }\n  }\n  getBoundary() {\n    if (this.isEmpty()) \n      return this.getFactory().createMultiLineString()\n    \n    const rings = new Array(this._holes.length + 1).fill(null)\n    rings[0] = this._shell\n    for (let i = 0; i < this._holes.length; i++) \n      rings[i + 1] = this._holes[i]\n    \n    if (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence())\n    return this.getFactory().createMultiLineString(rings)\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_POLYGON\n  }\n  getExteriorRing() {\n    return this._shell\n  }\n  isEmpty() {\n    return this._shell.isEmpty()\n  }\n  getInteriorRingN(n) {\n    return this._holes[n]\n  }\n  get interfaces_() {\n    return [Polygonal]\n  }\n}\n","import Collection from './Collection.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default class Set extends Collection {\n  /**\n   * Returns true if this set contains the specified element. More formally,\n   * returns true if and only if this set contains an element e such that (o==null ?\n   * e==null : o.equals(e)).\n   * @param {Object} e\n   * @return {boolean}\n   */\n  contains() { }\n}\n","import Set from './Set.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n */\nexport default class SortedSet extends Set {}\n","import Collection from './Collection.js'\nimport NoSuchElementException from './NoSuchElementException.js'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException.js'\nimport SortedSet from './SortedSet.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n */\nexport default class TreeSet extends SortedSet {\n  constructor(o) {\n    super()\n    this.array = []\n    if (o instanceof Collection)\n      this.addAll(o)\n  }\n\n  contains(o) {\n    for (const e of this.array)\n      if (e.compareTo(o) === 0)\n        return true\n    return false\n  }\n\n  add(o) {\n    if (this.contains(o))\n      return false\n    for (let i = 0, len = this.array.length; i < len; i++) {\n      const e = this.array[i]\n      if (e.compareTo(o) === 1)\n        return !!this.array.splice(i, 0, o)\n    }\n    this.array.push(o)\n    return true\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.add(e)\n    return true\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n\n  size() {\n    return this.array.length\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n\n  toArray() {\n    return this.array.slice()\n  }\n\n  iterator() {\n    return new Iterator(this.array)\n  }\n}\n\nclass Iterator {\n  constructor(array) {\n    this.array = array\n    this.position = 0\n  }\n\n  next() {\n    if (this.position === this.array.length)\n      throw new NoSuchElementException()\n    return this.array[this.position++]\n  }\n\n  hasNext() {\n    return this.position < this.array.length\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n}\n","import TreeSet from '../../../../java/util/TreeSet.js'\nimport Geometry from './Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport CoordinateFilter from './CoordinateFilter.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from './GeometryComponentFilter.js'\nimport Dimension from './Dimension.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport GeometryFilter from './GeometryFilter.js'\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter.js'\nimport Envelope from './Envelope.js'\nimport Assert from '../util/Assert.js'\nexport default class GeometryCollection extends Geometry {\n  constructor() {\n    super()\n    GeometryCollection.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometries = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      let geometries = arguments[0], factory = arguments[1]\n      Geometry.constructor_.call(this, factory)\n      if (geometries === null) \n        geometries = []\n      \n      if (Geometry.hasNullElements(geometries)) \n        throw new IllegalArgumentException('geometries must not contain null elements')\n      \n      this._geometries = geometries\n    }\n  }\n  computeEnvelopeInternal() {\n    const envelope = new Envelope()\n    for (let i = 0; i < this._geometries.length; i++) \n      envelope.expandToInclude(this._geometries[i].getEnvelopeInternal())\n    \n    return envelope\n  }\n  getGeometryN(n) {\n    return this._geometries[n]\n  }\n  getCoordinates() {\n    const coordinates = new Array(this.getNumPoints()).fill(null)\n    let k = -1\n    for (let i = 0; i < this._geometries.length; i++) {\n      const childCoordinates = this._geometries[i].getCoordinates()\n      for (let j = 0; j < childCoordinates.length; j++) {\n        k++\n        coordinates[k] = childCoordinates[j]\n      }\n    }\n    return coordinates\n  }\n  getArea() {\n    let area = 0.0\n    for (let i = 0; i < this._geometries.length; i++) \n      area += this._geometries[i].getArea()\n    \n    return area\n  }\n  copyInternal() {\n    const geometries = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < geometries.length; i++) \n      geometries[i] = this._geometries[i].copy()\n    \n    return new GeometryCollection(geometries, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      const otherCollection = other\n      if (this._geometries.length !== otherCollection._geometries.length) \n        return false\n      \n      for (let i = 0; i < this._geometries.length; i++) \n        if (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) \n          return false\n        \n      \n      return true\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  normalize() {\n    for (let i = 0; i < this._geometries.length; i++) \n      this._geometries[i].normalize()\n    \n    Arrays.sort(this._geometries)\n  }\n  getCoordinate() {\n    if (this.isEmpty()) return null\n    return this._geometries[0].getCoordinate()\n  }\n  getBoundaryDimension() {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) \n      dimension = Math.max(dimension, this._geometries[i].getBoundaryDimension())\n    \n    return dimension\n  }\n  reverseInternal() {\n    const numGeometries = this._geometries.length\n    const reversed = new ArrayList(numGeometries)\n    for (let i = 0; i < numGeometries; i++) \n      reversed.add(this._geometries[i].reverse())\n    \n    return this.getFactory().buildGeometry(reversed)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_GEOMETRYCOLLECTION\n  }\n  getDimension() {\n    let dimension = Dimension.FALSE\n    for (let i = 0; i < this._geometries.length; i++) \n      dimension = Math.max(dimension, this._geometries[i].getDimension())\n    \n    return dimension\n  }\n  getLength() {\n    let sum = 0.0\n    for (let i = 0; i < this._geometries.length; i++) \n      sum += this._geometries[i].getLength()\n    \n    return sum\n  }\n  getNumPoints() {\n    let numPoints = 0\n    for (let i = 0; i < this._geometries.length; i++) \n      numPoints += this._geometries[i].getNumPoints()\n    \n    return numPoints\n  }\n  getNumGeometries() {\n    return this._geometries.length\n  }\n  compareToSameClass() {\n    if (arguments.length === 1) {\n      const o = arguments[0]\n      const theseElements = new TreeSet(Arrays.asList(this._geometries))\n      const otherElements = new TreeSet(Arrays.asList(o._geometries))\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      const o = arguments[0], comp = arguments[1]\n      const gc = o\n      const n1 = this.getNumGeometries()\n      const n2 = gc.getNumGeometries()\n      let i = 0\n      while (i < n1 && i < n2) {\n        const thisGeom = this.getGeometryN(i)\n        const otherGeom = gc.getGeometryN(i)\n        const holeComp = thisGeom.compareToSameClass(otherGeom, comp)\n        if (holeComp !== 0) return holeComp\n        i++\n      }\n      if (i < n1) return 1\n      if (i < n2) return -1\n      return 0\n    }\n  }\n  apply() {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      const filter = arguments[0]\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      const filter = arguments[0]\n      if (this._geometries.length === 0) return null\n      for (let i = 0; i < this._geometries.length; i++) {\n        this._geometries[i].apply(filter)\n        if (filter.isDone()) \n          break\n        \n      }\n      if (filter.isGeometryChanged()) this.geometryChanged()\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      const filter = arguments[0]\n      filter.filter(this)\n      for (let i = 0; i < this._geometries.length; i++) \n        this._geometries[i].apply(filter)\n      \n    }\n  }\n  getBoundary() {\n    Geometry.checkNotGeometryCollection(this)\n    Assert.shouldNeverReachHere()\n    return null\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_GEOMETRYCOLLECTION\n  }\n  isEmpty() {\n    for (let i = 0; i < this._geometries.length; i++) \n      if (!this._geometries[i].isEmpty()) \n        return false\n      \n    \n    return true\n  }\n}\n","import Geometry from './Geometry.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport Dimension from './Dimension.js'\nimport Puntal from './Puntal.js'\nexport default class MultiPoint extends GeometryCollection {\n  constructor() {\n    super()\n    MultiPoint.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const points = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, points, factory)\n  }\n  copyInternal() {\n    const points = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < points.length; i++) \n      points[i] = this._geometries[i].copy()\n    \n    return new MultiPoint(points, this._factory)\n  }\n  isValid() {\n    return true\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getCoordinate() {\n    if (arguments.length === 1 && Number.isInteger(arguments[0])) {\n      const n = arguments[0]\n      return this._geometries[n].getCoordinate()\n    } else {\n      return super.getCoordinate.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTIPOINT\n  }\n  getDimension() {\n    return 0\n  }\n  getBoundary() {\n    return this.getFactory().createGeometryCollection()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTIPOINT\n  }\n  get interfaces_() {\n    return [Puntal]\n  }\n}\n","import LineString from './LineString.js'\nimport Geometry from './Geometry.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport Dimension from './Dimension.js'\nexport default class LinearRing extends LineString {\n  constructor() {\n    super()\n    LinearRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const points = arguments[0], factory = arguments[1]\n    LineString.constructor_.call(this, points, factory)\n    this.validateConstruction()\n  }\n  copyInternal() {\n    return new LinearRing(this._points.copy(), this._factory)\n  }\n  getBoundaryDimension() {\n    return Dimension.FALSE\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return true\n    \n    return super.isClosed.call(this)\n  }\n  reverseInternal() {\n    const seq = this._points.copy()\n    CoordinateSequences.reverse(seq)\n    return this.getFactory().createLinearRing(seq)\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_LINEARRING\n  }\n  validateConstruction() {\n    if (!this.isEmpty() && !super.isClosed.call(this)) \n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    \n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) \n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    \n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_LINEARRING\n  }\n}\nLinearRing.MINIMUM_VALID_SIZE = 4\n","import CoordinateXY from './CoordinateXY.js'\nimport Coordinate from './Coordinate.js'\nimport CoordinateXYM from './CoordinateXYM.js'\nimport CoordinateXYZM from './CoordinateXYZM.js'\nexport default class Coordinates {\n  static measures(coordinate) {\n    if (coordinate instanceof CoordinateXY) \n      return 0\n    else if (coordinate instanceof CoordinateXYM) \n      return 1\n    else if (coordinate instanceof CoordinateXYZM) \n      return 1\n    else if (coordinate instanceof Coordinate) \n      return 0\n    \n    return 0\n  }\n  static dimension(coordinate) {\n    if (coordinate instanceof CoordinateXY) \n      return 2\n    else if (coordinate instanceof CoordinateXYM) \n      return 3\n    else if (coordinate instanceof CoordinateXYZM) \n      return 4\n    else if (coordinate instanceof Coordinate) \n      return 3\n    \n    return 3\n  }\n  static create() {\n    if (arguments.length === 1) {\n      const dimension = arguments[0]\n      return Coordinates.create(dimension, 0)\n    } else if (arguments.length === 2) {\n      const dimension = arguments[0], measures = arguments[1]\n      if (dimension === 2) \n        return new CoordinateXY()\n      else if (dimension === 3 && measures === 0) \n        return new Coordinate()\n      else if (dimension === 3 && measures === 1) \n        return new CoordinateXYM()\n      else if (dimension === 4 && measures === 1) \n        return new CoordinateXYZM()\n      \n      return new Coordinate()\n    }\n  }\n}\n","import CoordinateList from './CoordinateList.js'\nimport Coordinates from './Coordinates.js'\nimport MathUtil from '../math/MathUtil.js'\nimport System from '../../../../java/lang/System.js'\nimport Comparator from '../../../../java/util/Comparator.js'\nimport Envelope from './Envelope.js'\nexport default class CoordinateArrays {\n  static isRing(pts) {\n    if (pts.length < 4) return false\n    if (!pts[0].equals2D(pts[pts.length - 1])) return false\n    return true\n  }\n  static ptNotInList(testPts, pts) {\n    for (let i = 0; i < testPts.length; i++) {\n      const testPt = testPts[i]\n      if (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt\n    }\n    return null\n  }\n  static scroll(coordinates, firstCoordinate) {\n    const i = CoordinateArrays.indexOf(firstCoordinate, coordinates)\n    if (i < 0) return null\n    const newCoordinates = new Array(coordinates.length).fill(null)\n    System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i)\n    System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i)\n    System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length)\n  }\n  static equals() {\n    if (arguments.length === 2) {\n      const coord1 = arguments[0], coord2 = arguments[1]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) \n        if (!coord1[i].equals(coord2[i])) return false\n      \n      return true\n    } else if (arguments.length === 3) {\n      const coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2]\n      if (coord1 === coord2) return true\n      if (coord1 === null || coord2 === null) return false\n      if (coord1.length !== coord2.length) return false\n      for (let i = 0; i < coord1.length; i++) \n        if (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false\n      \n      return true\n    }\n  }\n  static intersection(coordinates, env) {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < coordinates.length; i++) \n      if (env.intersects(coordinates[i])) coordList.add(coordinates[i], true)\n    \n    return coordList.toCoordinateArray()\n  }\n  static measures(pts) {\n    if (pts === null || pts.length === 0) \n      return 0\n    \n    let measures = 0\n    for (const coordinate of pts) \n      measures = Math.max(measures, Coordinates.measures(coordinate))\n    \n    return measures\n  }\n  static hasRepeatedPoints(coord) {\n    for (let i = 1; i < coord.length; i++) \n      if (coord[i - 1].equals(coord[i])) \n        return true\n      \n    \n    return false\n  }\n  static removeRepeatedPoints(coord) {\n    if (!CoordinateArrays.hasRepeatedPoints(coord)) return coord\n    const coordList = new CoordinateList(coord, false)\n    return coordList.toCoordinateArray()\n  }\n  static reverse(coord) {\n    const last = coord.length - 1\n    const mid = Math.trunc(last / 2)\n    for (let i = 0; i <= mid; i++) {\n      const tmp = coord[i]\n      coord[i] = coord[last - i]\n      coord[last - i] = tmp\n    }\n  }\n  static removeNull(coord) {\n    let nonNull = 0\n    for (let i = 0; i < coord.length; i++) \n      if (coord[i] !== null) nonNull++\n    \n    const newCoord = new Array(nonNull).fill(null)\n    if (nonNull === 0) return newCoord\n    let j = 0\n    for (let i = 0; i < coord.length; i++) \n      if (coord[i] !== null) newCoord[j++] = coord[i]\n    \n    return newCoord\n  }\n  static copyDeep() {\n    if (arguments.length === 1) {\n      const coordinates = arguments[0]\n      const copy = new Array(coordinates.length).fill(null)\n      for (let i = 0; i < coordinates.length; i++) \n        copy[i] = coordinates[i].copy()\n      \n      return copy\n    } else if (arguments.length === 5) {\n      const src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4]\n      for (let i = 0; i < length; i++) \n        dest[destStart + i] = src[srcStart + i].copy()\n      \n    }\n  }\n  static isEqualReversed(pts1, pts2) {\n    for (let i = 0; i < pts1.length; i++) {\n      const p1 = pts1[i]\n      const p2 = pts2[pts1.length - i - 1]\n      if (p1.compareTo(p2) !== 0) return false\n    }\n    return true\n  }\n  static envelope(coordinates) {\n    const env = new Envelope()\n    for (let i = 0; i < coordinates.length; i++) \n      env.expandToInclude(coordinates[i])\n    \n    return env\n  }\n  static toCoordinateArray(coordList) {\n    return coordList.toArray(CoordinateArrays.coordArrayType)\n  }\n  static dimension(pts) {\n    if (pts === null || pts.length === 0) \n      return 3\n    \n    let dimension = 0\n    for (const coordinate of pts) \n      dimension = Math.max(dimension, Coordinates.dimension(coordinate))\n    \n    return dimension\n  }\n  static atLeastNCoordinatesOrNothing(n, c) {\n    return c.length >= n ? c : []\n  }\n  static indexOf(coordinate, coordinates) {\n    for (let i = 0; i < coordinates.length; i++) \n      if (coordinate.equals(coordinates[i])) \n        return i\n      \n    \n    return -1\n  }\n  static increasingDirection(pts) {\n    for (let i = 0; i < Math.trunc(pts.length / 2); i++) {\n      const j = pts.length - 1 - i\n      const comp = pts[i].compareTo(pts[j])\n      if (comp !== 0) return comp\n    }\n    return 1\n  }\n  static compare(pts1, pts2) {\n    let i = 0\n    while (i < pts1.length && i < pts2.length) {\n      const compare = pts1[i].compareTo(pts2[i])\n      if (compare !== 0) return compare\n      i++\n    }\n    if (i < pts2.length) return -1\n    if (i < pts1.length) return 1\n    return 0\n  }\n  static minCoordinate(coordinates) {\n    let minCoord = null\n    for (let i = 0; i < coordinates.length; i++) \n      if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) \n        minCoord = coordinates[i]\n      \n    \n    return minCoord\n  }\n  static extract(pts, start, end) {\n    start = MathUtil.clamp(start, 0, pts.length)\n    end = MathUtil.clamp(end, -1, pts.length)\n    let npts = end - start + 1\n    if (end < 0) npts = 0\n    if (start >= pts.length) npts = 0\n    if (end < start) npts = 0\n    const extractPts = new Array(npts).fill(null)\n    if (npts === 0) return extractPts\n    let iPts = 0\n    for (let i = start; i <= end; i++) \n      extractPts[iPts++] = pts[i]\n    \n    return extractPts\n  }\n}\nclass ForwardComparator {\n  compare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    return CoordinateArrays.compare(pts1, pts2)\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nclass BidirectionalComparator {\n  compare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const forwardComp = CoordinateArrays.compare(pts1, pts2)\n    const isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2)\n    if (isEqualRev) return 0\n    return forwardComp\n  }\n  OLDcompare(o1, o2) {\n    const pts1 = o1\n    const pts2 = o2\n    if (pts1.length < pts2.length) return -1\n    if (pts1.length > pts2.length) return 1\n    if (pts1.length === 0) return 0\n    const dir1 = CoordinateArrays.increasingDirection(pts1)\n    const dir2 = CoordinateArrays.increasingDirection(pts2)\n    let i1 = dir1 > 0 ? 0 : pts1.length - 1\n    let i2 = dir2 > 0 ? 0 : pts1.length - 1\n    for (let i = 0; i < pts1.length; i++) {\n      const comparePt = pts1[i1].compareTo(pts2[i2])\n      if (comparePt !== 0) return comparePt\n      i1 += dir1\n      i2 += dir2\n    }\n    return 0\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nCoordinateArrays.ForwardComparator = ForwardComparator\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator\nCoordinateArrays.coordArrayType = new Array(0).fill(null)\n","export default class StringBuilder {\n  constructor(str) {\n    this.str = str\n  }\n  append(e) {\n    this.str += e\n  }\n  setCharAt(i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  toString() {\n    return this.str\n  }\n}","import hasInterface from '../../../../../hasInterface.js'\nimport Coordinate from '../Coordinate.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Coordinates from '../Coordinates.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport CoordinateArrays from '../CoordinateArrays.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport StringBuilder from '../../../../../java/lang/StringBuilder.js'\nexport default class CoordinateArraySequence {\n  constructor() {\n    CoordinateArraySequence.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dimension = 3\n    this._measures = 0\n    this._coordinates = null\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        CoordinateArraySequence.constructor_.call(this, coordinates, CoordinateArrays.dimension(coordinates), CoordinateArrays.measures(coordinates))\n      } else if (Number.isInteger(arguments[0])) {\n        const size = arguments[0]\n        this._coordinates = new Array(size).fill(null)\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = new Coordinate()\n        \n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        if (coordSeq === null) {\n          this._coordinates = new Array(0).fill(null)\n          return null\n        }\n        this._dimension = coordSeq.getDimension()\n        this._measures = coordSeq.getMeasures()\n        this._coordinates = new Array(coordSeq.size()).fill(null)\n        for (let i = 0; i < this._coordinates.length; i++) \n          this._coordinates[i] = coordSeq.getCoordinateCopy(i)\n        \n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n        const coordinates = arguments[0], dimension = arguments[1]\n        CoordinateArraySequence.constructor_.call(this, coordinates, dimension, CoordinateArrays.measures(coordinates))\n      } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n        const size = arguments[0], dimension = arguments[1]\n        this._coordinates = new Array(size).fill(null)\n        this._dimension = dimension\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = Coordinates.create(dimension)\n        \n      }\n    } else if (arguments.length === 3) {\n      if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Array && Number.isInteger(arguments[1]))) {\n        const coordinates = arguments[0], dimension = arguments[1], measures = arguments[2]\n        this._dimension = dimension\n        this._measures = measures\n        if (coordinates === null) \n          this._coordinates = new Array(0).fill(null)\n        else \n          this._coordinates = coordinates\n        \n      } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n        const size = arguments[0], dimension = arguments[1], measures = arguments[2]\n        this._coordinates = new Array(size).fill(null)\n        this._dimension = dimension\n        this._measures = measures\n        for (let i = 0; i < size; i++) \n          this._coordinates[i] = this.createCoordinate()\n        \n      }\n    }\n  }\n  getM(index) {\n    if (this.hasM()) \n      return this._coordinates[index].getM()\n    else \n      return Double.NaN\n    \n  }\n  setOrdinate(index, ordinateIndex, value) {\n    switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value\n      break\n    default:\n      this._coordinates[index].setOrdinate(ordinateIndex, value)\n    }\n  }\n  getZ(index) {\n    if (this.hasZ()) \n      return this._coordinates[index].getZ()\n    else \n      return Double.NaN\n    \n  }\n  size() {\n    return this._coordinates.length\n  }\n  getOrdinate(index, ordinateIndex) {\n    switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    default:\n      return this._coordinates[index].getOrdinate(ordinateIndex)\n    }\n  }\n  getCoordinate() {\n    if (arguments.length === 1) {\n      const i = arguments[0]\n      return this._coordinates[i]\n    } else if (arguments.length === 2) {\n      const index = arguments[0], coord = arguments[1]\n      coord.setCoordinate(this._coordinates[index])\n    }\n  }\n  getCoordinateCopy(i) {\n    const copy = this.createCoordinate()\n    copy.setCoordinate(this._coordinates[i])\n    return copy\n  }\n  createCoordinate() {\n    return Coordinates.create(this.getDimension(), this.getMeasures())\n  }\n  getDimension() {\n    return this._dimension\n  }\n  getX(index) {\n    return this._coordinates[index].x\n  }\n  getMeasures() {\n    return this._measures\n  }\n  expandEnvelope(env) {\n    for (let i = 0; i < this._coordinates.length; i++) \n      env.expandToInclude(this._coordinates[i])\n    \n    return env\n  }\n  copy() {\n    const cloneCoordinates = new Array(this.size()).fill(null)\n    for (let i = 0; i < this._coordinates.length; i++) {\n      const duplicate = this.createCoordinate()\n      duplicate.setCoordinate(this._coordinates[i])\n      cloneCoordinates[i] = duplicate\n    }\n    return new CoordinateArraySequence(cloneCoordinates, this._dimension, this._measures)\n  }\n  toString() {\n    if (this._coordinates.length > 0) {\n      const strBuilder = new StringBuilder(17 * this._coordinates.length)\n      strBuilder.append('(')\n      strBuilder.append(this._coordinates[0])\n      for (let i = 1; i < this._coordinates.length; i++) {\n        strBuilder.append(', ')\n        strBuilder.append(this._coordinates[i])\n      }\n      strBuilder.append(')')\n      return strBuilder.toString()\n    } else {\n      return '()'\n    }\n  }\n  getY(index) {\n    return this._coordinates[index].y\n  }\n  toCoordinateArray() {\n    return this._coordinates\n  }\n  get interfaces_() {\n    return [CoordinateSequence, Serializable]\n  }\n}\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport CoordinateArraySequence from './CoordinateArraySequence.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nexport default class CoordinateArraySequenceFactory {\n  static instance() {\n    return CoordinateArraySequenceFactory.instanceObject\n  }\n  readResolve() {\n    return CoordinateArraySequenceFactory.instance()\n  }\n  create() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return new CoordinateArraySequence(coordinates)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordSeq = arguments[0]\n        return new CoordinateArraySequence(coordSeq)\n      }\n    } else if (arguments.length === 2) {\n      let size = arguments[0], dimension = arguments[1]\n      if (dimension > 3) dimension = 3\n      if (dimension < 2) dimension = 2\n      return new CoordinateArraySequence(size, dimension)\n    } else if (arguments.length === 3) {\n      let size = arguments[0], dimension = arguments[1], measures = arguments[2]\n      let spatial = dimension - measures\n      if (measures > 1) \n        measures = 1\n      \n      if (spatial > 3) \n        spatial = 3\n      \n      if (spatial < 2) spatial = 2\n      return new CoordinateArraySequence(size, spatial + measures, measures)\n    }\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFactory, Serializable]\n  }\n}\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory()\n","import Geometry from './Geometry.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport Polygonal from './Polygonal.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class MultiPolygon extends GeometryCollection {\n  constructor() {\n    super()\n    MultiPolygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const polygons = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, polygons, factory)\n  }\n  copyInternal() {\n    const polygons = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < polygons.length; i++) \n      polygons[i] = this._geometries[i].copy()\n    \n    return new MultiPolygon(polygons, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    return 1\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTIPOLYGON\n  }\n  getDimension() {\n    return 2\n  }\n  getBoundary() {\n    if (this.isEmpty()) \n      return this.getFactory().createMultiLineString()\n    \n    const allRings = new ArrayList()\n    for (let i = 0; i < this._geometries.length; i++) {\n      const polygon = this._geometries[i]\n      const rings = polygon.getBoundary()\n      for (let j = 0; j < rings.getNumGeometries(); j++) \n        allRings.add(rings.getGeometryN(j))\n      \n    }\n    const allRingsArray = new Array(allRings.size()).fill(null)\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTIPOLYGON\n  }\n  get interfaces_() {\n    return [Polygonal]\n  }\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n */\nexport default class Map {\n  /**\n     * Returns the value to which the specified key is mapped, or null if this map\n     * contains no mapping for the key.\n     * @param {Object} key\n     * @return {Object}\n     */\n  get() { }\n\n  /**\n     * Associates the specified value with the specified key in this map (optional\n     * operation).\n     * @param {Object} key\n     * @param {Object} value\n     * @return {Object}\n     */\n  put() { }\n\n  /**\n     * Returns the number of key-value mappings in this map.\n     * @return {number}\n     */\n  size() { }\n\n  /**\n     * Returns a Collection view of the values contained in this map.\n     * @return {javascript.util.Collection}\n     */\n  values() { }\n\n  /**\n     * Returns a {@link Set} view of the mappings contained in this map.\n     * The set is backed by the map, so changes to the map are\n     * reflected in the set, and vice-versa.  If the map is modified\n     * while an iteration over the set is in progress (except through\n     * the iterator's own <tt>remove</tt> operation, or through the\n     * <tt>setValue</tt> operation on a map entry returned by the\n     * iterator) the results of the iteration are undefined.  The set\n     * supports element removal, which removes the corresponding\n     * mapping from the map, via the <tt>Iterator.remove</tt>,\n     * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n     * <tt>clear</tt> operations.  It does not support the\n     * <tt>add</tt> or <tt>addAll</tt> operations.\n     *\n     * @return {Set} a set view of the mappings contained in this map\n     */\n  entrySet() { }\n}\n","import Collection from './Collection.js'\nimport NoSuchElementException from './NoSuchElementException.js'\nimport UnsupportedOperationException from '../lang/UnsupportedOperationException.js'\nimport Set from './Set.js'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n */\nexport default class HashSet extends Set {\n  constructor(o) {\n    super()\n    this.map = new Map()\n    if (o instanceof Collection)\n      this.addAll(o)\n  }\n\n  contains(o) {\n    const hashCode = o.hashCode ? o.hashCode() : o\n    if (this.map.has(hashCode))\n      return true\n    return false\n  }\n\n  add(o) {\n    const hashCode = o.hashCode ? o.hashCode() : o\n    if (this.map.has(hashCode))\n      return false\n    return !!this.map.set(hashCode, o)\n  }\n\n  addAll(c) {\n    for (const e of c)\n      this.add(e)\n    return true\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n\n  size() {\n    return this.map.size\n  }\n\n  isEmpty() {\n    return this.map.size === 0\n  }\n\n  toArray() {\n    return Array.from(this.map.values())\n  }\n\n  iterator() {\n    return new Iterator(this.map)\n  }\n\n  [Symbol.iterator]() {\n    return this.map\n  }\n}\n\nclass Iterator {\n  constructor(map) {\n    this.iterator = map.values()\n    const { done, value } = this.iterator.next()\n    this.done = done\n    this.value = value\n  }\n\n  next() {\n    if (this.done)\n      throw new NoSuchElementException()\n    const current = this.value\n    const { done, value } = this.iterator.next()\n    this.done = done\n    this.value = value\n    return current\n  }\n\n  hasNext() {\n    return !this.done\n  }\n\n  remove() {\n    throw new UnsupportedOperationException()\n  }\n}\n","import ArrayList from './ArrayList.js'\nimport MapInterface from './Map.js'\nimport HashSet from './HashSet.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n */\nexport default class HashMap extends MapInterface {\n  constructor() {\n    super()\n    this.map = new Map()\n  }\n\n  get(key) {\n    return this.map.get(key) || null\n  }\n\n  put(key, value) {\n    this.map.set(key, value)\n    return value\n  }\n\n  values() {\n    const arrayList = new ArrayList()\n    const it = this.map.values()\n    let o = it.next()\n    while (!o.done) {\n      arrayList.add(o.value)\n      o = it.next()\n    }\n    return arrayList\n  }\n\n  entrySet() {\n    const hashSet = new HashSet()\n    this.map.entries().forEach(entry => hashSet.add(entry))\n    return hashSet\n  }\n\n  size() {\n    return this.map.size()\n  }\n}\n","import HashMap from '../../../../java/util/HashMap.js'\nimport Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nexport default class PrecisionModel {\n  constructor() {\n    PrecisionModel.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._modelType = null\n    this._scale = null\n    if (arguments.length === 0) \n      this._modelType = PrecisionModel.FLOATING\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Type) {\n        const modelType = arguments[0]\n        this._modelType = modelType\n        if (modelType === PrecisionModel.FIXED) \n          this.setScale(1.0)\n        \n      } else if (typeof arguments[0] === 'number') {\n        const scale = arguments[0]\n        this._modelType = PrecisionModel.FIXED\n        this.setScale(scale)\n      } else if (arguments[0] instanceof PrecisionModel) {\n        const pm = arguments[0]\n        this._modelType = pm._modelType\n        this._scale = pm._scale\n      }\n    \n  }\n  static mostPrecise(pm1, pm2) {\n    if (pm1.compareTo(pm2) >= 0) return pm1\n    return pm2\n  }\n  equals(other) {\n    if (!(other instanceof PrecisionModel)) \n      return false\n    \n    const otherPrecisionModel = other\n    return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n  }\n  compareTo(o) {\n    const other = o\n    const sigDigits = this.getMaximumSignificantDigits()\n    const otherSigDigits = other.getMaximumSignificantDigits()\n    return Integer.compare(sigDigits, otherSigDigits)\n  }\n  getScale() {\n    return this._scale\n  }\n  isFloating() {\n    return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n  }\n  getType() {\n    return this._modelType\n  }\n  toString() {\n    let description = 'UNKNOWN'\n    if (this._modelType === PrecisionModel.FLOATING) \n      description = 'Floating'\n    else if (this._modelType === PrecisionModel.FLOATING_SINGLE) \n      description = 'Floating-Single'\n    else if (this._modelType === PrecisionModel.FIXED) \n      description = 'Fixed (Scale=' + this.getScale() + ')'\n    \n    return description\n  }\n  makePrecise() {\n    if (typeof arguments[0] === 'number') {\n      const val = arguments[0]\n      if (Double.isNaN(val)) return val\n      if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n        const floatSingleVal = val\n        return floatSingleVal\n      }\n      if (this._modelType === PrecisionModel.FIXED) \n        return Math.round(val * this._scale) / this._scale\n      \n      return val\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      if (this._modelType === PrecisionModel.FLOATING) return null\n      coord.x = this.makePrecise(coord.x)\n      coord.y = this.makePrecise(coord.y)\n    }\n  }\n  getMaximumSignificantDigits() {\n    let maxSigDigits = 16\n    if (this._modelType === PrecisionModel.FLOATING) \n      maxSigDigits = 16\n    else if (this._modelType === PrecisionModel.FLOATING_SINGLE) \n      maxSigDigits = 6\n    else if (this._modelType === PrecisionModel.FIXED) \n      maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)))\n    \n    return maxSigDigits\n  }\n  setScale(scale) {\n    this._scale = Math.abs(scale)\n  }\n  get interfaces_() {\n    return [Serializable, Comparable]\n  }\n}\nclass Type {\n  constructor() {\n    Type.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._name = null\n    const name = arguments[0]\n    this._name = name\n    Type.nameToTypeMap.put(name, this)\n  }\n  readResolve() {\n    return Type.nameToTypeMap.get(this._name)\n  }\n  toString() {\n    return this._name\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\nType.nameToTypeMap = new HashMap()\nPrecisionModel.Type = Type\nPrecisionModel.FIXED = new Type('FIXED')\nPrecisionModel.FLOATING = new Type('FLOATING')\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE')\nPrecisionModel.maximumPreciseValue = 9007199254740992.0\n","import Geometry from './Geometry.js'\nimport Lineal from './Lineal.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport Dimension from './Dimension.js'\nexport default class MultiLineString extends GeometryCollection {\n  constructor() {\n    super()\n    MultiLineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const lineStrings = arguments[0], factory = arguments[1]\n    GeometryCollection.constructor_.call(this, lineStrings, factory)\n  }\n  copyInternal() {\n    const lineStrings = new Array(this._geometries.length).fill(null)\n    for (let i = 0; i < lineStrings.length; i++) \n      lineStrings[i] = this._geometries[i].copy()\n    \n    return new MultiLineString(lineStrings, this._factory)\n  }\n  equalsExact() {\n    if (arguments.length === 2 && (typeof arguments[1] === 'number' && arguments[0] instanceof Geometry)) {\n      const other = arguments[0], tolerance = arguments[1]\n      if (!this.isEquivalentClass(other)) \n        return false\n      \n      return super.equalsExact.call(this, other, tolerance)\n    } else {\n      return super.equalsExact.apply(this, arguments)\n    }\n  }\n  getBoundaryDimension() {\n    if (this.isClosed()) \n      return Dimension.FALSE\n    \n    return 0\n  }\n  isClosed() {\n    if (this.isEmpty()) \n      return false\n    \n    for (let i = 0; i < this._geometries.length; i++) \n      if (!this._geometries[i].isClosed()) \n        return false\n      \n    \n    return true\n  }\n  getTypeCode() {\n    return Geometry.TYPECODE_MULTILINESTRING\n  }\n  getDimension() {\n    return 1\n  }\n  getBoundary() {\n    throw new UnsupportedOperationException()\n  }\n  getGeometryType() {\n    return Geometry.TYPENAME_MULTILINESTRING\n  }\n  get interfaces_() {\n    return [Lineal]\n  }\n}\n","import CoordinateSequenceFactory from './CoordinateSequenceFactory.js'\nimport LineString from './LineString.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Point from './Point.js'\nimport Polygon from './Polygon.js'\nimport MultiPoint from './MultiPoint.js'\nimport LinearRing from './LinearRing.js'\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory.js'\nimport MultiPolygon from './MultiPolygon.js'\nimport CoordinateSequences from './CoordinateSequences.js'\nimport CoordinateSequence from './CoordinateSequence.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport PrecisionModel from './PrecisionModel.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport Assert from '../util/Assert.js'\nimport MultiLineString from './MultiLineString.js'\nexport default class GeometryFactory {\n  constructor() {\n    GeometryFactory.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._precisionModel = null\n    this._coordinateSequenceFactory = null\n    this._SRID = null\n    if (arguments.length === 0) {\n      GeometryFactory.constructor_.call(this, new PrecisionModel(), 0)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n        const coordinateSequenceFactory = arguments[0]\n        GeometryFactory.constructor_.call(this, new PrecisionModel(), 0, coordinateSequenceFactory)\n      } else if (arguments[0] instanceof PrecisionModel) {\n        const precisionModel = arguments[0]\n        GeometryFactory.constructor_.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory())\n      }\n    } else if (arguments.length === 2) {\n      const precisionModel = arguments[0], SRID = arguments[1]\n      GeometryFactory.constructor_.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory())\n    } else if (arguments.length === 3) {\n      const precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2]\n      this._precisionModel = precisionModel\n      this._coordinateSequenceFactory = coordinateSequenceFactory\n      this._SRID = SRID\n    }\n  }\n  static toMultiPolygonArray(multiPolygons) {\n    const multiPolygonArray = new Array(multiPolygons.size()).fill(null)\n    return multiPolygons.toArray(multiPolygonArray)\n  }\n  static toGeometryArray(geometries) {\n    if (geometries === null) return null\n    const geometryArray = new Array(geometries.size()).fill(null)\n    return geometries.toArray(geometryArray)\n  }\n  static getDefaultCoordinateSequenceFactory() {\n    return CoordinateArraySequenceFactory.instance()\n  }\n  static toMultiLineStringArray(multiLineStrings) {\n    const multiLineStringArray = new Array(multiLineStrings.size()).fill(null)\n    return multiLineStrings.toArray(multiLineStringArray)\n  }\n  static toLineStringArray(lineStrings) {\n    const lineStringArray = new Array(lineStrings.size()).fill(null)\n    return lineStrings.toArray(lineStringArray)\n  }\n  static toMultiPointArray(multiPoints) {\n    const multiPointArray = new Array(multiPoints.size()).fill(null)\n    return multiPoints.toArray(multiPointArray)\n  }\n  static toLinearRingArray(linearRings) {\n    const linearRingArray = new Array(linearRings.size()).fill(null)\n    return linearRings.toArray(linearRingArray)\n  }\n  static toPointArray(points) {\n    const pointArray = new Array(points.size()).fill(null)\n    return points.toArray(pointArray)\n  }\n  static toPolygonArray(polygons) {\n    const polygonArray = new Array(polygons.size()).fill(null)\n    return polygons.toArray(polygonArray)\n  }\n  static createPointFromInternalCoord(coord, exemplar) {\n    exemplar.getPrecisionModel().makePrecise(coord)\n    return exemplar.getFactory().createPoint(coord)\n  }\n  createEmpty(dimension) {\n    switch (dimension) {\n    case -1:\n      return this.createGeometryCollection()\n    case 0:\n      return this.createPoint()\n    case 1:\n      return this.createLineString()\n    case 2:\n      return this.createPolygon()\n    default:\n      throw new IllegalArgumentException('Invalid dimension: ' + dimension)\n    }\n  }\n  toGeometry(envelope) {\n    if (envelope.isNull()) \n      return this.createPoint()\n    \n    if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) \n      return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n    \n    if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) \n      return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n    \n    return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n  }\n  createLineString() {\n    if (arguments.length === 0) \n      return this.createLineString(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LineString(coordinates, this)\n      }\n    \n  }\n  createMultiLineString() {\n    if (arguments.length === 0) {\n      return new MultiLineString(null, this)\n    } else if (arguments.length === 1) {\n      const lineStrings = arguments[0]\n      return new MultiLineString(lineStrings, this)\n    }\n  }\n  buildGeometry(geomList) {\n    let geomType = null\n    let isHeterogeneous = false\n    let hasGeometryCollection = false\n    for (let i = geomList.iterator(); i.hasNext(); ) {\n      const geom = i.next()\n      const partType = geom.getTypeCode()\n      if (geomType === null) \n        geomType = partType\n      \n      if (partType !== geomType) \n        isHeterogeneous = true\n      \n      if (geom instanceof GeometryCollection) hasGeometryCollection = true\n    }\n    if (geomType === null) \n      return this.createGeometryCollection()\n    \n    if (isHeterogeneous || hasGeometryCollection) \n      return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n    \n    const geom0 = geomList.iterator().next()\n    const isCollection = geomList.size() > 1\n    if (isCollection) {\n      if (geom0 instanceof Polygon) \n        return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n      else if (geom0 instanceof LineString) \n        return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n      else if (geom0 instanceof Point) \n        return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n      \n      Assert.shouldNeverReachHere('Unhandled geometry type: ' + geom0.getGeometryType())\n    }\n    return geom0\n  }\n  createMultiPointFromCoords(coordinates) {\n    return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n  }\n  createPoint() {\n    if (arguments.length === 0) \n      return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Coordinate) {\n        const coordinate = arguments[0]\n        return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new Point(coordinates, this)\n      }\n    \n  }\n  getCoordinateSequenceFactory() {\n    return this._coordinateSequenceFactory\n  }\n  createPolygon() {\n    if (arguments.length === 0) {\n      return this.createPolygon(null, null)\n    } else if (arguments.length === 1) {\n      if (hasInterface(arguments[0], CoordinateSequence)) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof Array) {\n        const shell = arguments[0]\n        return this.createPolygon(this.createLinearRing(shell))\n      } else if (arguments[0] instanceof LinearRing) {\n        const shell = arguments[0]\n        return this.createPolygon(shell, null)\n      }\n    } else if (arguments.length === 2) {\n      const shell = arguments[0], holes = arguments[1]\n      return new Polygon(shell, holes, this)\n    }\n  }\n  getSRID() {\n    return this._SRID\n  }\n  createGeometryCollection() {\n    if (arguments.length === 0) {\n      return new GeometryCollection(null, this)\n    } else if (arguments.length === 1) {\n      const geometries = arguments[0]\n      return new GeometryCollection(geometries, this)\n    }\n  }\n  getPrecisionModel() {\n    return this._precisionModel\n  }\n  createLinearRing() {\n    if (arguments.length === 0) \n      return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const coordinates = arguments[0]\n        return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        return new LinearRing(coordinates, this)\n      }\n    \n  }\n  createMultiPolygon() {\n    if (arguments.length === 0) {\n      return new MultiPolygon(null, this)\n    } else if (arguments.length === 1) {\n      const polygons = arguments[0]\n      return new MultiPolygon(polygons, this)\n    }\n  }\n  createMultiPoint() {\n    if (arguments.length === 0) \n      return new MultiPoint(null, this)\n    else if (arguments.length === 1) \n      if (arguments[0] instanceof Array) {\n        const point = arguments[0]\n        return new MultiPoint(point, this)\n      } else if (hasInterface(arguments[0], CoordinateSequence)) {\n        const coordinates = arguments[0]\n        if (coordinates === null) \n          return this.createMultiPoint(new Array(0).fill(null))\n        \n        const points = new Array(coordinates.size()).fill(null)\n        for (let i = 0; i < coordinates.size(); i++) {\n          const ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension(), coordinates.getMeasures())\n          CoordinateSequences.copy(coordinates, i, ptSeq, 0, 1)\n          points[i] = this.createPoint(ptSeq)\n        }\n        return this.createMultiPoint(points)\n      }\n    \n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport GeometryFactory from '../geom/GeometryFactory.js'\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nconst GeometryLayout = {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n}\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nconst GeometryType = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY'\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z'\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M'\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM'\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6,\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst WKTGeometryType = {}\nfor (const type in GeometryType)\n  WKTGeometryType[type] = GeometryType[type].toUpperCase()\n\n\n/**\n * Class to tokenize a WKT string.\n */\nclass Lexer {\n  /**\n   * @param {string} wkt WKT string.\n   */\n  constructor(wkt) {\n    /**\n     * @type {string}\n     */\n    this.wkt = wkt\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = -1\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is alphabetic.\n   * @private\n   */\n  isAlpha_(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')\n  }\n\n  /**\n   * @param {string} c Character.\n   * @param {boolean=} opt_decimal Whether the string number\n   *     contains a dot, i.e. is a decimal number.\n   * @return {boolean} Whether the character is numeric.\n   * @private\n   */\n  isNumeric_(c, opt_decimal) {\n    const decimal = opt_decimal !== undefined ? opt_decimal : false\n    return (c >= '0' && c <= '9') || (c == '.' && !decimal)\n  }\n\n  /**\n   * @param {string} c Character.\n   * @return {boolean} Whether the character is whitespace.\n   * @private\n   */\n  isWhiteSpace_(c) {\n    return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n'\n  }\n\n  /**\n   * @return {string} Next string character.\n   * @private\n   */\n  nextChar_() {\n    return this.wkt.charAt(++this.index_)\n  }\n\n  /**\n   * Fetch and return the next token.\n   * @return {!Token} Next string token.\n   */\n  nextToken() {\n    const c = this.nextChar_()\n    const position = this.index_\n    /** @type {number|string} */\n    let value = c\n    let type\n\n    if (c == '(') {\n      type = TokenType.LEFT_PAREN\n    } else if (c == ',') {\n      type = TokenType.COMMA\n    } else if (c == ')') {\n      type = TokenType.RIGHT_PAREN\n    } else if (this.isNumeric_(c) || c == '-') {\n      type = TokenType.NUMBER\n      value = this.readNumber_()\n    } else if (this.isAlpha_(c)) {\n      type = TokenType.TEXT\n      value = this.readText_()\n    } else if (this.isWhiteSpace_(c)) {\n      return this.nextToken()\n    } else if (c === '') {\n      type = TokenType.EOF\n    } else {\n      throw new Error('Unexpected character: ' + c)\n    }\n\n    return { position: position, value: value, type: type }\n  }\n\n  /**\n   * @return {number} Numeric token value.\n   * @private\n   */\n  readNumber_() {\n    let c\n    const index = this.index_\n    let decimal = false\n    let scientificNotation = false\n    do {\n      if (c == '.')\n        decimal = true\n      else if (c == 'e' || c == 'E')\n        scientificNotation = true\n      c = this.nextChar_()\n    } while (\n      this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      (!scientificNotation && (c == 'e' || c == 'E')) ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      (scientificNotation && (c == '-' || c == '+'))\n    )\n    return parseFloat(this.wkt.substring(index, this.index_--))\n  }\n\n  /**\n   * @return {string} String token value.\n   * @private\n   */\n  readText_() {\n    let c\n    const index = this.index_\n    do\n      c = this.nextChar_()\n    while (this.isAlpha_(c))\n    return this.wkt.substring(index, this.index_--).toUpperCase()\n  }\n}\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nclass Parser {\n  /**\n   * @param {Lexer} lexer The lexer.\n   */\n  constructor(lexer, factory) {\n    /**\n     * @type {Lexer}\n     * @private\n     */\n    this.lexer_ = lexer\n\n    /**\n     * @type {Token}\n     * @private\n     */\n    this.token_\n\n    /**\n     * @type {import(\"../geom/GeometryLayout.js\").default}\n     * @private\n     */\n    this.layout_ = GeometryLayout.XY\n\n    this.factory = factory\n  }\n\n  /**\n   * Fetch the next token form the lexer and replace the active token.\n   * @private\n   */\n  consume_() {\n    this.token_ = this.lexer_.nextToken()\n  }\n\n  /**\n   * Tests if the given type matches the type of the current token.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  isTokenType(type) {\n    const isMatch = this.token_.type == type\n    return isMatch\n  }\n\n  /**\n   * If the given type matches the current token, consume it.\n   * @param {TokenType} type Token type.\n   * @return {boolean} Whether the token matches the given type.\n   */\n  match(type) {\n    const isMatch = this.isTokenType(type)\n    if (isMatch) \n      this.consume_()\n    return isMatch\n  }\n\n  /**\n   * Try to parse the tokens provided by the lexer.\n   * @return {import(\"../geom/Geometry.js\").default} The geometry.\n   */\n  parse() {\n    this.consume_()\n    const geometry = this.parseGeometry_()\n    return geometry\n  }\n\n  /**\n   * Try to parse the dimensional info.\n   * @return {import(\"../geom/GeometryLayout.js\").default} The layout.\n   * @private\n   */\n  parseGeometryLayout_() {\n    let layout = GeometryLayout.XY\n    const dimToken = this.token_\n    if (this.isTokenType(TokenType.TEXT)) {\n      const dimInfo = dimToken.value\n      if (dimInfo === Z)\n        layout = GeometryLayout.XYZ\n      else if (dimInfo === M)\n        layout = GeometryLayout.XYM\n      else if (dimInfo === ZM)\n        layout = GeometryLayout.XYZM\n      if (layout !== GeometryLayout.XY)\n        this.consume_()\n    }\n    return layout\n  }\n\n  /**\n   * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n   * @private\n   */\n  parseGeometryCollectionText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const geometries = []\n      do\n        geometries.push(this.parseGeometry_())\n      while (this.match(TokenType.COMMA))\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return geometries\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {Array<number>} All values in a point.\n   * @private\n   */\n  parsePointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePoint_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return null\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a linestring.\n   * @private\n   */\n  parseLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePointList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n   * @private\n   */\n  parsePolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} All points in a multipoint.\n   * @private\n   */\n  parseMultiPointText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      let coordinates\n      if (this.token_.type == TokenType.LEFT_PAREN) \n        coordinates = this.parsePointTextList_()\n      else\n        coordinates = this.parsePointList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} All linestring points\n   *                                          in a multilinestring.\n   * @private\n   */\n  parseMultiLineStringText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parseLineStringTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n   * @private\n   */\n  parseMultiPolygonText_() {\n    if (this.match(TokenType.LEFT_PAREN)) {\n      const coordinates = this.parsePolygonTextList_()\n      if (this.match(TokenType.RIGHT_PAREN)) \n        return coordinates\n    } else if (this.isEmptyGeometry_()) {\n      return []\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<number>} A point.\n   * @private\n   */\n  parsePoint_() {\n    const coordinates = []\n    const dimensions = this.layout_.length\n    for (let i = 0; i < dimensions; ++i) {\n      const token = this.token_\n      if (this.match(TokenType.NUMBER)) \n        coordinates.push(/** @type {number} */(token.value))\n      else\n        break\n    }\n    if (coordinates.length == dimensions) \n      return coordinates\n    throw new Error(this.formatErrorMessage_())\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointList_() {\n    const coordinates = [this.parsePoint_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePoint_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<number>>} An array of points.\n   * @private\n   */\n  parsePointTextList_() {\n    const coordinates = [this.parsePointText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePointText_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<number>>>} An array of points.\n   * @private\n   */\n  parseLineStringTextList_() {\n    const coordinates = [this.parseLineStringText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parseLineStringText_())\n    return coordinates\n  }\n\n  /**\n   * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n   * @private\n   */\n  parsePolygonTextList_() {\n    const coordinates = [this.parsePolygonText_()]\n    while (this.match(TokenType.COMMA))\n      coordinates.push(this.parsePolygonText_())\n    return coordinates\n  }\n\n  /**\n   * @return {boolean} Whether the token implies an empty geometry.\n   * @private\n   */\n  isEmptyGeometry_() {\n    const isEmpty =\n      this.isTokenType(TokenType.TEXT) && this.token_.value == EMPTY\n    if (isEmpty)\n      this.consume_()\n    return isEmpty\n  }\n\n  /**\n   * Create an error message for an unexpected token error.\n   * @return {string} Error message.\n   * @private\n   */\n  formatErrorMessage_() {\n    return (\n      'Unexpected `' +\n      this.token_.value +\n      '` at position ' +\n      this.token_.position +\n      ' in `' +\n      this.lexer_.wkt +\n      '`'\n    )\n  }\n\n  /**\n   * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n   * @private\n   */\n  parseGeometry_() {\n    const factory = this.factory\n\n    const o2c = ordinates => new Coordinate(...ordinates)\n    const ca2p = coordinates => {\n      const rings = coordinates.map(a => factory.createLinearRing(a.map(o2c)))\n      if (rings.length > 1)\n        return factory.createPolygon(rings[0], rings.slice(1))\n      else\n        return factory.createPolygon(rings[0])\n    }\n\n    const token = this.token_\n    if (this.match(TokenType.TEXT)) {\n      const geomType = token.value\n      this.layout_ = this.parseGeometryLayout_()\n      if (geomType == 'GEOMETRYCOLLECTION') {\n        const geometries = this.parseGeometryCollectionText_()\n        return factory.createGeometryCollection(geometries)\n      } else {\n        switch (geomType) {\n        case 'POINT': {\n          const ordinates = this.parsePointText_()\n          if (!ordinates)\n            return factory.createPoint()\n          return factory.createPoint(new Coordinate(...ordinates))\n        }\n        case 'LINESTRING': {\n          const coordinates = this.parseLineStringText_()\n          const components = coordinates.map(o2c)\n          return factory.createLineString(components)\n        }\n        case 'LINEARRING': {\n          const coordinates = this.parseLineStringText_()\n          const components = coordinates.map(o2c)\n          return factory.createLinearRing(components)\n        }\n        case 'POLYGON': {\n          const coordinates = this.parsePolygonText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createPolygon()\n          return ca2p(coordinates)\n        }\n        case 'MULTIPOINT': {\n          const coordinates = this.parseMultiPointText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createMultiPoint()\n          const components = coordinates.map(o2c).map(c => factory.createPoint(c))\n          return factory.createMultiPoint(components)\n        }\n        case 'MULTILINESTRING': {\n          const coordinates = this.parseMultiLineStringText_()\n          const components = coordinates.map(a => factory.createLineString(a.map(o2c)))\n          return factory.createMultiLineString(components)\n        }\n        case 'MULTIPOLYGON': {\n          const coordinates = this.parseMultiPolygonText_()\n          if (!coordinates || coordinates.length === 0)\n            return factory.createMultiPolygon()\n          const polygons = coordinates.map(ca2p)\n          return factory.createMultiPolygon(polygons)\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType)\n        }\n        }\n      }\n    }\n    throw new Error(this.formatErrorMessage_())\n  }\n}\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  if (geom.isEmpty())\n    return ''\n  const c = geom.getCoordinate()\n  const cs = [c.x, c.y]\n  if (c.z !== undefined && !Number.isNaN(c.z))\n    cs.push(c.z)\n  if (c.m !== undefined && !Number.isNaN(c.m))\n    cs.push(c.m)\n  return cs.join(' ')\n}\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodePointGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push(encode(geom.getGeometryN(i)))\n  return array.join(', ')\n}\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates()\n    .map(c => {\n      const a = [c.x, c.y]\n      if (c.z !== undefined && !Number.isNaN(c.z))\n        a.push(c.z)\n      if (c.m !== undefined && !Number.isNaN(c.m))\n        a.push(c.m)\n      return a\n    })\n  const array = []\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) \n    array.push(coordinates[i].join(' '))\n  return array.join(', ')\n}\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodeLineStringGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = []\n  array.push('(' + encodeLineStringGeometry(geom.getExteriorRing()) + ')')\n  for (let i = 0, ii = geom.getNumInteriorRing(); i < ii; ++i) \n    array.push('(' + encodeLineStringGeometry(geom.getInteriorRingN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = []\n  for (let i = 0, ii = geom.getNumGeometries(); i < ii; ++i) \n    array.push('(' + encodePolygonGeometry(geom.getGeometryN(i)) + ')')\n  return array.join(', ')\n}\n\n/**\n * @param {Geometry} geom Geometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  let dimInfo = ''\n  if (geom.isEmpty())\n    return dimInfo\n  const c = geom.getCoordinate()\n  if (c.z !== undefined && !Number.isNaN(c.z))\n    dimInfo += Z\n  if (c.m !== undefined && !Number.isNaN(c.m))\n    dimInfo += M\n  return dimInfo\n}\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'LinearRing': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry,\n}\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getGeometryType()\n  const geometryEncoder = GeometryEncoder[type]\n  type = type.toUpperCase()\n  const dimInfo = encodeGeometryLayout(geom)\n  if (dimInfo.length > 0) \n    type += ' ' + dimInfo\n  if (geom.isEmpty()) \n    return type + ' ' + EMPTY\n  const enc = geometryEncoder(geom)\n  return type + ' (' + enc + ')'\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers.\n */\n\nexport default class WKTParser {\n  /** Create a new parser for WKT\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @return An instance of WKTParser.\n   * @private\n   */\n  constructor(geometryFactory) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.precisionModel = this.geometryFactory.getPrecisionModel()\n  }\n\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read(wkt) {\n    const lexer = new Lexer(wkt)\n    const parser = new Parser(lexer, this.geometryFactory)\n    const geometry = parser.parse()\n    return geometry\n  }\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write(geometry) {\n    return encode(geometry)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTWriter\n */\n\nimport WKTParser from './WKTParser.js'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\nexport default class WKTWriter {\n  /**\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new WKTParser(geometryFactory)\n  }\n\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof module:org/locationtech/jts/io/WKTWriter#\n   */\n  write(geometry) {\n    return this.parser.write(geometry)\n  }\n\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  static toLineString(p0, p1) {\n    if (arguments.length !== 2) throw new Error('Not implemented')\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Assert from '../util/Assert.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nexport default class LineIntersector {\n  constructor() {\n    LineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._result = null\n    this._inputLines = Array(2).fill().map(() => Array(2))\n    this._intPt = new Array(2).fill(null)\n    this._intLineIndex = null\n    this._isProper = null\n    this._pa = null\n    this._pb = null\n    this._precisionModel = null\n    this._intPt[0] = new Coordinate()\n    this._intPt[1] = new Coordinate()\n    this._pa = this._intPt[0]\n    this._pb = this._intPt[1]\n    this._result = 0\n  }\n  static computeEdgeDistance(p, p0, p1) {\n    const dx = Math.abs(p1.x - p0.x)\n    const dy = Math.abs(p1.y - p0.y)\n    let dist = -1.0\n    if (p.equals(p0)) {\n      dist = 0.0\n    } else if (p.equals(p1)) {\n      if (dx > dy) dist = dx; else dist = dy\n    } else {\n      const pdx = Math.abs(p.x - p0.x)\n      const pdy = Math.abs(p.y - p0.y)\n      if (dx > dy) dist = pdx; else dist = pdy\n      if (dist === 0.0 && !p.equals(p0)) \n        dist = Math.max(pdx, pdy)\n      \n    }\n    Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation')\n    return dist\n  }\n  static nonRobustComputeEdgeDistance(p, p1, p2) {\n    const dx = p.x - p1.x\n    const dy = p.y - p1.y\n    const dist = Math.sqrt(dx * dx + dy * dy)\n    Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation')\n    return dist\n  }\n  getIndexAlongSegment(segmentIndex, intIndex) {\n    this.computeIntLineIndex()\n    return this._intLineIndex[segmentIndex][intIndex]\n  }\n  getTopologySummary() {\n    const catBuilder = new StringBuilder()\n    if (this.isEndPoint()) catBuilder.append(' endpoint')\n    if (this._isProper) catBuilder.append(' proper')\n    if (this.isCollinear()) catBuilder.append(' collinear')\n    return catBuilder.toString()\n  }\n  computeIntersection(p1, p2, p3, p4) {\n    this._inputLines[0][0] = p1\n    this._inputLines[0][1] = p2\n    this._inputLines[1][0] = p3\n    this._inputLines[1][1] = p4\n    this._result = this.computeIntersect(p1, p2, p3, p4)\n  }\n  getIntersectionNum() {\n    return this._result\n  }\n  computeIntLineIndex() {\n    if (arguments.length === 0) {\n      if (this._intLineIndex === null) {\n        this._intLineIndex = Array(2).fill().map(() => Array(2))\n        this.computeIntLineIndex(0)\n        this.computeIntLineIndex(1)\n      }\n    } else if (arguments.length === 1) {\n      const segmentIndex = arguments[0]\n      const dist0 = this.getEdgeDistance(segmentIndex, 0)\n      const dist1 = this.getEdgeDistance(segmentIndex, 1)\n      if (dist0 > dist1) {\n        this._intLineIndex[segmentIndex][0] = 0\n        this._intLineIndex[segmentIndex][1] = 1\n      } else {\n        this._intLineIndex[segmentIndex][0] = 1\n        this._intLineIndex[segmentIndex][1] = 0\n      }\n    }\n  }\n  isProper() {\n    return this.hasIntersection() && this._isProper\n  }\n  setPrecisionModel(precisionModel) {\n    this._precisionModel = precisionModel\n  }\n  isInteriorIntersection() {\n    if (arguments.length === 0) {\n      if (this.isInteriorIntersection(0)) return true\n      if (this.isInteriorIntersection(1)) return true\n      return false\n    } else if (arguments.length === 1) {\n      const inputLineIndex = arguments[0]\n      for (let i = 0; i < this._result; i++) \n        if (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) \n          return true\n        \n      \n      return false\n    }\n  }\n  getIntersection(intIndex) {\n    return this._intPt[intIndex]\n  }\n  isEndPoint() {\n    return this.hasIntersection() && !this._isProper\n  }\n  hasIntersection() {\n    return this._result !== LineIntersector.NO_INTERSECTION\n  }\n  getEdgeDistance(segmentIndex, intIndex) {\n    const dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1])\n    return dist\n  }\n  isCollinear() {\n    return this._result === LineIntersector.COLLINEAR_INTERSECTION\n  }\n  toString() {\n    return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n  }\n  getEndpoint(segmentIndex, ptIndex) {\n    return this._inputLines[segmentIndex][ptIndex]\n  }\n  isIntersection(pt) {\n    for (let i = 0; i < this._result; i++) \n      if (this._intPt[i].equals2D(pt)) \n        return true\n      \n    \n    return false\n  }\n  getIntersectionAlongSegment(segmentIndex, intIndex) {\n    this.computeIntLineIndex()\n    return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n  }\n}\nLineIntersector.DONT_INTERSECT = 0\nLineIntersector.DO_INTERSECT = 1\nLineIntersector.COLLINEAR = 2\nLineIntersector.NO_INTERSECTION = 0\nLineIntersector.POINT_INTERSECTION = 1\nLineIntersector.COLLINEAR_INTERSECTION = 2\n","import Coordinate from '../geom/Coordinate.js'\nimport Orientation from './Orientation.js'\nimport Intersection from './Intersection.js'\nimport CGAlgorithmsDD from './CGAlgorithmsDD.js'\nimport System from '../../../../java/lang/System.js'\nimport Envelope from '../geom/Envelope.js'\nimport Distance from './Distance.js'\nimport LineIntersector from './LineIntersector.js'\nexport default class RobustLineIntersector extends LineIntersector {\n  constructor() {\n    super()\n  }\n  static nearestEndpoint(p1, p2, q1, q2) {\n    let nearestPt = p1\n    let minDist = Distance.pointToSegment(p1, q1, q2)\n    let dist = Distance.pointToSegment(p2, q1, q2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = p2\n    }\n    dist = Distance.pointToSegment(q1, p1, p2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = q1\n    }\n    dist = Distance.pointToSegment(q2, p1, p2)\n    if (dist < minDist) {\n      minDist = dist\n      nearestPt = q2\n    }\n    return nearestPt\n  }\n  isInSegmentEnvelopes(intPt) {\n    const env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1])\n    const env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1])\n    return env0.contains(intPt) && env1.contains(intPt)\n  }\n  computeIntersection() {\n    if (arguments.length === 3) {\n      const p = arguments[0], p1 = arguments[1], p2 = arguments[2]\n      this._isProper = false\n      if (Envelope.intersects(p1, p2, p)) \n        if (Orientation.index(p1, p2, p) === 0 && Orientation.index(p2, p1, p) === 0) {\n          this._isProper = true\n          if (p.equals(p1) || p.equals(p2)) \n            this._isProper = false\n          \n          this._result = LineIntersector.POINT_INTERSECTION\n          return null\n        }\n      \n      this._result = LineIntersector.NO_INTERSECTION\n    } else {\n      return super.computeIntersection.apply(this, arguments)\n    }\n  }\n  intersection(p1, p2, q1, q2) {\n    let intPt = this.intersectionSafe(p1, p2, q1, q2)\n    if (!this.isInSegmentEnvelopes(intPt)) \n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2))\n    \n    if (this._precisionModel !== null) \n      this._precisionModel.makePrecise(intPt)\n    \n    return intPt\n  }\n  checkDD(p1, p2, q1, q2, intPt) {\n    const intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2)\n    const isIn = this.isInSegmentEnvelopes(intPtDD)\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD)\n    if (intPt.distance(intPtDD) > 0.0001) \n      System.out.println('Distance = ' + intPt.distance(intPtDD))\n    \n  }\n  intersectionSafe(p1, p2, q1, q2) {\n    let intPt = Intersection.intersection(p1, p2, q1, q2)\n    if (intPt === null) intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2)\n    return intPt\n  }\n  computeCollinearIntersection(p1, p2, q1, q2) {\n    const p1q1p2 = Envelope.intersects(p1, p2, q1)\n    const p1q2p2 = Envelope.intersects(p1, p2, q2)\n    const q1p1q2 = Envelope.intersects(q1, q2, p1)\n    const q1p2q2 = Envelope.intersects(q1, q2, p2)\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1\n      this._intPt[1] = q2\n      return LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1\n      this._intPt[1] = p2\n      return LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1\n      this._intPt[1] = p1\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1\n      this._intPt[1] = p2\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2\n      this._intPt[1] = p1\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2\n      this._intPt[1] = p2\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector.NO_INTERSECTION\n  }\n  computeIntersect(p1, p2, q1, q2) {\n    this._isProper = false\n    if (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION\n    const Pq1 = Orientation.index(p1, p2, q1)\n    const Pq2 = Orientation.index(p1, p2, q2)\n    if (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) \n      return LineIntersector.NO_INTERSECTION\n    \n    const Qp1 = Orientation.index(q1, q2, p1)\n    const Qp2 = Orientation.index(q1, q2, p2)\n    if (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) \n      return LineIntersector.NO_INTERSECTION\n    \n    const collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0\n    if (collinear) \n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    \n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false\n      if (p1.equals2D(q1) || p1.equals2D(q2)) \n        this._intPt[0] = p1\n      else if (p2.equals2D(q1) || p2.equals2D(q2)) \n        this._intPt[0] = p2\n      else if (Pq1 === 0) \n        this._intPt[0] = new Coordinate(q1)\n      else if (Pq2 === 0) \n        this._intPt[0] = new Coordinate(q2)\n      else if (Qp1 === 0) \n        this._intPt[0] = new Coordinate(p1)\n      else if (Qp2 === 0) \n        this._intPt[0] = new Coordinate(p2)\n      \n    } else {\n      this._isProper = true\n      this._intPt[0] = this.intersection(p1, p2, q1, q2)\n    }\n    return LineIntersector.POINT_INTERSECTION\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport Intersection from '../algorithm/Intersection.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport Serializable from '../../../../java/io/Serializable.js'\nimport IllegalStateException from '../../../../java/lang/IllegalStateException.js'\nimport Distance from '../algorithm/Distance.js'\nexport default class LineSegment {\n  constructor() {\n    LineSegment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.p0 = null\n    this.p1 = null\n    if (arguments.length === 0) {\n      LineSegment.constructor_.call(this, new Coordinate(), new Coordinate())\n    } else if (arguments.length === 1) {\n      const ls = arguments[0]\n      LineSegment.constructor_.call(this, ls.p0, ls.p1)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      this.p0 = p0\n      this.p1 = p1\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3]\n      LineSegment.constructor_.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1))\n    }\n  }\n  static midPoint(p0, p1) {\n    return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n  }\n  minX() {\n    return Math.min(this.p0.x, this.p1.x)\n  }\n  orientationIndex() {\n    if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      const orient0 = Orientation.index(this.p0, this.p1, seg.p0)\n      const orient1 = Orientation.index(this.p0, this.p1, seg.p1)\n      if (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1)\n      if (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1)\n      return 0\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      return Orientation.index(this.p0, this.p1, p)\n    }\n  }\n  toGeometry(geomFactory) {\n    return geomFactory.createLineString([this.p0, this.p1])\n  }\n  isVertical() {\n    return this.p0.x === this.p1.x\n  }\n  equals(o) {\n    if (!(o instanceof LineSegment)) \n      return false\n    \n    const other = o\n    return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n  }\n  intersection(line) {\n    const li = new RobustLineIntersector()\n    li.computeIntersection(this.p0, this.p1, line.p0, line.p1)\n    if (li.hasIntersection()) return li.getIntersection(0)\n    return null\n  }\n  project() {\n    if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      if (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p)\n      const r = this.projectionFactor(p)\n      const coord = new Coordinate()\n      coord.x = this.p0.x + r * (this.p1.x - this.p0.x)\n      coord.y = this.p0.y + r * (this.p1.y - this.p0.y)\n      return coord\n    } else if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      const pf0 = this.projectionFactor(seg.p0)\n      const pf1 = this.projectionFactor(seg.p1)\n      if (pf0 >= 1.0 && pf1 >= 1.0) return null\n      if (pf0 <= 0.0 && pf1 <= 0.0) return null\n      let newp0 = this.project(seg.p0)\n      if (pf0 < 0.0) newp0 = this.p0\n      if (pf0 > 1.0) newp0 = this.p1\n      let newp1 = this.project(seg.p1)\n      if (pf1 < 0.0) newp1 = this.p0\n      if (pf1 > 1.0) newp1 = this.p1\n      return new LineSegment(newp0, newp1)\n    }\n  }\n  normalize() {\n    if (this.p1.compareTo(this.p0) < 0) this.reverse()\n  }\n  angle() {\n    return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n  }\n  getCoordinate(i) {\n    if (i === 0) return this.p0\n    return this.p1\n  }\n  distancePerpendicular(p) {\n    return Distance.pointToLinePerpendicular(p, this.p0, this.p1)\n  }\n  minY() {\n    return Math.min(this.p0.y, this.p1.y)\n  }\n  midPoint() {\n    return LineSegment.midPoint(this.p0, this.p1)\n  }\n  projectionFactor(p) {\n    if (p.equals(this.p0)) return 0.0\n    if (p.equals(this.p1)) return 1.0\n    const dx = this.p1.x - this.p0.x\n    const dy = this.p1.y - this.p0.y\n    const len = dx * dx + dy * dy\n    if (len <= 0.0) return Double.NaN\n    const r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len\n    return r\n  }\n  closestPoints(line) {\n    const intPt = this.intersection(line)\n    if (intPt !== null) \n      return [intPt, intPt]\n    \n    const closestPt = new Array(2).fill(null)\n    let minDistance = Double.MAX_VALUE\n    let dist = null\n    const close00 = this.closestPoint(line.p0)\n    minDistance = close00.distance(line.p0)\n    closestPt[0] = close00\n    closestPt[1] = line.p0\n    const close01 = this.closestPoint(line.p1)\n    dist = close01.distance(line.p1)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = close01\n      closestPt[1] = line.p1\n    }\n    const close10 = line.closestPoint(this.p0)\n    dist = close10.distance(this.p0)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = this.p0\n      closestPt[1] = close10\n    }\n    const close11 = line.closestPoint(this.p1)\n    dist = close11.distance(this.p1)\n    if (dist < minDistance) {\n      minDistance = dist\n      closestPt[0] = this.p1\n      closestPt[1] = close11\n    }\n    return closestPt\n  }\n  closestPoint(p) {\n    const factor = this.projectionFactor(p)\n    if (factor > 0 && factor < 1) \n      return this.project(p)\n    \n    const dist0 = this.p0.distance(p)\n    const dist1 = this.p1.distance(p)\n    if (dist0 < dist1) return this.p0\n    return this.p1\n  }\n  maxX() {\n    return Math.max(this.p0.x, this.p1.x)\n  }\n  getLength() {\n    return this.p0.distance(this.p1)\n  }\n  compareTo(o) {\n    const other = o\n    const comp0 = this.p0.compareTo(other.p0)\n    if (comp0 !== 0) return comp0\n    return this.p1.compareTo(other.p1)\n  }\n  reverse() {\n    const temp = this.p0\n    this.p0 = this.p1\n    this.p1 = temp\n  }\n  equalsTopo(other) {\n    return this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0)\n  }\n  lineIntersection(line) {\n    const intPt = Intersection.intersection(this.p0, this.p1, line.p0, line.p1)\n    return intPt\n  }\n  maxY() {\n    return Math.max(this.p0.y, this.p1.y)\n  }\n  pointAlongOffset(segmentLengthFraction, offsetDistance) {\n    const segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x)\n    const segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y)\n    const dx = this.p1.x - this.p0.x\n    const dy = this.p1.y - this.p0.y\n    const len = Math.sqrt(dx * dx + dy * dy)\n    let ux = 0.0\n    let uy = 0.0\n    if (offsetDistance !== 0.0) {\n      if (len <= 0.0) throw new IllegalStateException('Cannot compute offset from zero-length line segment')\n      ux = offsetDistance * dx / len\n      uy = offsetDistance * dy / len\n    }\n    const offsetx = segx - uy\n    const offsety = segy + ux\n    const coord = new Coordinate(offsetx, offsety)\n    return coord\n  }\n  setCoordinates() {\n    if (arguments.length === 1) {\n      const ls = arguments[0]\n      this.setCoordinates(ls.p0, ls.p1)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      this.p0.x = p0.x\n      this.p0.y = p0.y\n      this.p1.x = p1.x\n      this.p1.y = p1.y\n    }\n  }\n  segmentFraction(inputPt) {\n    let segFrac = this.projectionFactor(inputPt)\n    if (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0\n    return segFrac\n  }\n  toString() {\n    return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n  }\n  isHorizontal() {\n    return this.p0.y === this.p1.y\n  }\n  reflect(p) {\n    const A = this.p1.getY() - this.p0.getY()\n    const B = this.p0.getX() - this.p1.getX()\n    const C = this.p0.getY() * (this.p1.getX() - this.p0.getX()) - this.p0.getX() * (this.p1.getY() - this.p0.getY())\n    const A2plusB2 = A * A + B * B\n    const A2subB2 = A * A - B * B\n    const x = p.getX()\n    const y = p.getY()\n    const rx = (-A2subB2 * x - 2 * A * B * y - 2 * A * C) / A2plusB2\n    const ry = (A2subB2 * y - 2 * A * B * x - 2 * B * C) / A2plusB2\n    return new Coordinate(rx, ry)\n  }\n  distance() {\n    if (arguments[0] instanceof LineSegment) {\n      const ls = arguments[0]\n      return Distance.segmentToSegment(this.p0, this.p1, ls.p0, ls.p1)\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      return Distance.pointToSegment(p, this.p0, this.p1)\n    }\n  }\n  pointAlong(segmentLengthFraction) {\n    const coord = new Coordinate()\n    coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x)\n    coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y)\n    return coord\n  }\n  hashCode() {\n    let bits0 = Double.doubleToLongBits(this.p0.x)\n    bits0 ^= Double.doubleToLongBits(this.p0.y) * 31\n    const hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32)\n    let bits1 = Double.doubleToLongBits(this.p1.x)\n    bits1 ^= Double.doubleToLongBits(this.p1.y) * 31\n    const hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32)\n    return hash0 ^ hash1\n  }\n  get interfaces_() {\n    return [Comparable, Serializable]\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Location {\n  static toLocationSymbol(locationValue) {\n    switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    }\n    throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n  }\n}\nLocation.INTERIOR = 0\nLocation.BOUNDARY = 1\nLocation.EXTERIOR = 2\nLocation.NONE = -1\n","import Location from './Location.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Dimension from './Dimension.js'\nimport Cloneable from '../../../../java/lang/Cloneable.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nexport default class IntersectionMatrix {\n  constructor() {\n    IntersectionMatrix.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._matrix = null\n    if (arguments.length === 0) {\n      this._matrix = Array(3).fill().map(() => Array(3))\n      this.setAll(Dimension.FALSE)\n    } else if (arguments.length === 1) {\n      if (typeof arguments[0] === 'string') {\n        const elements = arguments[0]\n        IntersectionMatrix.constructor_.call(this)\n        this.set(elements)\n      } else if (arguments[0] instanceof IntersectionMatrix) {\n        const other = arguments[0]\n        IntersectionMatrix.constructor_.call(this)\n        this._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR]\n        this._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY]\n        this._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR]\n        this._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR]\n        this._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY]\n        this._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR]\n        this._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR]\n        this._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY]\n        this._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR]\n      }\n    }\n  }\n  static matches() {\n    if (Number.isInteger(arguments[0]) && typeof arguments[1] === 'string') {\n      const actualDimensionValue = arguments[0], requiredDimensionSymbol = arguments[1]\n      if (requiredDimensionSymbol === Dimension.SYM_DONTCARE) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) \n        return true\n      \n      if (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) \n        return true\n      \n      return false\n    } else if (typeof arguments[0] === 'string' && typeof arguments[1] === 'string') {\n      const actualDimensionSymbols = arguments[0], requiredDimensionSymbols = arguments[1]\n      const m = new IntersectionMatrix(actualDimensionSymbols)\n      return m.matches(requiredDimensionSymbols)\n    }\n  }\n  static isTrue(actualDimensionValue) {\n    if (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) \n      return true\n    \n    return false\n  }\n  isIntersects() {\n    return !this.isDisjoint()\n  }\n  isCovers() {\n    const hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])\n    return hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  isCoveredBy() {\n    const hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY])\n    return hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE\n  }\n  set() {\n    if (arguments.length === 1) {\n      const dimensionSymbols = arguments[0]\n      for (let i = 0; i < dimensionSymbols.length; i++) {\n        const row = Math.trunc(i / 3)\n        const col = i % 3\n        this._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i))\n      }\n    } else if (arguments.length === 3) {\n      const row = arguments[0], column = arguments[1], dimensionValue = arguments[2]\n      this._matrix[row][column] = dimensionValue\n    }\n  }\n  isContains() {\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  setAtLeast() {\n    if (arguments.length === 1) {\n      const minimumDimensionSymbols = arguments[0]\n      for (let i = 0; i < minimumDimensionSymbols.length; i++) {\n        const row = Math.trunc(i / 3)\n        const col = i % 3\n        this.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)))\n      }\n    } else if (arguments.length === 3) {\n      const row = arguments[0], column = arguments[1], minimumDimensionValue = arguments[2]\n      if (this._matrix[row][column] < minimumDimensionValue) \n        this._matrix[row][column] = minimumDimensionValue\n      \n    }\n  }\n  setAtLeastIfValid(row, column, minimumDimensionValue) {\n    if (row >= 0 && column >= 0) \n      this.setAtLeast(row, column, minimumDimensionValue)\n    \n  }\n  isWithin() {\n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE\n  }\n  isTouches(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA > dimensionOfGeometryB) \n      return this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA)\n    \n    if (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]))\n    \n    return false\n  }\n  isOverlaps(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    return false\n  }\n  isEquals(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA !== dimensionOfGeometryB) \n      return false\n    \n    return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE\n  }\n  toString() {\n    const builder = new StringBuilder('123456789')\n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        builder.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]))\n      \n    \n    return builder.toString()\n  }\n  setAll(dimensionValue) {\n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        this._matrix[ai][bi] = dimensionValue\n      \n    \n  }\n  get(row, column) {\n    return this._matrix[row][column]\n  }\n  transpose() {\n    let temp = this._matrix[1][0]\n    this._matrix[1][0] = this._matrix[0][1]\n    this._matrix[0][1] = temp\n    temp = this._matrix[2][0]\n    this._matrix[2][0] = this._matrix[0][2]\n    this._matrix[0][2] = temp\n    temp = this._matrix[2][1]\n    this._matrix[2][1] = this._matrix[1][2]\n    this._matrix[1][2] = temp\n    return this\n  }\n  matches(requiredDimensionSymbols) {\n    if (requiredDimensionSymbols.length !== 9) \n      throw new IllegalArgumentException('Should be length 9: ' + requiredDimensionSymbols)\n    \n    for (let ai = 0; ai < 3; ai++) \n      for (let bi = 0; bi < 3; bi++) \n        if (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) \n          return false\n        \n      \n    \n    return true\n  }\n  add(im) {\n    for (let i = 0; i < 3; i++) \n      for (let j = 0; j < 3; j++) \n        this.setAtLeast(i, j, im.get(i, j))\n      \n    \n  }\n  isDisjoint() {\n    return this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE\n  }\n  isCrosses(dimensionOfGeometryA, dimensionOfGeometryB) {\n    if (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) \n      return IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR])\n    \n    if (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) \n      return this._matrix[Location.INTERIOR][Location.INTERIOR] === 0\n    \n    return false\n  }\n  get interfaces_() {\n    return [Cloneable]\n  }\n}\n","import Orientation from './Orientation.js'\nexport default class Angle {\n  static toDegrees(radians) {\n    return radians * 180 / Math.PI\n  }\n  static normalize(angle) {\n    while (angle > Math.PI) angle -= Angle.PI_TIMES_2\n    while (angle <= -Math.PI) angle += Angle.PI_TIMES_2\n    return angle\n  }\n  static angle() {\n    if (arguments.length === 1) {\n      const p = arguments[0]\n      return Math.atan2(p.y, p.x)\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n      return Math.atan2(dy, dx)\n    }\n  }\n  static isAcute(p0, p1, p2) {\n    const dx0 = p0.x - p1.x\n    const dy0 = p0.y - p1.y\n    const dx1 = p2.x - p1.x\n    const dy1 = p2.y - p1.y\n    const dotprod = dx0 * dx1 + dy0 * dy1\n    return dotprod > 0\n  }\n  static isObtuse(p0, p1, p2) {\n    const dx0 = p0.x - p1.x\n    const dy0 = p0.y - p1.y\n    const dx1 = p2.x - p1.x\n    const dy1 = p2.y - p1.y\n    const dotprod = dx0 * dx1 + dy0 * dy1\n    return dotprod < 0\n  }\n  static interiorAngle(p0, p1, p2) {\n    const anglePrev = Angle.angle(p1, p0)\n    const angleNext = Angle.angle(p1, p2)\n    return Math.abs(angleNext - anglePrev)\n  }\n  static normalizePositive(angle) {\n    if (angle < 0.0) {\n      while (angle < 0.0) angle += Angle.PI_TIMES_2\n      if (angle >= Angle.PI_TIMES_2) angle = 0.0\n    } else {\n      while (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2\n      if (angle < 0.0) angle = 0.0\n    }\n    return angle\n  }\n  static angleBetween(tip1, tail, tip2) {\n    const a1 = Angle.angle(tail, tip1)\n    const a2 = Angle.angle(tail, tip2)\n    return Angle.diff(a1, a2)\n  }\n  static diff(ang1, ang2) {\n    let delAngle = null\n    if (ang1 < ang2) \n      delAngle = ang2 - ang1\n    else \n      delAngle = ang1 - ang2\n    \n    if (delAngle > Math.PI) \n      delAngle = 2 * Math.PI - delAngle\n    \n    return delAngle\n  }\n  static toRadians(angleDegrees) {\n    return angleDegrees * Math.PI / 180.0\n  }\n  static getTurn(ang1, ang2) {\n    const crossproduct = Math.sin(ang2 - ang1)\n    if (crossproduct > 0) \n      return Angle.COUNTERCLOCKWISE\n    \n    if (crossproduct < 0) \n      return Angle.CLOCKWISE\n    \n    return Angle.NONE\n  }\n  static angleBetweenOriented(tip1, tail, tip2) {\n    const a1 = Angle.angle(tail, tip1)\n    const a2 = Angle.angle(tail, tip2)\n    const angDel = a2 - a1\n    if (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2\n    if (angDel > Math.PI) return angDel - Angle.PI_TIMES_2\n    return angDel\n  }\n}\nAngle.PI_TIMES_2 = 2.0 * Math.PI\nAngle.PI_OVER_2 = Math.PI / 2.0\nAngle.PI_OVER_4 = Math.PI / 4.0\nAngle.COUNTERCLOCKWISE = Orientation.COUNTERCLOCKWISE\nAngle.CLOCKWISE = Orientation.CLOCKWISE\nAngle.NONE = Orientation.COLLINEAR\n","import Exception from '../../../../java/lang/Exception.js'\nexport default class NotRepresentableException extends Exception {\n  constructor() {\n    super()\n    NotRepresentableException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    Exception.constructor_.call(this, 'Projective point not representable on the Cartesian plane.')\n  }\n}\n","import NotRepresentableException from './NotRepresentableException.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nexport default class HCoordinate {\n  constructor() {\n    HCoordinate.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.x = null\n    this.y = null\n    this.w = null\n    if (arguments.length === 0) {\n      this.x = 0.0\n      this.y = 0.0\n      this.w = 1.0\n    } else if (arguments.length === 1) {\n      const p = arguments[0]\n      this.x = p.x\n      this.y = p.y\n      this.w = 1.0\n    } else if (arguments.length === 2) {\n      if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n        const _x = arguments[0], _y = arguments[1]\n        this.x = _x\n        this.y = _y\n        this.w = 1.0\n      } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n        const p1 = arguments[0], p2 = arguments[1]\n        this.x = p1.y * p2.w - p2.y * p1.w\n        this.y = p2.x * p1.w - p1.x * p2.w\n        this.w = p1.x * p2.y - p2.x * p1.y\n      } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const p1 = arguments[0], p2 = arguments[1]\n        this.x = p1.y - p2.y\n        this.y = p2.x - p1.x\n        this.w = p1.x * p2.y - p2.x * p1.y\n      }\n    } else if (arguments.length === 3) {\n      const _x = arguments[0], _y = arguments[1], _w = arguments[2]\n      this.x = _x\n      this.y = _y\n      this.w = _w\n    } else if (arguments.length === 4) {\n      const p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3]\n      const px = p1.y - p2.y\n      const py = p2.x - p1.x\n      const pw = p1.x * p2.y - p2.x * p1.y\n      const qx = q1.y - q2.y\n      const qy = q2.x - q1.x\n      const qw = q1.x * q2.y - q2.x * q1.y\n      this.x = py * qw - qy * pw\n      this.y = qx * pw - px * qw\n      this.w = px * qy - qx * py\n    }\n  }\n  getY() {\n    const a = this.y / this.w\n    if (Double.isNaN(a) || Double.isInfinite(a)) \n      throw new NotRepresentableException()\n    \n    return a\n  }\n  getX() {\n    const a = this.x / this.w\n    if (Double.isNaN(a) || Double.isInfinite(a)) \n      throw new NotRepresentableException()\n    \n    return a\n  }\n  getCoordinate() {\n    const p = new Coordinate()\n    p.x = this.getX()\n    p.y = this.getY()\n    return p\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport DD from '../math/DD.js'\nimport Angle from '../algorithm/Angle.js'\nimport HCoordinate from '../algorithm/HCoordinate.js'\nexport default class Triangle {\n  constructor() {\n    Triangle.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.p0 = null\n    this.p1 = null\n    this.p2 = null\n    const p0 = arguments[0], p1 = arguments[1], p2 = arguments[2]\n    this.p0 = p0\n    this.p1 = p1\n    this.p2 = p2\n  }\n  static area(a, b, c) {\n    return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n  }\n  static signedArea(a, b, c) {\n    return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n  }\n  static det(m00, m01, m10, m11) {\n    return m00 * m11 - m01 * m10\n  }\n  static interpolateZ(p, v0, v1, v2) {\n    const x0 = v0.x\n    const y0 = v0.y\n    const a = v1.x - x0\n    const b = v2.x - x0\n    const c = v1.y - y0\n    const d = v2.y - y0\n    const det = a * d - b * c\n    const dx = p.x - x0\n    const dy = p.y - y0\n    const t = (d * dx - b * dy) / det\n    const u = (-c * dx + a * dy) / det\n    const z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ())\n    return z\n  }\n  static longestSideLength(a, b, c) {\n    const lenAB = a.distance(b)\n    const lenBC = b.distance(c)\n    const lenCA = c.distance(a)\n    let maxLen = lenAB\n    if (lenBC > maxLen) maxLen = lenBC\n    if (lenCA > maxLen) maxLen = lenCA\n    return maxLen\n  }\n  static circumcentreDD(a, b, c) {\n    const ax = DD.valueOf(a.x).subtract(c.x)\n    const ay = DD.valueOf(a.y).subtract(c.y)\n    const bx = DD.valueOf(b.x).subtract(c.x)\n    const by = DD.valueOf(b.y).subtract(c.y)\n    const denom = DD.determinant(ax, ay, bx, by).multiply(2)\n    const asqr = ax.sqr().add(ay.sqr())\n    const bsqr = bx.sqr().add(by.sqr())\n    const numx = DD.determinant(ay, asqr, by, bsqr)\n    const numy = DD.determinant(ax, asqr, bx, bsqr)\n    const ccx = DD.valueOf(c.x).subtract(numx.divide(denom)).doubleValue()\n    const ccy = DD.valueOf(c.y).add(numy.divide(denom)).doubleValue()\n    return new Coordinate(ccx, ccy)\n  }\n  static isAcute(a, b, c) {\n    if (!Angle.isAcute(a, b, c)) return false\n    if (!Angle.isAcute(b, c, a)) return false\n    if (!Angle.isAcute(c, a, b)) return false\n    return true\n  }\n  static circumcentre(a, b, c) {\n    const cx = c.x\n    const cy = c.y\n    const ax = a.x - cx\n    const ay = a.y - cy\n    const bx = b.x - cx\n    const by = b.y - cy\n    const denom = 2 * Triangle.det(ax, ay, bx, by)\n    const numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by)\n    const numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by)\n    const ccx = cx - numx / denom\n    const ccy = cy + numy / denom\n    return new Coordinate(ccx, ccy)\n  }\n  static perpendicularBisector(a, b) {\n    const dx = b.x - a.x\n    const dy = b.y - a.y\n    const l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0)\n    const l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0)\n    return new HCoordinate(l1, l2)\n  }\n  static angleBisector(a, b, c) {\n    const len0 = b.distance(a)\n    const len2 = b.distance(c)\n    const frac = len0 / (len0 + len2)\n    const dx = c.x - a.x\n    const dy = c.y - a.y\n    const splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy)\n    return splitPt\n  }\n  static area3D(a, b, c) {\n    const ux = b.x - a.x\n    const uy = b.y - a.y\n    const uz = b.getZ() - a.getZ()\n    const vx = c.x - a.x\n    const vy = c.y - a.y\n    const vz = c.getZ() - a.getZ()\n    const crossx = uy * vz - uz * vy\n    const crossy = uz * vx - ux * vz\n    const crossz = ux * vy - uy * vx\n    const absSq = crossx * crossx + crossy * crossy + crossz * crossz\n    const area3D = Math.sqrt(absSq) / 2\n    return area3D\n  }\n  static centroid(a, b, c) {\n    const x = (a.x + b.x + c.x) / 3\n    const y = (a.y + b.y + c.y) / 3\n    return new Coordinate(x, y)\n  }\n  static inCentre(a, b, c) {\n    const len0 = b.distance(c)\n    const len1 = a.distance(c)\n    const len2 = a.distance(b)\n    const circum = len0 + len1 + len2\n    const inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum\n    const inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum\n    return new Coordinate(inCentreX, inCentreY)\n  }\n  area() {\n    return Triangle.area(this.p0, this.p1, this.p2)\n  }\n  signedArea() {\n    return Triangle.signedArea(this.p0, this.p1, this.p2)\n  }\n  interpolateZ(p) {\n    if (p === null) throw new IllegalArgumentException('Supplied point is null.')\n    return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n  }\n  longestSideLength() {\n    return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n  }\n  isAcute() {\n    return Triangle.isAcute(this.p0, this.p1, this.p2)\n  }\n  circumcentre() {\n    return Triangle.circumcentre(this.p0, this.p1, this.p2)\n  }\n  area3D() {\n    return Triangle.area3D(this.p0, this.p1, this.p2)\n  }\n  centroid() {\n    return Triangle.centroid(this.p0, this.p1, this.p2)\n  }\n  inCentre() {\n    return Triangle.inCentre(this.p0, this.p1, this.p2)\n  }\n}\n","import Exception from '../../../../../java/lang/Exception.js'\nexport default class NoninvertibleTransformationException extends Exception {\n  constructor() {\n    super()\n    NoninvertibleTransformationException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      Exception.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      const msg = arguments[0]\n      Exception.constructor_.call(this, msg)\n    }\n  }\n}\n","import NoninvertibleTransformationException from './NoninvertibleTransformationException.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Coordinate from '../Coordinate.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Exception from '../../../../../java/lang/Exception.js'\nimport CoordinateSequence from '../CoordinateSequence.js'\nimport Cloneable from '../../../../../java/lang/Cloneable.js'\nimport CoordinateSequenceFilter from '../CoordinateSequenceFilter.js'\nimport Assert from '../../util/Assert.js'\nexport default class AffineTransformation {\n  constructor() {\n    AffineTransformation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._m00 = null\n    this._m01 = null\n    this._m02 = null\n    this._m10 = null\n    this._m11 = null\n    this._m12 = null\n    if (arguments.length === 0) {\n      this.setToIdentity()\n    } else if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const matrix = arguments[0]\n        this._m00 = matrix[0]\n        this._m01 = matrix[1]\n        this._m02 = matrix[2]\n        this._m10 = matrix[3]\n        this._m11 = matrix[4]\n        this._m12 = matrix[5]\n      } else if (arguments[0] instanceof AffineTransformation) {\n        const trans = arguments[0]\n        this.setTransformation(trans)\n      }\n    } else if (arguments.length === 6) {\n      if (typeof arguments[5] === 'number' && (typeof arguments[4] === 'number' && (typeof arguments[3] === 'number' && (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number'))))) {\n        const m00 = arguments[0], m01 = arguments[1], m02 = arguments[2], m10 = arguments[3], m11 = arguments[4], m12 = arguments[5]\n        this.setTransformation(m00, m01, m02, m10, m11, m12)\n      } else if (arguments[5] instanceof Coordinate && (arguments[4] instanceof Coordinate && (arguments[3] instanceof Coordinate && (arguments[2] instanceof Coordinate && (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate))))) {\n        const src0 = arguments[0], src1 = arguments[1], src2 = arguments[2], dest0 = arguments[3], dest1 = arguments[4], dest2 = arguments[5]\n      }\n    }\n  }\n  static translationInstance(x, y) {\n    const trans = new AffineTransformation()\n    trans.setToTranslation(x, y)\n    return trans\n  }\n  static shearInstance(xShear, yShear) {\n    const trans = new AffineTransformation()\n    trans.setToShear(xShear, yShear)\n    return trans\n  }\n  static reflectionInstance() {\n    if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      const trans = new AffineTransformation()\n      trans.setToReflection(x, y)\n      return trans\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3]\n      const trans = new AffineTransformation()\n      trans.setToReflection(x0, y0, x1, y1)\n      return trans\n    }\n  }\n  static rotationInstance() {\n    if (arguments.length === 1) {\n      const theta = arguments[0]\n      return AffineTransformation.rotationInstance(Math.sin(theta), Math.cos(theta))\n    } else if (arguments.length === 2) {\n      const sinTheta = arguments[0], cosTheta = arguments[1]\n      const trans = new AffineTransformation()\n      trans.setToRotation(sinTheta, cosTheta)\n      return trans\n    } else if (arguments.length === 3) {\n      const theta = arguments[0], x = arguments[1], y = arguments[2]\n      return AffineTransformation.rotationInstance(Math.sin(theta), Math.cos(theta), x, y)\n    } else if (arguments.length === 4) {\n      const sinTheta = arguments[0], cosTheta = arguments[1], x = arguments[2], y = arguments[3]\n      const trans = new AffineTransformation()\n      trans.setToRotation(sinTheta, cosTheta, x, y)\n      return trans\n    }\n  }\n  static scaleInstance() {\n    if (arguments.length === 2) {\n      const xScale = arguments[0], yScale = arguments[1]\n      const trans = new AffineTransformation()\n      trans.setToScale(xScale, yScale)\n      return trans\n    } else if (arguments.length === 4) {\n      const xScale = arguments[0], yScale = arguments[1], x = arguments[2], y = arguments[3]\n      const trans = new AffineTransformation()\n      trans.translate(-x, -y)\n      trans.scale(xScale, yScale)\n      trans.translate(x, y)\n      return trans\n    }\n  }\n  setToReflectionBasic(x0, y0, x1, y1) {\n    if (x0 === x1 && y0 === y1) \n      throw new IllegalArgumentException('Reflection line points must be distinct')\n    \n    const dx = x1 - x0\n    const dy = y1 - y0\n    const d = Math.sqrt(dx * dx + dy * dy)\n    const sin = dy / d\n    const cos = dx / d\n    const cs2 = 2 * sin * cos\n    const c2s2 = cos * cos - sin * sin\n    this._m00 = c2s2\n    this._m01 = cs2\n    this._m02 = 0.0\n    this._m10 = cs2\n    this._m11 = -c2s2\n    this._m12 = 0.0\n    return this\n  }\n  getInverse() {\n    const det = this.getDeterminant()\n    if (det === 0) throw new NoninvertibleTransformationException('Transformation is non-invertible')\n    const im00 = this._m11 / det\n    const im10 = -this._m10 / det\n    const im01 = -this._m01 / det\n    const im11 = this._m00 / det\n    const im02 = (this._m01 * this._m12 - this._m02 * this._m11) / det\n    const im12 = (-this._m00 * this._m12 + this._m10 * this._m02) / det\n    return new AffineTransformation(im00, im01, im02, im10, im11, im12)\n  }\n  compose(trans) {\n    const mp00 = trans._m00 * this._m00 + trans._m01 * this._m10\n    const mp01 = trans._m00 * this._m01 + trans._m01 * this._m11\n    const mp02 = trans._m00 * this._m02 + trans._m01 * this._m12 + trans._m02\n    const mp10 = trans._m10 * this._m00 + trans._m11 * this._m10\n    const mp11 = trans._m10 * this._m01 + trans._m11 * this._m11\n    const mp12 = trans._m10 * this._m02 + trans._m11 * this._m12 + trans._m12\n    this._m00 = mp00\n    this._m01 = mp01\n    this._m02 = mp02\n    this._m10 = mp10\n    this._m11 = mp11\n    this._m12 = mp12\n    return this\n  }\n  equals(obj) {\n    if (obj === null) return false\n    if (!(obj instanceof AffineTransformation)) return false\n    const trans = obj\n    return this._m00 === trans._m00 && this._m01 === trans._m01 && this._m02 === trans._m02 && this._m10 === trans._m10 && this._m11 === trans._m11 && this._m12 === trans._m12\n  }\n  setToScale(xScale, yScale) {\n    this._m00 = xScale\n    this._m01 = 0.0\n    this._m02 = 0.0\n    this._m10 = 0.0\n    this._m11 = yScale\n    this._m12 = 0.0\n    return this\n  }\n  isIdentity() {\n    return this._m00 === 1 && this._m01 === 0 && this._m02 === 0 && this._m10 === 0 && this._m11 === 1 && this._m12 === 0\n  }\n  scale(xScale, yScale) {\n    this.compose(AffineTransformation.scaleInstance(xScale, yScale))\n    return this\n  }\n  setToIdentity() {\n    this._m00 = 1.0\n    this._m01 = 0.0\n    this._m02 = 0.0\n    this._m10 = 0.0\n    this._m11 = 1.0\n    this._m12 = 0.0\n    return this\n  }\n  isGeometryChanged() {\n    return true\n  }\n  setTransformation() {\n    if (arguments.length === 1) {\n      const trans = arguments[0]\n      this._m00 = trans._m00\n      this._m01 = trans._m01\n      this._m02 = trans._m02\n      this._m10 = trans._m10\n      this._m11 = trans._m11\n      this._m12 = trans._m12\n      return this\n    } else if (arguments.length === 6) {\n      const m00 = arguments[0], m01 = arguments[1], m02 = arguments[2], m10 = arguments[3], m11 = arguments[4], m12 = arguments[5]\n      this._m00 = m00\n      this._m01 = m01\n      this._m02 = m02\n      this._m10 = m10\n      this._m11 = m11\n      this._m12 = m12\n      return this\n    }\n  }\n  setToRotation() {\n    if (arguments.length === 1) {\n      const theta = arguments[0]\n      this.setToRotation(Math.sin(theta), Math.cos(theta))\n      return this\n    } else if (arguments.length === 2) {\n      const sinTheta = arguments[0], cosTheta = arguments[1]\n      this._m00 = cosTheta\n      this._m01 = -sinTheta\n      this._m02 = 0.0\n      this._m10 = sinTheta\n      this._m11 = cosTheta\n      this._m12 = 0.0\n      return this\n    } else if (arguments.length === 3) {\n      const theta = arguments[0], x = arguments[1], y = arguments[2]\n      this.setToRotation(Math.sin(theta), Math.cos(theta), x, y)\n      return this\n    } else if (arguments.length === 4) {\n      const sinTheta = arguments[0], cosTheta = arguments[1], x = arguments[2], y = arguments[3]\n      this._m00 = cosTheta\n      this._m01 = -sinTheta\n      this._m02 = x - x * cosTheta + y * sinTheta\n      this._m10 = sinTheta\n      this._m11 = cosTheta\n      this._m12 = y - x * sinTheta - y * cosTheta\n      return this\n    }\n  }\n  getMatrixEntries() {\n    return [this._m00, this._m01, this._m02, this._m10, this._m11, this._m12]\n  }\n  filter(seq, i) {\n    this.transform(seq, i)\n  }\n  rotate() {\n    if (arguments.length === 1) {\n      const theta = arguments[0]\n      this.compose(AffineTransformation.rotationInstance(theta))\n      return this\n    } else if (arguments.length === 2) {\n      const sinTheta = arguments[0], cosTheta = arguments[1]\n      this.compose(AffineTransformation.rotationInstance(sinTheta, cosTheta))\n      return this\n    } else if (arguments.length === 3) {\n      const theta = arguments[0], x = arguments[1], y = arguments[2]\n      this.compose(AffineTransformation.rotationInstance(theta, x, y))\n      return this\n    } else if (arguments.length === 4) {\n      const sinTheta = arguments[0], cosTheta = arguments[1], x = arguments[2], y = arguments[3]\n      this.compose(AffineTransformation.rotationInstance(sinTheta, cosTheta, x, y))\n      return this\n    }\n  }\n  getDeterminant() {\n    return this._m00 * this._m11 - this._m01 * this._m10\n  }\n  composeBefore(trans) {\n    const mp00 = this._m00 * trans._m00 + this._m01 * trans._m10\n    const mp01 = this._m00 * trans._m01 + this._m01 * trans._m11\n    const mp02 = this._m00 * trans._m02 + this._m01 * trans._m12 + this._m02\n    const mp10 = this._m10 * trans._m00 + this._m11 * trans._m10\n    const mp11 = this._m10 * trans._m01 + this._m11 * trans._m11\n    const mp12 = this._m10 * trans._m02 + this._m11 * trans._m12 + this._m12\n    this._m00 = mp00\n    this._m01 = mp01\n    this._m02 = mp02\n    this._m10 = mp10\n    this._m11 = mp11\n    this._m12 = mp12\n    return this\n  }\n  setToShear(xShear, yShear) {\n    this._m00 = 1.0\n    this._m01 = xShear\n    this._m02 = 0.0\n    this._m10 = yShear\n    this._m11 = 1.0\n    this._m12 = 0.0\n    return this\n  }\n  isDone() {\n    return false\n  }\n  clone() {\n    try {\n      return null\n    } catch (ex) {\n      if (ex instanceof Exception) \n        Assert.shouldNeverReachHere()\n      else throw ex\n    } finally {}\n    return null\n  }\n  translate(x, y) {\n    this.compose(AffineTransformation.translationInstance(x, y))\n    return this\n  }\n  setToReflection() {\n    if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      if (x === 0.0 && y === 0.0) \n        throw new IllegalArgumentException('Reflection vector must be non-zero')\n      \n      if (x === y) {\n        this._m00 = 0.0\n        this._m01 = 1.0\n        this._m02 = 0.0\n        this._m10 = 1.0\n        this._m11 = 0.0\n        this._m12 = 0.0\n        return this\n      }\n      const d = Math.sqrt(x * x + y * y)\n      const sin = y / d\n      const cos = x / d\n      this.rotate(-sin, cos)\n      this.scale(1, -1)\n      this.rotate(sin, cos)\n      return this\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3]\n      if (x0 === x1 && y0 === y1) \n        throw new IllegalArgumentException('Reflection line points must be distinct')\n      \n      this.setToTranslation(-x0, -y0)\n      const dx = x1 - x0\n      const dy = y1 - y0\n      const d = Math.sqrt(dx * dx + dy * dy)\n      const sin = dy / d\n      const cos = dx / d\n      this.rotate(-sin, cos)\n      this.scale(1, -1)\n      this.rotate(sin, cos)\n      this.translate(x0, y0)\n      return this\n    }\n  }\n  toString() {\n    return 'AffineTransformation[[' + this._m00 + ', ' + this._m01 + ', ' + this._m02 + '], [' + this._m10 + ', ' + this._m11 + ', ' + this._m12 + ']]'\n  }\n  setToTranslation(dx, dy) {\n    this._m00 = 1.0\n    this._m01 = 0.0\n    this._m02 = dx\n    this._m10 = 0.0\n    this._m11 = 1.0\n    this._m12 = dy\n    return this\n  }\n  shear(xShear, yShear) {\n    this.compose(AffineTransformation.shearInstance(xShear, yShear))\n    return this\n  }\n  transform() {\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      const g2 = g.copy()\n      g2.apply(this)\n      return g2\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const src = arguments[0], dest = arguments[1]\n        const xp = this._m00 * src.x + this._m01 * src.y + this._m02\n        const yp = this._m10 * src.x + this._m11 * src.y + this._m12\n        dest.x = xp\n        dest.y = yp\n        return dest\n      } else if (hasInterface(arguments[0], CoordinateSequence) && Number.isInteger(arguments[1])) {\n        const seq = arguments[0], i = arguments[1]\n        const xp = this._m00 * seq.getOrdinate(i, 0) + this._m01 * seq.getOrdinate(i, 1) + this._m02\n        const yp = this._m10 * seq.getOrdinate(i, 0) + this._m11 * seq.getOrdinate(i, 1) + this._m12\n        seq.setOrdinate(i, 0, xp)\n        seq.setOrdinate(i, 1, yp)\n      }\n    }\n  }\n  reflect() {\n    if (arguments.length === 2) {\n      const x = arguments[0], y = arguments[1]\n      this.compose(AffineTransformation.reflectionInstance(x, y))\n      return this\n    } else if (arguments.length === 4) {\n      const x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3]\n      this.compose(AffineTransformation.reflectionInstance(x0, y0, x1, y1))\n      return this\n    }\n  }\n  get interfaces_() {\n    return [Cloneable, CoordinateSequenceFilter]\n  }\n}\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Matrix {\n  static solve(a, b) {\n    const n = b.length\n    if (a.length !== n || a[0].length !== n) throw new IllegalArgumentException('Matrix A is incorrectly sized')\n    for (let i = 0; i < n; i++) {\n      let maxElementRow = i\n      for (let j = i + 1; j < n; j++) if (Math.abs(a[j][i]) > Math.abs(a[maxElementRow][i])) maxElementRow = j\n      if (a[maxElementRow][i] === 0.0) return null\n      Matrix.swapRows(a, i, maxElementRow)\n      Matrix.swapRows(b, i, maxElementRow)\n      for (let j = i + 1; j < n; j++) {\n        const rowFactor = a[j][i] / a[i][i]\n        for (let k = n - 1; k >= i; k--) a[j][k] -= a[i][k] * rowFactor\n        b[j] -= b[i] * rowFactor\n      }\n    }\n    const solution = new Array(n).fill(null)\n    for (let j = n - 1; j >= 0; j--) {\n      let t = 0.0\n      for (let k = j + 1; k < n; k++) t += a[j][k] * solution[k]\n      solution[j] = (b[j] - t) / a[j][j]\n    }\n    return solution\n  }\n  static swapRows() {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Array && Number.isInteger(arguments[1]))) {\n      const m = arguments[0], i = arguments[1], j = arguments[2]\n      if (i === j) return null\n      for (let col = 0; col < m[0].length; col++) {\n        const temp = m[i][col]\n        m[i][col] = m[j][col]\n        m[j][col] = temp\n      }\n    } else if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Array && Number.isInteger(arguments[1]))) {\n      const m = arguments[0], i = arguments[1], j = arguments[2]\n      if (i === j) return null\n      const temp = m[i]\n      m[i] = m[j]\n      m[j] = temp\n    }\n  }\n}\n","import AffineTransformation from './AffineTransformation.js'\nimport Matrix from '../../math/Matrix.js'\nexport default class AffineTransformationBuilder {\n  constructor() {\n    AffineTransformationBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._src0 = null\n    this._src1 = null\n    this._src2 = null\n    this._dest0 = null\n    this._dest1 = null\n    this._dest2 = null\n    this._m00 = null\n    this._m01 = null\n    this._m02 = null\n    this._m10 = null\n    this._m11 = null\n    this._m12 = null\n    const src0 = arguments[0], src1 = arguments[1], src2 = arguments[2], dest0 = arguments[3], dest1 = arguments[4], dest2 = arguments[5]\n    this._src0 = src0\n    this._src1 = src1\n    this._src2 = src2\n    this._dest0 = dest0\n    this._dest1 = dest1\n    this._dest2 = dest2\n  }\n  solve(b) {\n    const a = [[this._src0.x, this._src0.y, 1], [this._src1.x, this._src1.y, 1], [this._src2.x, this._src2.y, 1]]\n    return Matrix.solve(a, b)\n  }\n  compute() {\n    const bx = [this._dest0.x, this._dest1.x, this._dest2.x]\n    const row0 = this.solve(bx)\n    if (row0 === null) return false\n    this._m00 = row0[0]\n    this._m01 = row0[1]\n    this._m02 = row0[2]\n    const by = [this._dest0.y, this._dest1.y, this._dest2.y]\n    const row1 = this.solve(by)\n    if (row1 === null) return false\n    this._m10 = row1[0]\n    this._m11 = row1[1]\n    this._m12 = row1[2]\n    return true\n  }\n  getTransformation() {\n    const isSolvable = this.compute()\n    if (isSolvable) return new AffineTransformation(this._m00, this._m01, this._m02, this._m10, this._m11, this._m12)\n    return null\n  }\n}\n","import Coordinate from '../Coordinate.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport AffineTransformation from './AffineTransformation.js'\nimport AffineTransformationBuilder from './AffineTransformationBuilder.js'\nimport Angle from '../../algorithm/Angle.js'\nexport default class AffineTransformationFactory {\n  static createFromBaseLines(src0, src1, dest0, dest1) {\n    const rotPt = new Coordinate(src0.x + dest1.x - dest0.x, src0.y + dest1.y - dest0.y)\n    const ang = Angle.angleBetweenOriented(src1, src0, rotPt)\n    const srcDist = src1.distance(src0)\n    const destDist = dest1.distance(dest0)\n    if (srcDist === 0.0) return new AffineTransformation()\n    const scale = destDist / srcDist\n    const trans = AffineTransformation.translationInstance(-src0.x, -src0.y)\n    trans.rotate(ang)\n    trans.scale(scale, scale)\n    trans.translate(dest0.x, dest0.y)\n    return trans\n  }\n  static createFromControlVectors() {\n    if (arguments.length === 2) {\n      if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n        const src0 = arguments[0], dest0 = arguments[1]\n        const dx = dest0.x - src0.x\n        const dy = dest0.y - src0.y\n        return AffineTransformation.translationInstance(dx, dy)\n      } else if (arguments[0] instanceof Array && arguments[1] instanceof Array) {\n        const src = arguments[0], dest = arguments[1]\n        if (src.length !== dest.length) throw new IllegalArgumentException('Src and Dest arrays are not the same length')\n        if (src.length <= 0) throw new IllegalArgumentException('Too few control points')\n        if (src.length > 3) throw new IllegalArgumentException('Too many control points')\n        if (src.length === 1) return AffineTransformationFactory.createFromControlVectors(src[0], dest[0])\n        if (src.length === 2) return AffineTransformationFactory.createFromControlVectors(src[0], src[1], dest[0], dest[1])\n        return AffineTransformationFactory.createFromControlVectors(src[0], src[1], src[2], dest[0], dest[1], dest[2])\n      }\n    } else if (arguments.length === 4) {\n      const src0 = arguments[0], src1 = arguments[1], dest0 = arguments[2], dest1 = arguments[3]\n      const rotPt = new Coordinate(dest1.x - dest0.x, dest1.y - dest0.y)\n      const ang = Angle.angleBetweenOriented(src1, src0, rotPt)\n      const srcDist = src1.distance(src0)\n      const destDist = dest1.distance(dest0)\n      if (srcDist === 0.0) return null\n      const scale = destDist / srcDist\n      const trans = AffineTransformation.translationInstance(-src0.x, -src0.y)\n      trans.rotate(ang)\n      trans.scale(scale, scale)\n      trans.translate(dest0.x, dest0.y)\n      return trans\n    } else if (arguments.length === 6) {\n      const src0 = arguments[0], src1 = arguments[1], src2 = arguments[2], dest0 = arguments[3], dest1 = arguments[4], dest2 = arguments[5]\n      const builder = new AffineTransformationBuilder(src0, src1, src2, dest0, dest1, dest2)\n      return builder.getTransformation()\n    }\n  }\n}\n","import LineString from '../LineString.js'\nimport Point from '../Point.js'\nimport GeometryComponentFilter from '../GeometryComponentFilter.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class ComponentCoordinateExtracter {\n  constructor() {\n    ComponentCoordinateExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coords = null\n    const coords = arguments[0]\n    this._coords = coords\n  }\n  static getCoordinates(geom) {\n    const coords = new ArrayList()\n    geom.apply(new ComponentCoordinateExtracter(coords))\n    return coords\n  }\n  filter(geom) {\n    if (geom instanceof LineString || geom instanceof Point) this._coords.add(geom.getCoordinate())\n  }\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  }\n}\n","import GeometryFactory from '../GeometryFactory.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class GeometryCollectionMapper {\n  constructor() {\n    GeometryCollectionMapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._mapOp = null\n    const mapOp = arguments[0]\n    this._mapOp = mapOp\n  }\n  static map(gc, op) {\n    const mapper = new GeometryCollectionMapper(op)\n    return mapper.map(gc)\n  }\n  map(gc) {\n    const mapped = new ArrayList()\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = this._mapOp.map(gc.getGeometryN(i))\n      if (!g.isEmpty()) mapped.add(g)\n    }\n    return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n  }\n}\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class GeometryCombiner {\n  constructor() {\n    GeometryCombiner.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFactory = null\n    this._skipEmpty = false\n    this._inputGeoms = null\n    const geoms = arguments[0]\n    this._geomFactory = GeometryCombiner.extractFactory(geoms)\n    this._inputGeoms = geoms\n  }\n  static combine() {\n    if (arguments.length === 1) {\n      const geoms = arguments[0]\n      const combiner = new GeometryCombiner(geoms)\n      return combiner.combine()\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      const combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1))\n      return combiner.combine()\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], g2 = arguments[2]\n      const combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2))\n      return combiner.combine()\n    }\n  }\n  static extractFactory(geoms) {\n    if (geoms.isEmpty()) return null\n    return geoms.iterator().next().getFactory()\n  }\n  static createList() {\n    if (arguments.length === 2) {\n      const obj0 = arguments[0], obj1 = arguments[1]\n      const list = new ArrayList()\n      list.add(obj0)\n      list.add(obj1)\n      return list\n    } else if (arguments.length === 3) {\n      const obj0 = arguments[0], obj1 = arguments[1], obj2 = arguments[2]\n      const list = new ArrayList()\n      list.add(obj0)\n      list.add(obj1)\n      list.add(obj2)\n      return list\n    }\n  }\n  extractElements(geom, elems) {\n    if (geom === null) return null\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const elemGeom = geom.getGeometryN(i)\n      if (this._skipEmpty && elemGeom.isEmpty()) continue\n      elems.add(elemGeom)\n    }\n  }\n  combine() {\n    const elems = new ArrayList()\n    for (let i = this._inputGeoms.iterator(); i.hasNext(); ) {\n      const g = i.next()\n      this.extractElements(g, elems)\n    }\n    if (elems.size() === 0) {\n      if (this._geomFactory !== null) \n        return this._geomFactory.createGeometryCollection()\n      \n      return null\n    }\n    return this._geomFactory.buildGeometry(elems)\n  }\n}\n","import LineString from '../LineString.js'\nimport Geometry from '../Geometry.js'\nimport Point from '../Point.js'\nimport Polygon from '../Polygon.js'\nimport LinearRing from '../LinearRing.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nexport default class GeometryEditor {\n  constructor() {\n    GeometryEditor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._factory = null\n    this._isUserDataCopied = false\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const factory = arguments[0]\n      this._factory = factory\n    }\n  }\n  setCopyUserData(isUserDataCopied) {\n    this._isUserDataCopied = isUserDataCopied\n  }\n  edit(geometry, operation) {\n    if (geometry === null) return null\n    const result = this.editInternal(geometry, operation)\n    if (this._isUserDataCopied) \n      result.setUserData(geometry.getUserData())\n    \n    return result\n  }\n  editInternal(geometry, operation) {\n    if (this._factory === null) this._factory = geometry.getFactory()\n    if (geometry instanceof GeometryCollection) \n      return this.editGeometryCollection(geometry, operation)\n    \n    if (geometry instanceof Polygon) \n      return this.editPolygon(geometry, operation)\n    \n    if (geometry instanceof Point) \n      return operation.edit(geometry, this._factory)\n    \n    if (geometry instanceof LineString) \n      return operation.edit(geometry, this._factory)\n    \n    Assert.shouldNeverReachHere('Unsupported Geometry type: ' + geometry.getGeometryType())\n    return null\n  }\n  editGeometryCollection(collection, operation) {\n    const collectionForType = operation.edit(collection, this._factory)\n    const geometries = new ArrayList()\n    for (let i = 0; i < collectionForType.getNumGeometries(); i++) {\n      const geometry = this.edit(collectionForType.getGeometryN(i), operation)\n      if (geometry === null || geometry.isEmpty()) \n        continue\n      \n      geometries.add(geometry)\n    }\n    if (collectionForType.getGeometryType() === Geometry.TYPENAME_MULTIPOINT) \n      return this._factory.createMultiPoint(geometries.toArray([]))\n    \n    if (collectionForType.getGeometryType() === Geometry.TYPENAME_MULTILINESTRING) \n      return this._factory.createMultiLineString(geometries.toArray([]))\n    \n    if (collectionForType.getGeometryType() === Geometry.TYPENAME_MULTIPOLYGON) \n      return this._factory.createMultiPolygon(geometries.toArray([]))\n    \n    return this._factory.createGeometryCollection(geometries.toArray([]))\n  }\n  editPolygon(polygon, operation) {\n    let newPolygon = operation.edit(polygon, this._factory)\n    if (newPolygon === null) newPolygon = this._factory.createPolygon()\n    if (newPolygon.isEmpty()) \n      return newPolygon\n    \n    const shell = this.edit(newPolygon.getExteriorRing(), operation)\n    if (shell === null || shell.isEmpty()) \n      return this._factory.createPolygon()\n    \n    const holes = new ArrayList()\n    for (let i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n      const hole = this.edit(newPolygon.getInteriorRingN(i), operation)\n      if (hole === null || hole.isEmpty()) \n        continue\n      \n      holes.add(hole)\n    }\n    return this._factory.createPolygon(shell, holes.toArray([]))\n  }\n}\nfunction GeometryEditorOperation() {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation\nclass NoOpGeometryOperation {\n  edit(geometry, factory) {\n    return geometry\n  }\n  get interfaces_() {\n    return [GeometryEditorOperation]\n  }\n}\nclass CoordinateOperation {\n  edit(geometry, factory) {\n    const coordinates = this.edit(geometry.getCoordinates(), geometry)\n    if (geometry instanceof LinearRing) \n      if (coordinates === null) return factory.createLinearRing(); else return factory.createLinearRing(coordinates)\n    \n    if (geometry instanceof LineString) \n      if (coordinates === null) return factory.createLineString(); else return factory.createLineString(coordinates)\n    \n    if (geometry instanceof Point) \n      if (coordinates === null || coordinates.length === 0) return factory.createPoint(); else return factory.createPoint(coordinates[0])\n    \n    return geometry\n  }\n  get interfaces_() {\n    return [GeometryEditorOperation]\n  }\n}\nclass CoordinateSequenceOperation {\n  edit(geometry, factory) {\n    if (geometry instanceof LinearRing) \n      return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n    \n    if (geometry instanceof LineString) \n      return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n    \n    if (geometry instanceof Point) \n      return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n    \n    return geometry\n  }\n  get interfaces_() {\n    return [GeometryEditorOperation]\n  }\n}\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation\nGeometryEditor.CoordinateOperation = CoordinateOperation\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation\n","import Geometry from '../Geometry.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GeometryFilter from '../GeometryFilter.js'\nexport default class GeometryExtracter {\n  constructor() {\n    GeometryExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometryType = null\n    this._comps = null\n    const geometryType = arguments[0], comps = arguments[1]\n    this._geometryType = geometryType\n    this._comps = comps\n  }\n  static isOfType(geom, geometryType) {\n    if (geom.getGeometryType() === geometryType) return true\n    if (geometryType === Geometry.TYPENAME_LINESTRING && geom.getGeometryType() === Geometry.TYPENAME_LINEARRING) return true\n    return false\n  }\n  static extract() {\n    if (arguments.length === 2) {\n      const geom = arguments[0], geometryType = arguments[1]\n      return GeometryExtracter.extract(geom, geometryType, new ArrayList())\n    } else if (arguments.length === 3) {\n      const geom = arguments[0], geometryType = arguments[1], list = arguments[2]\n      if (geom.getGeometryType() === geometryType) \n        list.add(geom)\n      else if (geom instanceof GeometryCollection) \n        geom.apply(new GeometryExtracter(geometryType, list))\n      \n      return list\n    }\n  }\n  filter(geom) {\n    if (this._geometryType === null || GeometryExtracter.isOfType(geom, this._geometryType)) this._comps.add(geom)\n  }\n  get interfaces_() {\n    return [GeometryFilter]\n  }\n}\n","import Geometry from '../Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class GeometryMapper {\n  static map() {\n    if (arguments[0] instanceof Geometry && hasInterface(arguments[1], MapOp)) {\n      const geom = arguments[0], op = arguments[1]\n      const mapped = new ArrayList()\n      for (let i = 0; i < geom.getNumGeometries(); i++) {\n        const g = op.map(geom.getGeometryN(i))\n        if (g !== null) mapped.add(g)\n      }\n      return geom.getFactory().buildGeometry(mapped)\n    } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], MapOp)) {\n      const geoms = arguments[0], op = arguments[1]\n      const mapped = new ArrayList()\n      for (let i = geoms.iterator(); i.hasNext(); ) {\n        const g = i.next()\n        const gr = op.map(g)\n        if (gr !== null) mapped.add(gr)\n      }\n      return mapped\n    }\n  }\n}\nfunction MapOp() {}\nGeometryMapper.MapOp = MapOp\n","import LineString from '../LineString.js'\nimport GeometryFactory from '../GeometryFactory.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Point from '../Point.js'\nimport Polygon from '../Polygon.js'\nimport MultiPoint from '../MultiPoint.js'\nimport LinearRing from '../LinearRing.js'\nimport MultiPolygon from '../MultiPolygon.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport MultiLineString from '../MultiLineString.js'\nexport default class GeometryTransformer {\n  constructor() {\n    GeometryTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._factory = null\n    this._pruneEmptyGeometry = true\n    this._preserveGeometryCollectionType = true\n    this._preserveCollections = false\n    this._preserveType = false\n  }\n  transformPoint(geom, parent) {\n    return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n  }\n  transformPolygon(geom, parent) {\n    let isAllValidLinearRings = true\n    const shell = this.transformLinearRing(geom.getExteriorRing(), geom)\n    if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false\n    const holes = new ArrayList()\n    for (let i = 0; i < geom.getNumInteriorRing(); i++) {\n      const hole = this.transformLinearRing(geom.getInteriorRingN(i), geom)\n      if (hole === null || hole.isEmpty()) \n        continue\n      \n      if (!(hole instanceof LinearRing)) isAllValidLinearRings = false\n      holes.add(hole)\n    }\n    if (isAllValidLinearRings) {\n      return this._factory.createPolygon(shell, holes.toArray([]))\n    } else {\n      const components = new ArrayList()\n      if (shell !== null) components.add(shell)\n      components.addAll(holes)\n      return this._factory.buildGeometry(components)\n    }\n  }\n  createCoordinateSequence(coords) {\n    return this._factory.getCoordinateSequenceFactory().create(coords)\n  }\n  getInputGeometry() {\n    return this._inputGeom\n  }\n  transformMultiLineString(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformLineString(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transformCoordinates(coords, parent) {\n    return this.copy(coords)\n  }\n  transformLineString(geom, parent) {\n    return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n  }\n  transformMultiPoint(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformPoint(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transformMultiPolygon(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transformPolygon(geom.getGeometryN(i), geom)\n      if (transformGeom === null) continue\n      if (transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    return this._factory.buildGeometry(transGeomList)\n  }\n  copy(seq) {\n    return seq.copy()\n  }\n  transformGeometryCollection(geom, parent) {\n    const transGeomList = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const transformGeom = this.transform(geom.getGeometryN(i))\n      if (transformGeom === null) continue\n      if (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue\n      transGeomList.add(transformGeom)\n    }\n    if (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList))\n    return this._factory.buildGeometry(transGeomList)\n  }\n  transform(inputGeom) {\n    this._inputGeom = inputGeom\n    this._factory = inputGeom.getFactory()\n    if (inputGeom instanceof Point) return this.transformPoint(inputGeom, null)\n    if (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null)\n    if (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null)\n    if (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null)\n    if (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null)\n    if (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null)\n    if (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null)\n    if (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null)\n    throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getGeometryType())\n  }\n  transformLinearRing(geom, parent) {\n    const seq = this.transformCoordinates(geom.getCoordinateSequence(), geom)\n    if (seq === null) return this._factory.createLinearRing(null)\n    const seqSize = seq.size()\n    if (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq)\n    return this._factory.createLinearRing(seq)\n  }\n}\n","import LineString from '../LineString.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GeometryFilter from '../GeometryFilter.js'\nexport default class LineStringExtracter {\n  constructor() {\n    LineStringExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._comps = null\n    const comps = arguments[0]\n    this._comps = comps\n  }\n  static getGeometry(geom) {\n    return geom.getFactory().buildGeometry(LineStringExtracter.getLines(geom))\n  }\n  static getLines() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return LineStringExtracter.getLines(geom, new ArrayList())\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], lines = arguments[1]\n      if (geom instanceof LineString) \n        lines.add(geom)\n      else if (geom instanceof GeometryCollection) \n        geom.apply(new LineStringExtracter(lines))\n      \n      return lines\n    }\n  }\n  filter(geom) {\n    if (geom instanceof LineString) this._comps.add(geom)\n  }\n  get interfaces_() {\n    return [GeometryFilter]\n  }\n}\n","import LineString from '../LineString.js'\nimport Geometry from '../Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport LinearRing from '../LinearRing.js'\nimport GeometryComponentFilter from '../GeometryComponentFilter.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class LinearComponentExtracter {\n  constructor() {\n    LinearComponentExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._lines = null\n    this._isForcedToLineString = false\n    if (arguments.length === 1) {\n      const lines = arguments[0]\n      this._lines = lines\n    } else if (arguments.length === 2) {\n      const lines = arguments[0], isForcedToLineString = arguments[1]\n      this._lines = lines\n      this._isForcedToLineString = isForcedToLineString\n    }\n  }\n  static getGeometry() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], forceToLineString = arguments[1]\n      return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString))\n    }\n  }\n  static getLines() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return LinearComponentExtracter.getLines(geom, false)\n    } else if (arguments.length === 2) {\n      if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n        const geoms = arguments[0], lines = arguments[1]\n        for (let i = geoms.iterator(); i.hasNext(); ) {\n          const g = i.next()\n          LinearComponentExtracter.getLines(g, lines)\n        }\n        return lines\n      } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n        const geom = arguments[0], forceToLineString = arguments[1]\n        const lines = new ArrayList()\n        geom.apply(new LinearComponentExtracter(lines, forceToLineString))\n        return lines\n      } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n        const geom = arguments[0], lines = arguments[1]\n        if (geom instanceof LineString) \n          lines.add(geom)\n        else \n          geom.apply(new LinearComponentExtracter(lines))\n        \n        return lines\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n        const geoms = arguments[0], lines = arguments[1], forceToLineString = arguments[2]\n        for (let i = geoms.iterator(); i.hasNext(); ) {\n          const g = i.next()\n          LinearComponentExtracter.getLines(g, lines, forceToLineString)\n        }\n        return lines\n      } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n        const geom = arguments[0], lines = arguments[1], forceToLineString = arguments[2]\n        geom.apply(new LinearComponentExtracter(lines, forceToLineString))\n        return lines\n      }\n    }\n  }\n  filter(geom) {\n    if (this._isForcedToLineString && geom instanceof LinearRing) {\n      const line = geom.getFactory().createLineString(geom.getCoordinateSequence())\n      this._lines.add(line)\n      return null\n    }\n    if (geom instanceof LineString) this._lines.add(geom)\n  }\n  setForceToLineString(isForcedToLineString) {\n    this._isForcedToLineString = isForcedToLineString\n  }\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  }\n}\n","import Arrays from './Arrays.js'\nimport ArrayList from './ArrayList.js'\n\nconst Collections = {\n  reverseOrder: function() {\n    return {\n      compare(a, b) {\n        return b.compareTo(a)\n      }\n    }\n  },\n  min: function(l) {\n    Collections.sort(l)\n    return l.get(0)\n  },\n  sort: function(l, c) {\n    const a = l.toArray()\n    if (c)\n      Arrays.sort(a, c)\n    else\n      Arrays.sort(a)\n    const i = l.iterator()\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next()\n      i.set(a[pos])\n    }\n  },\n  singletonList: function(o) {\n    const arrayList = new ArrayList()\n    arrayList.add(o)\n    return arrayList\n  }\n}\n\nexport default Collections\n","import Point from '../Point.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GeometryFilter from '../GeometryFilter.js'\nexport default class PointExtracter {\n  constructor() {\n    PointExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    const pts = arguments[0]\n    this._pts = pts\n  }\n  static getPoints() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      if (geom instanceof Point) \n        return Collections.singletonList(geom)\n      \n      return PointExtracter.getPoints(geom, new ArrayList())\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], list = arguments[1]\n      if (geom instanceof Point) \n        list.add(geom)\n      else if (geom instanceof GeometryCollection) \n        geom.apply(new PointExtracter(list))\n      \n      return list\n    }\n  }\n  filter(geom) {\n    if (geom instanceof Point) this._pts.add(geom)\n  }\n  get interfaces_() {\n    return [GeometryFilter]\n  }\n}\n","import Polygon from '../Polygon.js'\nimport GeometryCollection from '../GeometryCollection.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GeometryFilter from '../GeometryFilter.js'\nexport default class PolygonExtracter {\n  constructor() {\n    PolygonExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._comps = null\n    const comps = arguments[0]\n    this._comps = comps\n  }\n  static getPolygons() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      return PolygonExtracter.getPolygons(geom, new ArrayList())\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], list = arguments[1]\n      if (geom instanceof Polygon) \n        list.add(geom)\n      else if (geom instanceof GeometryCollection) \n        geom.apply(new PolygonExtracter(list))\n      \n      return list\n    }\n  }\n  filter(geom) {\n    if (geom instanceof Polygon) this._comps.add(geom)\n  }\n  get interfaces_() {\n    return [GeometryFilter]\n  }\n}\n","import GeometryCollection from '../GeometryCollection.js'\nexport default class ShortCircuitedGeometryVisitor {\n  constructor() {\n    ShortCircuitedGeometryVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isDone = false\n  }\n  applyTo(geom) {\n    for (let i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n      const element = geom.getGeometryN(i)\n      if (!(element instanceof GeometryCollection)) {\n        this.visit(element)\n        if (this.isDone()) {\n          this._isDone = true\n          return null\n        }\n      } else {\n        this.applyTo(element)\n      }\n    }\n  }\n}\n","import GeometryFactory from '../geom/GeometryFactory.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport AffineTransformation from '../geom/util/AffineTransformation.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class GeometricShapeFactory {\n  constructor() {\n    GeometricShapeFactory.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFact = null\n    this._precModel = null\n    this._dim = new Dimensions()\n    this._nPts = 100\n    this._rotationAngle = 0.0\n    if (arguments.length === 0) {\n      GeometricShapeFactory.constructor_.call(this, new GeometryFactory())\n    } else if (arguments.length === 1) {\n      const geomFact = arguments[0]\n      this._geomFact = geomFact\n      this._precModel = geomFact.getPrecisionModel()\n    }\n  }\n  createSupercircle(power) {\n    const recipPow = 1.0 / power\n    const radius = this._dim.getMinSize() / 2\n    const centre = this._dim.getCentre()\n    const r4 = Math.pow(radius, power)\n    const y0 = radius\n    const xyInt = Math.pow(r4 / 2, recipPow)\n    const nSegsInOct = Math.trunc(this._nPts / 8)\n    const totPts = nSegsInOct * 8 + 1\n    const pts = new Array(totPts).fill(null)\n    const xInc = xyInt / nSegsInOct\n    for (let i = 0; i <= nSegsInOct; i++) {\n      let x = 0.0\n      let y = y0\n      if (i !== 0) {\n        x = xInc * i\n        const x4 = Math.pow(x, power)\n        y = Math.pow(r4 - x4, recipPow)\n      }\n      pts[i] = this.coordTrans(x, y, centre)\n      pts[2 * nSegsInOct - i] = this.coordTrans(y, x, centre)\n      pts[2 * nSegsInOct + i] = this.coordTrans(y, -x, centre)\n      pts[4 * nSegsInOct - i] = this.coordTrans(x, -y, centre)\n      pts[4 * nSegsInOct + i] = this.coordTrans(-x, -y, centre)\n      pts[6 * nSegsInOct - i] = this.coordTrans(-y, -x, centre)\n      pts[6 * nSegsInOct + i] = this.coordTrans(-y, x, centre)\n      pts[8 * nSegsInOct - i] = this.coordTrans(-x, y, centre)\n    }\n    pts[pts.length - 1] = new Coordinate(pts[0])\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return this.rotate(poly)\n  }\n  setNumPoints(nPts) {\n    this._nPts = nPts\n  }\n  setBase(base) {\n    this._dim.setBase(base)\n  }\n  setRotation(radians) {\n    this._rotationAngle = radians\n  }\n  setWidth(width) {\n    this._dim.setWidth(width)\n  }\n  createEllipse() {\n    const env = this._dim.getEnvelope()\n    const xRadius = env.getWidth() / 2.0\n    const yRadius = env.getHeight() / 2.0\n    const centreX = env.getMinX() + xRadius\n    const centreY = env.getMinY() + yRadius\n    const pts = new Array(this._nPts + 1).fill(null)\n    let iPt = 0\n    for (let i = 0; i < this._nPts; i++) {\n      const ang = i * (2 * Math.PI / this._nPts)\n      const x = xRadius * Math.cos(ang) + centreX\n      const y = yRadius * Math.sin(ang) + centreY\n      pts[iPt++] = this.coord(x, y)\n    }\n    pts[iPt] = new Coordinate(pts[0])\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return this.rotate(poly)\n  }\n  coordTrans(x, y, trans) {\n    return this.coord(x + trans.x, y + trans.y)\n  }\n  createSquircle() {\n    return this.createSupercircle(4)\n  }\n  setEnvelope(env) {\n    this._dim.setEnvelope(env)\n  }\n  setCentre(centre) {\n    this._dim.setCentre(centre)\n  }\n  createArc(startAng, angExtent) {\n    const env = this._dim.getEnvelope()\n    const xRadius = env.getWidth() / 2.0\n    const yRadius = env.getHeight() / 2.0\n    const centreX = env.getMinX() + xRadius\n    const centreY = env.getMinY() + yRadius\n    let angSize = angExtent\n    if (angSize <= 0.0 || angSize > 2 * Math.PI) angSize = 2 * Math.PI\n    const angInc = angSize / (this._nPts - 1)\n    const pts = new Array(this._nPts).fill(null)\n    let iPt = 0\n    for (let i = 0; i < this._nPts; i++) {\n      const ang = startAng + i * angInc\n      const x = xRadius * Math.cos(ang) + centreX\n      const y = yRadius * Math.sin(ang) + centreY\n      pts[iPt++] = this.coord(x, y)\n    }\n    const line = this._geomFact.createLineString(pts)\n    return this.rotate(line)\n  }\n  rotate(geom) {\n    if (this._rotationAngle !== 0.0) {\n      const trans = AffineTransformation.rotationInstance(this._rotationAngle, this._dim.getCentre().x, this._dim.getCentre().y)\n      geom.apply(trans)\n    }\n    return geom\n  }\n  coord(x, y) {\n    const pt = new Coordinate(x, y)\n    this._precModel.makePrecise(pt)\n    return pt\n  }\n  createArcPolygon(startAng, angExtent) {\n    const env = this._dim.getEnvelope()\n    const xRadius = env.getWidth() / 2.0\n    const yRadius = env.getHeight() / 2.0\n    const centreX = env.getMinX() + xRadius\n    const centreY = env.getMinY() + yRadius\n    let angSize = angExtent\n    if (angSize <= 0.0 || angSize > 2 * Math.PI) angSize = 2 * Math.PI\n    const angInc = angSize / (this._nPts - 1)\n    const pts = new Array(this._nPts + 2).fill(null)\n    let iPt = 0\n    pts[iPt++] = this.coord(centreX, centreY)\n    for (let i = 0; i < this._nPts; i++) {\n      const ang = startAng + angInc * i\n      const x = xRadius * Math.cos(ang) + centreX\n      const y = yRadius * Math.sin(ang) + centreY\n      pts[iPt++] = this.coord(x, y)\n    }\n    pts[iPt++] = this.coord(centreX, centreY)\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return this.rotate(poly)\n  }\n  createRectangle() {\n    let i = null\n    let ipt = 0\n    let nSide = Math.trunc(this._nPts / 4)\n    if (nSide < 1) nSide = 1\n    const XsegLen = this._dim.getEnvelope().getWidth() / nSide\n    const YsegLen = this._dim.getEnvelope().getHeight() / nSide\n    const pts = new Array(4 * nSide + 1).fill(null)\n    const env = this._dim.getEnvelope()\n    for ((i = 0); i < nSide; i++) {\n      const x = env.getMinX() + i * XsegLen\n      const y = env.getMinY()\n      pts[ipt++] = this.coord(x, y)\n    }\n    for ((i = 0); i < nSide; i++) {\n      const x = env.getMaxX()\n      const y = env.getMinY() + i * YsegLen\n      pts[ipt++] = this.coord(x, y)\n    }\n    for ((i = 0); i < nSide; i++) {\n      const x = env.getMaxX() - i * XsegLen\n      const y = env.getMaxY()\n      pts[ipt++] = this.coord(x, y)\n    }\n    for ((i = 0); i < nSide; i++) {\n      const x = env.getMinX()\n      const y = env.getMaxY() - i * YsegLen\n      pts[ipt++] = this.coord(x, y)\n    }\n    pts[ipt++] = new Coordinate(pts[0])\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return this.rotate(poly)\n  }\n  createCircle() {\n    return this.createEllipse()\n  }\n  setHeight(height) {\n    this._dim.setHeight(height)\n  }\n  setSize(size) {\n    this._dim.setSize(size)\n  }\n}\nclass Dimensions {\n  constructor() {\n    Dimensions.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.base = null\n    this.centre = null\n    this.width = null\n    this.height = null\n  }\n  setBase(base) {\n    this.base = base\n  }\n  setWidth(width) {\n    this.width = width\n  }\n  getBase() {\n    return this.base\n  }\n  getWidth() {\n    return this.width\n  }\n  setEnvelope(env) {\n    this.width = env.getWidth()\n    this.height = env.getHeight()\n    this.base = new Coordinate(env.getMinX(), env.getMinY())\n    this.centre = new Coordinate(env.centre())\n  }\n  setCentre(centre) {\n    this.centre = centre\n  }\n  getMinSize() {\n    return Math.min(this.width, this.height)\n  }\n  getEnvelope() {\n    if (this.base !== null) \n      return new Envelope(this.base.x, this.base.x + this.width, this.base.y, this.base.y + this.height)\n    \n    if (this.centre !== null) \n      return new Envelope(this.centre.x - this.width / 2, this.centre.x + this.width / 2, this.centre.y - this.height / 2, this.centre.y + this.height / 2)\n    \n    return new Envelope(0, this.width, 0, this.height)\n  }\n  getCentre() {\n    if (this.centre === null) \n      this.centre = new Coordinate(this.base.x + this.width / 2, this.base.y + this.height / 2)\n    \n    return this.centre\n  }\n  getHeight() {\n    return this.height\n  }\n  setHeight(height) {\n    this.height = height\n  }\n  setSize(size) {\n    this.height = size\n    this.width = size\n  }\n}\nGeometricShapeFactory.Dimensions = Dimensions\n","import Coordinate from '../Coordinate.js'\nimport GeometricShapeFactory from '../../util/GeometricShapeFactory.js'\nexport default class SineStarFactory extends GeometricShapeFactory {\n  constructor() {\n    super()\n    SineStarFactory.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._numArms = 8\n    this._armLengthRatio = 0.5\n    if (arguments.length === 0) {\n      GeometricShapeFactory.constructor_.call(this)\n    } else if (arguments.length === 1) {\n      const geomFact = arguments[0]\n      GeometricShapeFactory.constructor_.call(this, geomFact)\n    }\n  }\n  static create(origin, size, nPts, nArms, armLengthRatio) {\n    const gsf = new SineStarFactory()\n    gsf.setCentre(origin)\n    gsf.setSize(size)\n    gsf.setNumPoints(nPts)\n    gsf.setArmLengthRatio(armLengthRatio)\n    gsf.setNumArms(nArms)\n    const poly = gsf.createSineStar()\n    return poly\n  }\n  setNumArms(numArms) {\n    this._numArms = numArms\n  }\n  setArmLengthRatio(armLengthRatio) {\n    this._armLengthRatio = armLengthRatio\n  }\n  createSineStar() {\n    const env = this._dim.getEnvelope()\n    const radius = env.getWidth() / 2.0\n    let armRatio = this._armLengthRatio\n    if (armRatio < 0.0) armRatio = 0.0\n    if (armRatio > 1.0) armRatio = 1.0\n    const armMaxLen = armRatio * radius\n    const insideRadius = (1 - armRatio) * radius\n    const centreX = env.getMinX() + radius\n    const centreY = env.getMinY() + radius\n    const pts = new Array(this._nPts + 1).fill(null)\n    let iPt = 0\n    for (let i = 0; i < this._nPts; i++) {\n      const ptArcFrac = i / this._nPts * this._numArms\n      const armAngFrac = ptArcFrac - Math.floor(ptArcFrac)\n      const armAng = 2 * Math.PI * armAngFrac\n      const armLenFrac = (Math.cos(armAng) + 1.0) / 2.0\n      const curveRadius = insideRadius + armMaxLen * armLenFrac\n      const ang = i * (2 * Math.PI / this._nPts)\n      const x = curveRadius * Math.cos(ang) + centreX\n      const y = curveRadius * Math.sin(ang) + centreY\n      pts[iPt++] = this.coord(x, y)\n    }\n    pts[iPt] = new Coordinate(pts[0])\n    const ring = this._geomFact.createLinearRing(pts)\n    const poly = this._geomFact.createPolygon(ring)\n    return poly\n  }\n}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Double from '../../../../../java/lang/Double.js'\nexport default class PointPairDistance {\n  constructor() {\n    PointPairDistance.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pt = [new Coordinate(), new Coordinate()]\n    this._distance = Double.NaN\n    this._isNull = true\n  }\n  getCoordinates() {\n    return this._pt\n  }\n  getCoordinate(i) {\n    return this._pt[i]\n  }\n  setMinimum() {\n    if (arguments.length === 1) {\n      const ptDist = arguments[0]\n      this.setMinimum(ptDist._pt[0], ptDist._pt[1])\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      if (this._isNull) {\n        this.initialize(p0, p1)\n        return null\n      }\n      const dist = p0.distance(p1)\n      if (dist < this._distance) this.initialize(p0, p1, dist)\n    }\n  }\n  initialize() {\n    if (arguments.length === 0) {\n      this._isNull = true\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      this._pt[0].setCoordinate(p0)\n      this._pt[1].setCoordinate(p1)\n      this._distance = p0.distance(p1)\n      this._isNull = false\n    } else if (arguments.length === 3) {\n      const p0 = arguments[0], p1 = arguments[1], distance = arguments[2]\n      this._pt[0].setCoordinate(p0)\n      this._pt[1].setCoordinate(p1)\n      this._distance = distance\n      this._isNull = false\n    }\n  }\n  toString() {\n    return WKTWriter.toLineString(this._pt[0], this._pt[1])\n  }\n  getDistance() {\n    return this._distance\n  }\n  setMaximum() {\n    if (arguments.length === 1) {\n      const ptDist = arguments[0]\n      this.setMaximum(ptDist._pt[0], ptDist._pt[1])\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      if (this._isNull) {\n        this.initialize(p0, p1)\n        return null\n      }\n      const dist = p0.distance(p1)\n      if (dist > this._distance) this.initialize(p0, p1, dist)\n    }\n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport Geometry from '../../geom/Geometry.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Polygon from '../../geom/Polygon.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport PointPairDistance from './PointPairDistance.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nexport default class DistanceToPoint {\n  static computeDistance() {\n    if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n      const line = arguments[0], pt = arguments[1], ptDist = arguments[2]\n      const tempSegment = new LineSegment()\n      const coords = line.getCoordinates()\n      for (let i = 0; i < coords.length - 1; i++) {\n        tempSegment.setCoordinates(coords[i], coords[i + 1])\n        const closestPt = tempSegment.closestPoint(pt)\n        ptDist.setMinimum(closestPt, pt)\n      }\n    } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n      const poly = arguments[0], pt = arguments[1], ptDist = arguments[2]\n      DistanceToPoint.computeDistance(poly.getExteriorRing(), pt, ptDist)\n      for (let i = 0; i < poly.getNumInteriorRing(); i++) \n        DistanceToPoint.computeDistance(poly.getInteriorRingN(i), pt, ptDist)\n      \n    } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n      const geom = arguments[0], pt = arguments[1], ptDist = arguments[2]\n      if (geom instanceof LineString) {\n        DistanceToPoint.computeDistance(geom, pt, ptDist)\n      } else if (geom instanceof Polygon) {\n        DistanceToPoint.computeDistance(geom, pt, ptDist)\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) {\n          const g = gc.getGeometryN(i)\n          DistanceToPoint.computeDistance(g, pt, ptDist)\n        }\n      } else {\n        ptDist.setMinimum(geom.getCoordinate(), pt)\n      }\n    } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n      const segment = arguments[0], pt = arguments[1], ptDist = arguments[2]\n      const closestPt = segment.closestPoint(pt)\n      ptDist.setMinimum(closestPt, pt)\n    }\n  }\n}\n","import DistanceToPoint from './DistanceToPoint.js'\nimport CoordinateFilter from '../../geom/CoordinateFilter.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport PointPairDistance from './PointPairDistance.js'\nimport CoordinateSequenceFilter from '../../geom/CoordinateSequenceFilter.js'\nexport default class DiscreteHausdorffDistance {\n  constructor() {\n    DiscreteHausdorffDistance.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._g0 = null\n    this._g1 = null\n    this._ptDist = new PointPairDistance()\n    this._densifyFrac = 0.0\n    const g0 = arguments[0], g1 = arguments[1]\n    this._g0 = g0\n    this._g1 = g1\n  }\n  static distance() {\n    if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      const dist = new DiscreteHausdorffDistance(g0, g1)\n      return dist.distance()\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], densifyFrac = arguments[2]\n      const dist = new DiscreteHausdorffDistance(g0, g1)\n      dist.setDensifyFraction(densifyFrac)\n      return dist.distance()\n    }\n  }\n  getCoordinates() {\n    return this._ptDist.getCoordinates()\n  }\n  setDensifyFraction(densifyFrac) {\n    if (densifyFrac > 1.0 || densifyFrac <= 0.0) throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]')\n    this._densifyFrac = densifyFrac\n  }\n  compute(g0, g1) {\n    this.computeOrientedDistance(g0, g1, this._ptDist)\n    this.computeOrientedDistance(g1, g0, this._ptDist)\n  }\n  distance() {\n    this.compute(this._g0, this._g1)\n    return this._ptDist.getDistance()\n  }\n  computeOrientedDistance(discreteGeom, geom, ptDist) {\n    const distFilter = new MaxPointDistanceFilter(geom)\n    discreteGeom.apply(distFilter)\n    ptDist.setMaximum(distFilter.getMaxPointDistance())\n    if (this._densifyFrac > 0) {\n      const fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac)\n      discreteGeom.apply(fracFilter)\n      ptDist.setMaximum(fracFilter.getMaxPointDistance())\n    }\n  }\n  orientedDistance() {\n    this.computeOrientedDistance(this._g0, this._g1, this._ptDist)\n    return this._ptDist.getDistance()\n  }\n}\nclass MaxPointDistanceFilter {\n  constructor() {\n    MaxPointDistanceFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._maxPtDist = new PointPairDistance()\n    this._minPtDist = new PointPairDistance()\n    this._euclideanDist = new DistanceToPoint()\n    this._geom = null\n    const geom = arguments[0]\n    this._geom = geom\n  }\n  filter(pt) {\n    this._minPtDist.initialize()\n    DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist)\n    this._maxPtDist.setMaximum(this._minPtDist)\n  }\n  getMaxPointDistance() {\n    return this._maxPtDist\n  }\n  get interfaces_() {\n    return [CoordinateFilter]\n  }\n}\nclass MaxDensifiedByFractionDistanceFilter {\n  constructor() {\n    MaxDensifiedByFractionDistanceFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._maxPtDist = new PointPairDistance()\n    this._minPtDist = new PointPairDistance()\n    this._geom = null\n    this._numSubSegs = 0\n    const geom = arguments[0], fraction = arguments[1]\n    this._geom = geom\n    this._numSubSegs = Math.trunc(Math.round(1.0 / fraction))\n  }\n  filter(seq, index) {\n    if (index === 0) return null\n    const p0 = seq.getCoordinate(index - 1)\n    const p1 = seq.getCoordinate(index)\n    const delx = (p1.x - p0.x) / this._numSubSegs\n    const dely = (p1.y - p0.y) / this._numSubSegs\n    for (let i = 0; i < this._numSubSegs; i++) {\n      const x = p0.x + i * delx\n      const y = p0.y + i * dely\n      const pt = new Coordinate(x, y)\n      this._minPtDist.initialize()\n      DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist)\n      this._maxPtDist.setMaximum(this._minPtDist)\n    }\n  }\n  isDone() {\n    return false\n  }\n  isGeometryChanged() {\n    return false\n  }\n  getMaxPointDistance() {\n    return this._maxPtDist\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFilter]\n  }\n}\nDiscreteHausdorffDistance.MaxPointDistanceFilter = MaxPointDistanceFilter\nDiscreteHausdorffDistance.MaxDensifiedByFractionDistanceFilter = MaxDensifiedByFractionDistanceFilter\n","export default class ItemVisitor {\n  visitItem(item) {}\n}\n","export default class PointOnGeometryLocator {\n  locate(p) {}\n}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Comparator from '../../../../../java/util/Comparator.js'\nexport default class IntervalRTreeNode {\n  constructor() {\n    IntervalRTreeNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._min = Double.POSITIVE_INFINITY\n    this._max = Double.NEGATIVE_INFINITY\n  }\n  getMin() {\n    return this._min\n  }\n  intersects(queryMin, queryMax) {\n    if (this._min > queryMax || this._max < queryMin) return false\n    return true\n  }\n  getMax() {\n    return this._max\n  }\n  toString() {\n    return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n  }\n}\nclass NodeComparator {\n  compare(o1, o2) {\n    const n1 = o1\n    const n2 = o2\n    const mid1 = (n1._min + n1._max) / 2\n    const mid2 = (n2._min + n2._max) / 2\n    if (mid1 < mid2) return -1\n    if (mid1 > mid2) return 1\n    return 0\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nIntervalRTreeNode.NodeComparator = NodeComparator\n","import IntervalRTreeNode from './IntervalRTreeNode.js'\nexport default class IntervalRTreeLeafNode extends IntervalRTreeNode {\n  constructor() {\n    super()\n    IntervalRTreeLeafNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._item = null\n    const min = arguments[0], max = arguments[1], item = arguments[2]\n    this._min = min\n    this._max = max\n    this._item = item\n  }\n  query(queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) return null\n    visitor.visitItem(this._item)\n  }\n}\n","import IntervalRTreeNode from './IntervalRTreeNode.js'\nexport default class IntervalRTreeBranchNode extends IntervalRTreeNode {\n  constructor() {\n    super()\n    IntervalRTreeBranchNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._node1 = null\n    this._node2 = null\n    const n1 = arguments[0], n2 = arguments[1]\n    this._node1 = n1\n    this._node2 = n2\n    this.buildExtent(this._node1, this._node2)\n  }\n  buildExtent(n1, n2) {\n    this._min = Math.min(n1._min, n2._min)\n    this._max = Math.max(n1._max, n2._max)\n  }\n  query(queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) \n      return null\n    \n    if (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor)\n    if (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor)\n  }\n}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode.js'\nimport IntervalRTreeNode from './IntervalRTreeNode.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport System from '../../../../../java/lang/System.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport IllegalStateException from '../../../../../java/lang/IllegalStateException.js'\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode.js'\nexport default class SortedPackedIntervalRTree {\n  constructor() {\n    SortedPackedIntervalRTree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._leaves = new ArrayList()\n    this._root = null\n    this._level = 0\n  }\n  buildTree() {\n    Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator())\n    let src = this._leaves\n    let temp = null\n    let dest = new ArrayList()\n    while (true) {\n      this.buildLevel(src, dest)\n      if (dest.size() === 1) return dest.get(0)\n      temp = src\n      src = dest\n      dest = temp\n    }\n  }\n  insert(min, max, item) {\n    if (this._root !== null) throw new IllegalStateException('Index cannot be added to once it has been queried')\n    this._leaves.add(new IntervalRTreeLeafNode(min, max, item))\n  }\n  query(min, max, visitor) {\n    this.init()\n    if (this._root === null) return null\n    this._root.query(min, max, visitor)\n  }\n  buildRoot() {\n    if (this._root !== null) return null\n    this._root = this.buildTree()\n  }\n  printNode(node) {\n    System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)))\n  }\n  init() {\n    if (this._root !== null) return null\n    if (this._leaves.size() === 0) return null\n    this.buildRoot()\n  }\n  buildLevel(src, dest) {\n    this._level++\n    dest.clear()\n    for (let i = 0; i < src.size(); i += 2) {\n      const n1 = src.get(i)\n      const n2 = i + 1 < src.size() ? src.get(i) : null\n      if (n2 === null) {\n        dest.add(n1)\n      } else {\n        const node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1))\n        dest.add(node)\n      }\n    }\n  }\n}\n","import ItemVisitor from './ItemVisitor.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class ArrayListVisitor {\n  constructor() {\n    ArrayListVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._items = new ArrayList()\n  }\n  visitItem(item) {\n    this._items.add(item)\n  }\n  getItems() {\n    return this._items\n  }\n  get interfaces_() {\n    return [ItemVisitor]\n  }\n}\n","import Location from '../geom/Location.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Orientation from './Orientation.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nexport default class RayCrossingCounter {\n  constructor() {\n    RayCrossingCounter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._p = null\n    this._crossingCount = 0\n    this._isPointOnSegment = false\n    const p = arguments[0]\n    this._p = p\n  }\n  static locatePointInRing() {\n    if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n      const p = arguments[0], ring = arguments[1]\n      const counter = new RayCrossingCounter(p)\n      const p1 = new Coordinate()\n      const p2 = new Coordinate()\n      for (let i = 1; i < ring.size(); i++) {\n        ring.getCoordinate(i, p1)\n        ring.getCoordinate(i - 1, p2)\n        counter.countSegment(p1, p2)\n        if (counter.isOnSegment()) return counter.getLocation()\n      }\n      return counter.getLocation()\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n      const p = arguments[0], ring = arguments[1]\n      const counter = new RayCrossingCounter(p)\n      for (let i = 1; i < ring.length; i++) {\n        const p1 = ring[i]\n        const p2 = ring[i - 1]\n        counter.countSegment(p1, p2)\n        if (counter.isOnSegment()) return counter.getLocation()\n      }\n      return counter.getLocation()\n    }\n  }\n  countSegment(p1, p2) {\n    if (p1.x < this._p.x && p2.x < this._p.x) return null\n    if (this._p.x === p2.x && this._p.y === p2.y) {\n      this._isPointOnSegment = true\n      return null\n    }\n    if (p1.y === this._p.y && p2.y === this._p.y) {\n      let minx = p1.x\n      let maxx = p2.x\n      if (minx > maxx) {\n        minx = p2.x\n        maxx = p1.x\n      }\n      if (this._p.x >= minx && this._p.x <= maxx) \n        this._isPointOnSegment = true\n      \n      return null\n    }\n    if (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n      let orient = Orientation.index(p1, p2, this._p)\n      if (orient === Orientation.COLLINEAR) {\n        this._isPointOnSegment = true\n        return null\n      }\n      if (p2.y < p1.y) \n        orient = -orient\n      \n      if (orient === Orientation.LEFT) \n        this._crossingCount++\n      \n    }\n  }\n  isPointInPolygon() {\n    return this.getLocation() !== Location.EXTERIOR\n  }\n  getLocation() {\n    if (this._isPointOnSegment) return Location.BOUNDARY\n    if (this._crossingCount % 2 === 1) \n      return Location.INTERIOR\n    \n    return Location.EXTERIOR\n  }\n  isOnSegment() {\n    return this._isPointOnSegment\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport ItemVisitor from '../../index/ItemVisitor.js'\nimport PointOnGeometryLocator from './PointOnGeometryLocator.js'\nimport LinearRing from '../../geom/LinearRing.js'\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport Polygonal from '../../geom/Polygonal.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter.js'\nimport ArrayListVisitor from '../../index/ArrayListVisitor.js'\nimport RayCrossingCounter from '../RayCrossingCounter.js'\nexport default class IndexedPointInAreaLocator {\n  constructor() {\n    IndexedPointInAreaLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    this._index = null\n    const g = arguments[0]\n    if (!(hasInterface(g, Polygonal) || g instanceof LinearRing)) throw new IllegalArgumentException('Argument must be Polygonal or LinearRing')\n    this._geom = g\n  }\n  locate(p) {\n    if (this._index === null) {\n      this._index = new IntervalIndexedGeometry(this._geom)\n      this._geom = null\n    }\n    const rcc = new RayCrossingCounter(p)\n    const visitor = new SegmentVisitor(rcc)\n    this._index.query(p.y, p.y, visitor)\n    return rcc.getLocation()\n  }\n  get interfaces_() {\n    return [PointOnGeometryLocator]\n  }\n}\nclass SegmentVisitor {\n  constructor() {\n    SegmentVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._counter = null\n    const counter = arguments[0]\n    this._counter = counter\n  }\n  visitItem(item) {\n    const seg = item\n    this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1))\n  }\n  get interfaces_() {\n    return [ItemVisitor]\n  }\n}\nclass IntervalIndexedGeometry {\n  constructor() {\n    IntervalIndexedGeometry.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isEmpty = false\n    this._index = new SortedPackedIntervalRTree()\n    const geom = arguments[0]\n    if (geom.isEmpty()) this._isEmpty = true; else this.init(geom)\n  }\n  init(geom) {\n    const lines = LinearComponentExtracter.getLines(geom)\n    for (let i = lines.iterator(); i.hasNext(); ) {\n      const line = i.next()\n      const pts = line.getCoordinates()\n      this.addLine(pts)\n    }\n  }\n  addLine(pts) {\n    for (let i = 1; i < pts.length; i++) {\n      const seg = new LineSegment(pts[i - 1], pts[i])\n      const min = Math.min(seg.p0.y, seg.p1.y)\n      const max = Math.max(seg.p0.y, seg.p1.y)\n      this._index.insert(min, max, seg)\n    }\n  }\n  query() {\n    if (arguments.length === 2) {\n      const min = arguments[0], max = arguments[1]\n      if (this._isEmpty) return new ArrayList()\n      const visitor = new ArrayListVisitor()\n      this._index.query(min, max, visitor)\n      return visitor.getItems()\n    } else if (arguments.length === 3) {\n      const min = arguments[0], max = arguments[1], visitor = arguments[2]\n      if (this._isEmpty) return null\n      this._index.query(min, max, visitor)\n    }\n  }\n}\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry\n","import Location from '../geom/Location.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequence from '../geom/CoordinateSequence.js'\nimport RobustLineIntersector from './RobustLineIntersector.js'\nimport RayCrossingCounter from './RayCrossingCounter.js'\nexport default class PointLocation {\n  static isOnLine() {\n    if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n      const p = arguments[0], line = arguments[1]\n      const lineIntersector = new RobustLineIntersector()\n      const p0 = new Coordinate()\n      const p1 = new Coordinate()\n      const n = line.size()\n      for (let i = 1; i < n; i++) {\n        line.getCoordinate(i - 1, p0)\n        line.getCoordinate(i, p1)\n        lineIntersector.computeIntersection(p, p0, p1)\n        if (lineIntersector.hasIntersection()) \n          return true\n        \n      }\n      return false\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n      const p = arguments[0], line = arguments[1]\n      const lineIntersector = new RobustLineIntersector()\n      for (let i = 1; i < line.length; i++) {\n        const p0 = line[i - 1]\n        const p1 = line[i]\n        lineIntersector.computeIntersection(p, p0, p1)\n        if (lineIntersector.hasIntersection()) \n          return true\n        \n      }\n      return false\n    }\n  }\n  static locateInRing(p, ring) {\n    return RayCrossingCounter.locatePointInRing(p, ring)\n  }\n  static isInRing(p, ring) {\n    return PointLocation.locateInRing(p, ring) !== Location.EXTERIOR\n  }\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default class Iterator {\n  /**\n     * Returns true if the iteration has more elements.\n     * @return {boolean}\n     */\n  hasNext() {}\n\n  /**\n     * Returns the next element in the iteration.\n     * @return {Object}\n     */\n  next() {}\n\n  /**\n     * Removes from the underlying collection the last element returned by the\n     * iterator (optional operation).\n     */\n  remove() {}\n}\n","import Iterator from '../../../../java/util/Iterator.js'\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException.js'\nimport GeometryCollection from './GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nexport default class GeometryCollectionIterator {\n  constructor() {\n    GeometryCollectionIterator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parent = null\n    this._atStart = null\n    this._max = null\n    this._index = null\n    this._subcollectionIterator = null\n    const parent = arguments[0]\n    this._parent = parent\n    this._atStart = true\n    this._index = 0\n    this._max = parent.getNumGeometries()\n  }\n  static isAtomic(geom) {\n    return !(geom instanceof GeometryCollection)\n  }\n  next() {\n    if (this._atStart) {\n      this._atStart = false\n      if (GeometryCollectionIterator.isAtomic(this._parent)) this._index++\n      return this._parent\n    }\n    if (this._subcollectionIterator !== null) \n      if (this._subcollectionIterator.hasNext()) \n        return this._subcollectionIterator.next()\n      else \n        this._subcollectionIterator = null\n      \n    \n    if (this._index >= this._max) \n      throw new NoSuchElementException()\n    \n    const obj = this._parent.getGeometryN(this._index++)\n    if (obj instanceof GeometryCollection) {\n      this._subcollectionIterator = new GeometryCollectionIterator(obj)\n      return this._subcollectionIterator.next()\n    }\n    return obj\n  }\n  remove() {\n    throw new UnsupportedOperationException(this.getClass().getName())\n  }\n  hasNext() {\n    if (this._atStart) \n      return true\n    \n    if (this._subcollectionIterator !== null) {\n      if (this._subcollectionIterator.hasNext()) \n        return true\n      \n      this._subcollectionIterator = null\n    }\n    if (this._index >= this._max) \n      return false\n    \n    return true\n  }\n  get interfaces_() {\n    return [Iterator]\n  }\n}\n","import Location from '../../geom/Location.js'\nimport Polygon from '../../geom/Polygon.js'\nimport PointLocation from '../PointLocation.js'\nimport PointOnGeometryLocator from './PointOnGeometryLocator.js'\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nexport default class SimplePointInAreaLocator {\n  constructor() {\n    SimplePointInAreaLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    const geom = arguments[0]\n    this._geom = geom\n  }\n  static locatePointInPolygon(p, poly) {\n    if (poly.isEmpty()) return Location.EXTERIOR\n    const shell = poly.getExteriorRing()\n    const shellLoc = SimplePointInAreaLocator.locatePointInRing(p, shell)\n    if (shellLoc !== Location.INTERIOR) return shellLoc\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      const hole = poly.getInteriorRingN(i)\n      const holeLoc = SimplePointInAreaLocator.locatePointInRing(p, hole)\n      if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY\n      if (holeLoc === Location.INTERIOR) return Location.EXTERIOR\n    }\n    return Location.INTERIOR\n  }\n  static locatePointInRing(p, ring) {\n    if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return PointLocation.locateInRing(p, ring.getCoordinates())\n  }\n  static containsPointInPolygon(p, poly) {\n    return Location.EXTERIOR !== SimplePointInAreaLocator.locatePointInPolygon(p, poly)\n  }\n  static locateInGeometry(p, geom) {\n    if (geom instanceof Polygon) \n      return SimplePointInAreaLocator.locatePointInPolygon(p, geom)\n    \n    if (geom instanceof GeometryCollection) {\n      const geomi = new GeometryCollectionIterator(geom)\n      while (geomi.hasNext()) {\n        const g2 = geomi.next()\n        if (g2 !== geom) {\n          const loc = SimplePointInAreaLocator.locateInGeometry(p, g2)\n          if (loc !== Location.EXTERIOR) return loc\n        }\n      }\n    }\n    return Location.EXTERIOR\n  }\n  static isContained(p, geom) {\n    return Location.EXTERIOR !== SimplePointInAreaLocator.locate(p, geom)\n  }\n  static locate(p, geom) {\n    if (geom.isEmpty()) return Location.EXTERIOR\n    if (!geom.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return SimplePointInAreaLocator.locateInGeometry(p, geom)\n  }\n  locate(p) {\n    return SimplePointInAreaLocator.locate(p, this._geom)\n  }\n  get interfaces_() {\n    return [PointOnGeometryLocator]\n  }\n}\n","export default class SimilarityMeasure {\n  measure(g1, g2) {}\n}\n","import SimilarityMeasure from './SimilarityMeasure.js'\nexport default class AreaSimilarityMeasure {\n  measure(g1, g2) {\n    const areaInt = g1.intersection(g2).getArea()\n    const areaUnion = g1.union(g2).getArea()\n    return areaInt / areaUnion\n  }\n  get interfaces_() {\n    return [SimilarityMeasure]\n  }\n}\n","import SimilarityMeasure from './SimilarityMeasure.js'\nimport Envelope from '../../geom/Envelope.js'\nimport DiscreteHausdorffDistance from '../distance/DiscreteHausdorffDistance.js'\nexport default class HausdorffSimilarityMeasure {\n  static diagonalSize(env) {\n    if (env.isNull()) return 0.0\n    const width = env.getWidth()\n    const hgt = env.getHeight()\n    return Math.sqrt(width * width + hgt * hgt)\n  }\n  measure(g1, g2) {\n    const distance = DiscreteHausdorffDistance.distance(g1, g2, HausdorffSimilarityMeasure.DENSIFY_FRACTION)\n    const env = new Envelope(g1.getEnvelopeInternal())\n    env.expandToInclude(g2.getEnvelopeInternal())\n    const envSize = HausdorffSimilarityMeasure.diagonalSize(env)\n    const measure = 1 - distance / envSize\n    return measure\n  }\n  get interfaces_() {\n    return [SimilarityMeasure]\n  }\n}\nHausdorffSimilarityMeasure.DENSIFY_FRACTION = 0.25\n","export default class SimilarityMeasureCombiner {\n  static combine(measure1, measure2) {\n    return Math.min(measure1, measure2)\n  }\n}\n","import LineString from '../geom/LineString.js'\nimport Geometry from '../geom/Geometry.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Point from '../geom/Point.js'\nimport Polygon from '../geom/Polygon.js'\nimport Orientation from './Orientation.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nexport default class Centroid {\n  constructor() {\n    Centroid.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._areaBasePt = null\n    this._triangleCent3 = new Coordinate()\n    this._areasum2 = 0\n    this._cg3 = new Coordinate()\n    this._lineCentSum = new Coordinate()\n    this._totalLength = 0.0\n    this._ptCount = 0\n    this._ptCentSum = new Coordinate()\n    const geom = arguments[0]\n    this._areaBasePt = null\n    this.add(geom)\n  }\n  static area2(p1, p2, p3) {\n    return (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y)\n  }\n  static centroid3(p1, p2, p3, c) {\n    c.x = p1.x + p2.x + p3.x\n    c.y = p1.y + p2.y + p3.y\n    return null\n  }\n  static getCentroid(geom) {\n    const cent = new Centroid(geom)\n    return cent.getCentroid()\n  }\n  setAreaBasePoint(basePt) {\n    this._areaBasePt = basePt\n  }\n  addPoint(pt) {\n    this._ptCount += 1\n    this._ptCentSum.x += pt.x\n    this._ptCentSum.y += pt.y\n  }\n  addLineSegments(pts) {\n    let lineLen = 0.0\n    for (let i = 0; i < pts.length - 1; i++) {\n      const segmentLen = pts[i].distance(pts[i + 1])\n      if (segmentLen === 0.0) continue\n      lineLen += segmentLen\n      const midx = (pts[i].x + pts[i + 1].x) / 2\n      this._lineCentSum.x += segmentLen * midx\n      const midy = (pts[i].y + pts[i + 1].y) / 2\n      this._lineCentSum.y += segmentLen * midy\n    }\n    this._totalLength += lineLen\n    if (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0])\n  }\n  addHole(pts) {\n    const isPositiveArea = Orientation.isCCW(pts)\n    for (let i = 0; i < pts.length - 1; i++) \n      this.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea)\n    \n    this.addLineSegments(pts)\n  }\n  getCentroid() {\n    const cent = new Coordinate()\n    if (Math.abs(this._areasum2) > 0.0) {\n      cent.x = this._cg3.x / 3 / this._areasum2\n      cent.y = this._cg3.y / 3 / this._areasum2\n    } else if (this._totalLength > 0.0) {\n      cent.x = this._lineCentSum.x / this._totalLength\n      cent.y = this._lineCentSum.y / this._totalLength\n    } else if (this._ptCount > 0) {\n      cent.x = this._ptCentSum.x / this._ptCount\n      cent.y = this._ptCentSum.y / this._ptCount\n    } else {\n      return null\n    }\n    return cent\n  }\n  addShell(pts) {\n    if (pts.length > 0) this.setAreaBasePoint(pts[0])\n    const isPositiveArea = !Orientation.isCCW(pts)\n    for (let i = 0; i < pts.length - 1; i++) \n      this.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea)\n    \n    this.addLineSegments(pts)\n  }\n  addTriangle(p0, p1, p2, isPositiveArea) {\n    const sign = isPositiveArea ? 1.0 : -1.0\n    Centroid.centroid3(p0, p1, p2, this._triangleCent3)\n    const area2 = Centroid.area2(p0, p1, p2)\n    this._cg3.x += sign * area2 * this._triangleCent3.x\n    this._cg3.y += sign * area2 * this._triangleCent3.y\n    this._areasum2 += sign * area2\n  }\n  add() {\n    if (arguments[0] instanceof Polygon) {\n      const poly = arguments[0]\n      this.addShell(poly.getExteriorRing().getCoordinates())\n      for (let i = 0; i < poly.getNumInteriorRing(); i++) \n        this.addHole(poly.getInteriorRingN(i).getCoordinates())\n      \n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (geom.isEmpty()) return null\n      if (geom instanceof Point) {\n        this.addPoint(geom.getCoordinate())\n      } else if (geom instanceof LineString) {\n        this.addLineSegments(geom.getCoordinates())\n      } else if (geom instanceof Polygon) {\n        const poly = geom\n        this.add(poly)\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) \n          this.add(gc.getGeometryN(i))\n        \n      }\n    }\n  }\n}\n","import Exception from '../lang/Exception.js'\n\nexport default class EmptyStackException extends Exception {\n  constructor(message) {\n    super(message)\n    this.name = Object.keys({ EmptyStackException })[0]\n  }\n}\n","import EmptyStackException from './EmptyStackException.js'\nimport IndexOutOfBoundsException from '../lang/IndexOutOfBoundsException.js'\nimport List from './List.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n */\nexport default class Stack extends List {\n  constructor() {\n    super()\n    this.array = []\n  }\n\n  add(e) {\n    this.array.push(e)\n    return true\n  }\n\n  get(index) {\n    if (index < 0 || index >= this.size())\n      throw new IndexOutOfBoundsException()\n    return this.array[index]\n  }\n\n  /**\n   * Pushes an item onto the top of this stack.\n   * @param {Object} e\n   * @return {Object}\n   */\n  push(e) {\n    this.array.push(e)\n    return e\n  }\n\n  /**\n   * Removes the object at the top of this stack and returns that object as the value of this function.\n   * @return {Object}\n   */\n  pop() {\n    if (this.array.length === 0)\n      throw new EmptyStackException()\n    return this.array.pop()\n  }\n\n  /**\n   * Looks at the object at the top of this stack without removing it from the\n   * stack.\n   * @return {Object}\n   */\n  peek() {\n    if (this.array.length === 0)\n      throw new EmptyStackException()\n    return this.array[this.array.length - 1]\n  }\n\n  /**\n   * Tests if this stack is empty.\n   * @return {boolean} true if and only if this stack contains no items; false\n   *         otherwise.\n   */\n  empty() {\n    return this.array.length === 0\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isEmpty() {\n    return this.empty()\n  }\n\n  /**\n   * Returns the 1-based position where an object is on this stack. If the object\n   * o occurs as an item in this stack, this method returns the distance from the\n   * top of the stack of the occurrence nearest the top of the stack; the topmost\n   * item on the stack is considered to be at distance 1. The equals method is\n   * used to compare o to the items in this stack.\n   *\n   * NOTE: does not currently actually use equals. (=== is used)\n   *\n   * @param {Object} o\n   * @return {number} the 1-based position from the top of the stack where the\n   *         object is located; the return value -1 indicates that the object is\n   *         not on the stack.\n   */\n  search(o) {\n    return this.array.indexOf(o)\n  }\n\n  /**\n   * @return {number}\n   */\n  size() {\n    return this.array.length\n  }\n\n  /**\n   * @return {Array}\n   */\n  toArray() {\n    return this.array.slice()\n  }\n}\n","import HashSet from '../../../../java/util/HashSet.js'\nimport CoordinateFilter from '../geom/CoordinateFilter.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class UniqueCoordinateArrayFilter {\n  constructor() {\n    UniqueCoordinateArrayFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coordSet = new HashSet()\n    this._list = new ArrayList()\n  }\n  static filterCoordinates(coords) {\n    const filter = new UniqueCoordinateArrayFilter()\n    for (let i = 0; i < coords.length; i++) \n      filter.filter(coords[i])\n    \n    return filter.getCoordinates()\n  }\n  filter(coord) {\n    if (this._coordSet.add(coord)) \n      this._list.add(coord)\n    \n  }\n  getCoordinates() {\n    const coordinates = new Array(this._list.size()).fill(null)\n    return this._list.toArray(coordinates)\n  }\n  get interfaces_() {\n    return [CoordinateFilter]\n  }\n}\n","import TreeSet from '../../../../java/util/TreeSet.js'\nimport CoordinateList from '../geom/CoordinateList.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport PointLocation from './PointLocation.js'\nimport Stack from '../../../../java/util/Stack.js'\nimport Orientation from './Orientation.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Comparator from '../../../../java/util/Comparator.js'\nimport UniqueCoordinateArrayFilter from '../util/UniqueCoordinateArrayFilter.js'\nimport Assert from '../util/Assert.js'\nexport default class ConvexHull {\n  constructor() {\n    ConvexHull.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFactory = null\n    this._inputPts = null\n    if (arguments.length === 1) {\n      const geometry = arguments[0]\n      ConvexHull.constructor_.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory())\n    } else if (arguments.length === 2) {\n      const pts = arguments[0], geomFactory = arguments[1]\n      this._inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts)\n      this._geomFactory = geomFactory\n    }\n  }\n  static extractCoordinates(geom) {\n    const filter = new UniqueCoordinateArrayFilter()\n    geom.apply(filter)\n    return filter.getCoordinates()\n  }\n  preSort(pts) {\n    let t = null\n    for (let i = 1; i < pts.length; i++) \n      if (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n        t = pts[0]\n        pts[0] = pts[i]\n        pts[i] = t\n      }\n    \n    Arrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]))\n    return pts\n  }\n  computeOctRing(inputPts) {\n    const octPts = this.computeOctPts(inputPts)\n    const coordList = new CoordinateList()\n    coordList.add(octPts, false)\n    if (coordList.size() < 3) \n      return null\n    \n    coordList.closeRing()\n    return coordList.toCoordinateArray()\n  }\n  lineOrPolygon(coordinates) {\n    coordinates = this.cleanRing(coordinates)\n    if (coordinates.length === 3) \n      return this._geomFactory.createLineString([coordinates[0], coordinates[1]])\n    \n    const linearRing = this._geomFactory.createLinearRing(coordinates)\n    return this._geomFactory.createPolygon(linearRing)\n  }\n  cleanRing(original) {\n    Assert.equals(original[0], original[original.length - 1])\n    const cleanedRing = new ArrayList()\n    let previousDistinctCoordinate = null\n    for (let i = 0; i <= original.length - 2; i++) {\n      const currentCoordinate = original[i]\n      const nextCoordinate = original[i + 1]\n      if (currentCoordinate.equals(nextCoordinate)) \n        continue\n      \n      if (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) \n        continue\n      \n      cleanedRing.add(currentCoordinate)\n      previousDistinctCoordinate = currentCoordinate\n    }\n    cleanedRing.add(original[original.length - 1])\n    const cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null)\n    return cleanedRing.toArray(cleanedRingCoordinates)\n  }\n  isBetween(c1, c2, c3) {\n    if (Orientation.index(c1, c2, c3) !== 0) \n      return false\n    \n    if (c1.x !== c3.x) {\n      if (c1.x <= c2.x && c2.x <= c3.x) \n        return true\n      \n      if (c3.x <= c2.x && c2.x <= c1.x) \n        return true\n      \n    }\n    if (c1.y !== c3.y) {\n      if (c1.y <= c2.y && c2.y <= c3.y) \n        return true\n      \n      if (c3.y <= c2.y && c2.y <= c1.y) \n        return true\n      \n    }\n    return false\n  }\n  reduce(inputPts) {\n    const polyPts = this.computeOctRing(inputPts)\n    if (polyPts === null) return inputPts\n    const reducedSet = new TreeSet()\n    for (let i = 0; i < polyPts.length; i++) \n      reducedSet.add(polyPts[i])\n    \n    for (let i = 0; i < inputPts.length; i++) \n      if (!PointLocation.isInRing(inputPts[i], polyPts)) \n        reducedSet.add(inputPts[i])\n      \n    \n    const reducedPts = CoordinateArrays.toCoordinateArray(reducedSet)\n    if (reducedPts.length < 3) return this.padArray3(reducedPts)\n    return reducedPts\n  }\n  getConvexHull() {\n    if (this._inputPts.length === 0) \n      return this._geomFactory.createGeometryCollection()\n    \n    if (this._inputPts.length === 1) \n      return this._geomFactory.createPoint(this._inputPts[0])\n    \n    if (this._inputPts.length === 2) \n      return this._geomFactory.createLineString(this._inputPts)\n    \n    let reducedPts = this._inputPts\n    if (this._inputPts.length > 50) \n      reducedPts = this.reduce(this._inputPts)\n    \n    const sortedPts = this.preSort(reducedPts)\n    const cHS = this.grahamScan(sortedPts)\n    const cH = this.toCoordinateArray(cHS)\n    return this.lineOrPolygon(cH)\n  }\n  padArray3(pts) {\n    const pad = new Array(3).fill(null)\n    for (let i = 0; i < pad.length; i++) \n      if (i < pts.length) \n        pad[i] = pts[i]\n      else pad[i] = pts[0]\n    \n    return pad\n  }\n  computeOctPts(inputPts) {\n    const pts = new Array(8).fill(null)\n    for (let j = 0; j < pts.length; j++) \n      pts[j] = inputPts[0]\n    \n    for (let i = 1; i < inputPts.length; i++) {\n      if (inputPts[i].x < pts[0].x) \n        pts[0] = inputPts[i]\n      \n      if (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) \n        pts[1] = inputPts[i]\n      \n      if (inputPts[i].y > pts[2].y) \n        pts[2] = inputPts[i]\n      \n      if (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) \n        pts[3] = inputPts[i]\n      \n      if (inputPts[i].x > pts[4].x) \n        pts[4] = inputPts[i]\n      \n      if (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) \n        pts[5] = inputPts[i]\n      \n      if (inputPts[i].y < pts[6].y) \n        pts[6] = inputPts[i]\n      \n      if (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) \n        pts[7] = inputPts[i]\n      \n    }\n    return pts\n  }\n  toCoordinateArray(stack) {\n    const coordinates = new Array(stack.size()).fill(null)\n    for (let i = 0; i < stack.size(); i++) {\n      const coordinate = stack.get(i)\n      coordinates[i] = coordinate\n    }\n    return coordinates\n  }\n  grahamScan(c) {\n    let p = null\n    const ps = new Stack()\n    ps.push(c[0])\n    ps.push(c[1])\n    ps.push(c[2])\n    for (let i = 3; i < c.length; i++) {\n      p = ps.pop()\n      while (!ps.empty() && Orientation.index(ps.peek(), p, c[i]) > 0) \n        p = ps.pop()\n      \n      ps.push(p)\n      ps.push(c[i])\n    }\n    ps.push(c[0])\n    return ps\n  }\n}\nclass RadialComparator {\n  constructor() {\n    RadialComparator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._origin = null\n    const origin = arguments[0]\n    this._origin = origin\n  }\n  static polarCompare(o, p, q) {\n    const dxp = p.x - o.x\n    const dyp = p.y - o.y\n    const dxq = q.x - o.x\n    const dyq = q.y - o.y\n    const orient = Orientation.index(o, p, q)\n    if (orient === Orientation.COUNTERCLOCKWISE) return 1\n    if (orient === Orientation.CLOCKWISE) return -1\n    const op = dxp * dxp + dyp * dyp\n    const oq = dxq * dxq + dyq * dyq\n    if (op < oq) \n      return -1\n    \n    if (op > oq) \n      return 1\n    \n    return 0\n  }\n  compare(o1, o2) {\n    const p1 = o1\n    const p2 = o2\n    return RadialComparator.polarCompare(this._origin, p1, p2)\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nConvexHull.RadialComparator = RadialComparator\n","import Coordinate from '../geom/Coordinate.js'\nimport Polygon from '../geom/Polygon.js'\nimport Double from '../../../../java/lang/Double.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Comparator from '../../../../java/util/Comparator.js'\nimport Assert from '../util/Assert.js'\nexport default class InteriorPointArea {\n  constructor() {\n    InteriorPointArea.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._interiorPoint = null\n    this._maxWidth = -1\n    const g = arguments[0]\n    this.process(g)\n  }\n  static getInteriorPoint(geom) {\n    const intPt = new InteriorPointArea(geom)\n    return intPt.getInteriorPoint()\n  }\n  static avg(a, b) {\n    return (a + b) / 2.0\n  }\n  getInteriorPoint() {\n    return this._interiorPoint\n  }\n  process(geom) {\n    if (geom.isEmpty()) return null\n    if (geom instanceof Polygon) {\n      this.processPolygon(geom)\n    } else if (geom instanceof GeometryCollection) {\n      const gc = geom\n      for (let i = 0; i < gc.getNumGeometries(); i++) \n        this.process(gc.getGeometryN(i))\n      \n    }\n  }\n  processPolygon(polygon) {\n    const intPtPoly = new InteriorPointPolygon(polygon)\n    intPtPoly.process()\n    const width = intPtPoly.getWidth()\n    if (width > this._maxWidth) {\n      this._maxWidth = width\n      this._interiorPoint = intPtPoly.getInteriorPoint()\n    }\n  }\n}\nclass InteriorPointPolygon {\n  constructor() {\n    InteriorPointPolygon.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._polygon = null\n    this._interiorPointY = null\n    this._interiorSectionWidth = 0.0\n    this._interiorPoint = null\n    const polygon = arguments[0]\n    this._polygon = polygon\n    this._interiorPointY = ScanLineYOrdinateFinder.getScanLineY(polygon)\n  }\n  static isEdgeCrossingCounted(p0, p1, scanY) {\n    const y0 = p0.getY()\n    const y1 = p1.getY()\n    if (y0 === y1) return false\n    if (y0 === scanY && y1 < scanY) return false\n    if (y1 === scanY && y0 < scanY) return false\n    return true\n  }\n  static intersectsHorizontalLine() {\n    if (arguments.length === 2) {\n      const env = arguments[0], y = arguments[1]\n      if (y < env.getMinY()) return false\n      if (y > env.getMaxY()) return false\n      return true\n    } else if (arguments.length === 3) {\n      const p0 = arguments[0], p1 = arguments[1], y = arguments[2]\n      if (p0.getY() > y && p1.getY() > y) return false\n      if (p0.getY() < y && p1.getY() < y) return false\n      return true\n    }\n  }\n  static intersection(p0, p1, Y) {\n    const x0 = p0.getX()\n    const x1 = p1.getX()\n    if (x0 === x1) return x0\n    const segDX = x1 - x0\n    const segDY = p1.getY() - p0.getY()\n    const m = segDY / segDX\n    const x = x0 + (Y - p0.getY()) / m\n    return x\n  }\n  findBestMidpoint(crossings) {\n    if (crossings.size() === 0) return null\n    Assert.isTrue(0 === crossings.size() % 2, 'Interior Point robustness failure: odd number of scanline crossings')\n    crossings.sort(new DoubleComparator())\n    for (let i = 0; i < crossings.size(); i += 2) {\n      const x1 = crossings.get(i)\n      const x2 = crossings.get(i + 1)\n      const width = x2 - x1\n      if (width > this._interiorSectionWidth) {\n        this._interiorSectionWidth = width\n        const interiorPointX = InteriorPointArea.avg(x1, x2)\n        this._interiorPoint = new Coordinate(interiorPointX, this._interiorPointY)\n      }\n    }\n  }\n  process() {\n    if (this._polygon.isEmpty()) return null\n    this._interiorPoint = new Coordinate(this._polygon.getCoordinate())\n    const crossings = new ArrayList()\n    this.scanRing(this._polygon.getExteriorRing(), crossings)\n    for (let i = 0; i < this._polygon.getNumInteriorRing(); i++) \n      this.scanRing(this._polygon.getInteriorRingN(i), crossings)\n    \n    this.findBestMidpoint(crossings)\n  }\n  scanRing(ring, crossings) {\n    if (!InteriorPointPolygon.intersectsHorizontalLine(ring.getEnvelopeInternal(), this._interiorPointY)) return null\n    const seq = ring.getCoordinateSequence()\n    for (let i = 1; i < seq.size(); i++) {\n      const ptPrev = seq.getCoordinate(i - 1)\n      const pt = seq.getCoordinate(i)\n      this.addEdgeCrossing(ptPrev, pt, this._interiorPointY, crossings)\n    }\n  }\n  getWidth() {\n    return this._interiorSectionWidth\n  }\n  getInteriorPoint() {\n    return this._interiorPoint\n  }\n  addEdgeCrossing(p0, p1, scanY, crossings) {\n    if (!InteriorPointPolygon.intersectsHorizontalLine(p0, p1, scanY)) return null\n    if (!InteriorPointPolygon.isEdgeCrossingCounted(p0, p1, scanY)) return null\n    const xInt = InteriorPointPolygon.intersection(p0, p1, scanY)\n    crossings.add(xInt)\n  }\n}\nclass DoubleComparator {\n  compare(v1, v2) {\n    return v1 < v2 ? -1 : v1 > v2 ? +1 : 0\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nInteriorPointPolygon.DoubleComparator = DoubleComparator\nclass ScanLineYOrdinateFinder {\n  constructor() {\n    ScanLineYOrdinateFinder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._poly = null\n    this._centreY = null\n    this._hiY = Double.MAX_VALUE\n    this._loY = -Double.MAX_VALUE\n    const poly = arguments[0]\n    this._poly = poly\n    this._hiY = poly.getEnvelopeInternal().getMaxY()\n    this._loY = poly.getEnvelopeInternal().getMinY()\n    this._centreY = InteriorPointArea.avg(this._loY, this._hiY)\n  }\n  static getScanLineY(poly) {\n    const finder = new ScanLineYOrdinateFinder(poly)\n    return finder.getScanLineY()\n  }\n  updateInterval(y) {\n    if (y <= this._centreY) {\n      if (y > this._loY) this._loY = y\n    } else if (y > this._centreY) {\n      if (y < this._hiY) \n        this._hiY = y\n      \n    }\n  }\n  getScanLineY() {\n    this.process(this._poly.getExteriorRing())\n    for (let i = 0; i < this._poly.getNumInteriorRing(); i++) \n      this.process(this._poly.getInteriorRingN(i))\n    \n    const scanLineY = InteriorPointArea.avg(this._hiY, this._loY)\n    return scanLineY\n  }\n  process(line) {\n    const seq = line.getCoordinateSequence()\n    for (let i = 0; i < seq.size(); i++) {\n      const y = seq.getY(i)\n      this.updateInterval(y)\n    }\n  }\n}\nInteriorPointArea.InteriorPointPolygon = InteriorPointPolygon\nInteriorPointArea.ScanLineYOrdinateFinder = ScanLineYOrdinateFinder\n","import LineString from '../geom/LineString.js'\nimport Geometry from '../geom/Geometry.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Centroid from './Centroid.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nexport default class InteriorPointLine {\n  constructor() {\n    InteriorPointLine.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._centroid = null\n    this._minDistance = Double.MAX_VALUE\n    this._interiorPoint = null\n    const g = arguments[0]\n    if (g.isEmpty()) {\n      this._centroid = null\n    } else {\n      this._centroid = Centroid.getCentroid(g)\n      g.getPrecisionModel().makePrecise(this._centroid)\n    }\n    this.addInterior(g)\n    if (this._interiorPoint === null) this.addEndpoints(g)\n  }\n  static getInteriorPoint(geom) {\n    const intPt = new InteriorPointLine(geom)\n    return intPt.getInteriorPoint()\n  }\n  addEndpoints() {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (geom instanceof LineString) {\n        this.addEndpoints(geom.getCoordinates())\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) \n          this.addEndpoints(gc.getGeometryN(i))\n        \n      }\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      this.add(pts[0])\n      this.add(pts[pts.length - 1])\n    }\n  }\n  getInteriorPoint() {\n    return this._interiorPoint\n  }\n  addInterior() {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (geom instanceof LineString) {\n        this.addInterior(geom.getCoordinates())\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) \n          this.addInterior(gc.getGeometryN(i))\n        \n      }\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      for (let i = 1; i < pts.length - 1; i++) \n        this.add(pts[i])\n      \n    }\n  }\n  add(point) {\n    const dist = point.distance(this._centroid)\n    if (dist < this._minDistance) {\n      this._interiorPoint = new Coordinate(point)\n      this._minDistance = dist\n    }\n  }\n}\n","import Geometry from '../geom/Geometry.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Point from '../geom/Point.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Centroid from './Centroid.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nexport default class InteriorPointPoint {\n  constructor() {\n    InteriorPointPoint.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._centroid = null\n    this._minDistance = Double.MAX_VALUE\n    this._interiorPoint = null\n    const g = arguments[0]\n    this._centroid = Centroid.getCentroid(g)\n    this.add(g)\n  }\n  static getInteriorPoint(geom) {\n    const intPt = new InteriorPointPoint(geom)\n    return intPt.getInteriorPoint()\n  }\n  getInteriorPoint() {\n    return this._interiorPoint\n  }\n  add() {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (geom instanceof Point) {\n        this.add(geom.getCoordinate())\n      } else if (geom instanceof GeometryCollection) {\n        const gc = geom\n        for (let i = 0; i < gc.getNumGeometries(); i++) \n          this.add(gc.getGeometryN(i))\n        \n      }\n    } else if (arguments[0] instanceof Coordinate) {\n      const point = arguments[0]\n      const dist = point.distance(this._centroid)\n      if (dist < this._minDistance) {\n        this._interiorPoint = new Coordinate(point)\n        this._minDistance = dist\n      }\n    }\n  }\n}\n","export default class BoundaryNodeRule {\n  isInBoundary(boundaryCount) {}\n}\nclass Mod2BoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount % 2 === 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass EndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount > 0\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass MultiValentEndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount > 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nclass MonoValentEndPointBoundaryNodeRule {\n  isInBoundary(boundaryCount) {\n    return boundaryCount === 1\n  }\n  get interfaces_() {\n    return [BoundaryNodeRule]\n  }\n}\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule()\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule()\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule()\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule()\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE\n","import Location from '../geom/Location.js'\nimport LineString from '../geom/LineString.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Point from '../geom/Point.js'\nimport Polygon from '../geom/Polygon.js'\nimport PointLocation from './PointLocation.js'\nimport BoundaryNodeRule from './BoundaryNodeRule.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nexport default class PointLocator {\n  constructor() {\n    PointLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE\n    this._isIn = null\n    this._numBoundaries = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const boundaryRule = arguments[0]\n      if (boundaryRule === null) throw new IllegalArgumentException('Rule must be non-null')\n      this._boundaryRule = boundaryRule\n    }\n  }\n  locateInPolygonRing(p, ring) {\n    if (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    return PointLocation.locateInRing(p, ring.getCoordinates())\n  }\n  intersects(p, geom) {\n    return this.locate(p, geom) !== Location.EXTERIOR\n  }\n  updateLocationInfo(loc) {\n    if (loc === Location.INTERIOR) this._isIn = true\n    if (loc === Location.BOUNDARY) this._numBoundaries++\n  }\n  computeLocation(p, geom) {\n    if (geom instanceof Point) \n      this.updateLocationInfo(this.locateOnPoint(p, geom))\n    \n    if (geom instanceof LineString) {\n      this.updateLocationInfo(this.locateOnLineString(p, geom))\n    } else if (geom instanceof Polygon) {\n      this.updateLocationInfo(this.locateInPolygon(p, geom))\n    } else if (geom instanceof MultiLineString) {\n      const ml = geom\n      for (let i = 0; i < ml.getNumGeometries(); i++) {\n        const l = ml.getGeometryN(i)\n        this.updateLocationInfo(this.locateOnLineString(p, l))\n      }\n    } else if (geom instanceof MultiPolygon) {\n      const mpoly = geom\n      for (let i = 0; i < mpoly.getNumGeometries(); i++) {\n        const poly = mpoly.getGeometryN(i)\n        this.updateLocationInfo(this.locateInPolygon(p, poly))\n      }\n    } else if (geom instanceof GeometryCollection) {\n      const geomi = new GeometryCollectionIterator(geom)\n      while (geomi.hasNext()) {\n        const g2 = geomi.next()\n        if (g2 !== geom) this.computeLocation(p, g2)\n      }\n    }\n  }\n  locateOnPoint(p, pt) {\n    const ptCoord = pt.getCoordinate()\n    if (ptCoord.equals2D(p)) return Location.INTERIOR\n    return Location.EXTERIOR\n  }\n  locateOnLineString(p, l) {\n    if (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR\n    const seq = l.getCoordinateSequence()\n    if (!l.isClosed()) \n      if (p.equals(seq.getCoordinate(0)) || p.equals(seq.getCoordinate(seq.size() - 1))) \n        return Location.BOUNDARY\n      \n    \n    if (PointLocation.isOnLine(p, seq)) \n      return Location.INTERIOR\n    \n    return Location.EXTERIOR\n  }\n  locateInPolygon(p, poly) {\n    if (poly.isEmpty()) return Location.EXTERIOR\n    const shell = poly.getExteriorRing()\n    const shellLoc = this.locateInPolygonRing(p, shell)\n    if (shellLoc === Location.EXTERIOR) return Location.EXTERIOR\n    if (shellLoc === Location.BOUNDARY) return Location.BOUNDARY\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      const hole = poly.getInteriorRingN(i)\n      const holeLoc = this.locateInPolygonRing(p, hole)\n      if (holeLoc === Location.INTERIOR) return Location.EXTERIOR\n      if (holeLoc === Location.BOUNDARY) return Location.BOUNDARY\n    }\n    return Location.INTERIOR\n  }\n  locate(p, geom) {\n    if (geom.isEmpty()) return Location.EXTERIOR\n    if (geom instanceof LineString) \n      return this.locateOnLineString(p, geom)\n    else if (geom instanceof Polygon) \n      return this.locateInPolygon(p, geom)\n    \n    this._isIn = false\n    this._numBoundaries = 0\n    this.computeLocation(p, geom)\n    if (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY\n    if (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR\n    return Location.EXTERIOR\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport Angle from './Angle.js'\nimport Assert from '../util/Assert.js'\nimport Triangle from '../geom/Triangle.js'\nexport default class MinimumBoundingCircle {\n  constructor() {\n    MinimumBoundingCircle.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._input = null\n    this._extremalPts = null\n    this._centre = null\n    this._radius = 0.0\n    const geom = arguments[0]\n    this._input = geom\n  }\n  static farthestPoints(pts) {\n    const dist01 = pts[0].distance(pts[1])\n    const dist12 = pts[1].distance(pts[2])\n    const dist20 = pts[2].distance(pts[0])\n    if (dist01 >= dist12 && dist01 >= dist20) \n      return [pts[0], pts[1]]\n    \n    if (dist12 >= dist01 && dist12 >= dist20) \n      return [pts[1], pts[2]]\n    \n    return [pts[2], pts[0]]\n  }\n  static pointWitMinAngleWithX(pts, P) {\n    let minSin = Double.MAX_VALUE\n    let minAngPt = null\n    for (let i = 0; i < pts.length; i++) {\n      const p = pts[i]\n      if (p === P) continue\n      const dx = p.x - P.x\n      let dy = p.y - P.y\n      if (dy < 0) dy = -dy\n      const len = Math.sqrt(dx * dx + dy * dy)\n      const sin = dy / len\n      if (sin < minSin) {\n        minSin = sin\n        minAngPt = p\n      }\n    }\n    return minAngPt\n  }\n  static lowestPoint(pts) {\n    let min = pts[0]\n    for (let i = 1; i < pts.length; i++) \n      if (pts[i].y < min.y) min = pts[i]\n    \n    return min\n  }\n  static pointWithMinAngleWithSegment(pts, P, Q) {\n    let minAng = Double.MAX_VALUE\n    let minAngPt = null\n    for (let i = 0; i < pts.length; i++) {\n      const p = pts[i]\n      if (p === P) continue\n      if (p === Q) continue\n      const ang = Angle.angleBetween(P, p, Q)\n      if (ang < minAng) {\n        minAng = ang\n        minAngPt = p\n      }\n    }\n    return minAngPt\n  }\n  getRadius() {\n    this.compute()\n    return this._radius\n  }\n  getDiameter() {\n    this.compute()\n    switch (this._extremalPts.length) {\n    case 0:\n      return this._input.getFactory().createLineString()\n    case 1:\n      return this._input.getFactory().createPoint(this._centre)\n    }\n    const p0 = this._extremalPts[0]\n    const p1 = this._extremalPts[1]\n    return this._input.getFactory().createLineString([p0, p1])\n  }\n  getExtremalPoints() {\n    this.compute()\n    return this._extremalPts\n  }\n  computeCirclePoints() {\n    if (this._input.isEmpty()) {\n      this._extremalPts = new Array(0).fill(null)\n      return null\n    }\n    if (this._input.getNumPoints() === 1) {\n      const pts = this._input.getCoordinates()\n      this._extremalPts = [new Coordinate(pts[0])]\n      return null\n    }\n    const convexHull = this._input.convexHull()\n    const hullPts = convexHull.getCoordinates()\n    let pts = hullPts\n    if (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n      pts = new Array(hullPts.length - 1).fill(null)\n      CoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1)\n    }\n    if (pts.length <= 2) {\n      this._extremalPts = CoordinateArrays.copyDeep(pts)\n      return null\n    }\n    let P = MinimumBoundingCircle.lowestPoint(pts)\n    let Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P)\n    for (let i = 0; i < pts.length; i++) {\n      const R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q)\n      if (Angle.isObtuse(P, R, Q)) {\n        this._extremalPts = [new Coordinate(P), new Coordinate(Q)]\n        return null\n      }\n      if (Angle.isObtuse(R, P, Q)) {\n        P = R\n        continue\n      }\n      if (Angle.isObtuse(R, Q, P)) {\n        Q = R\n        continue\n      }\n      this._extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)]\n      return null\n    }\n    Assert.shouldNeverReachHere('Logic failure in Minimum Bounding Circle algorithm!')\n  }\n  compute() {\n    if (this._extremalPts !== null) return null\n    this.computeCirclePoints()\n    this.computeCentre()\n    if (this._centre !== null) this._radius = this._centre.distance(this._extremalPts[0])\n  }\n  getCircle() {\n    this.compute()\n    if (this._centre === null) return this._input.getFactory().createPolygon()\n    const centrePoint = this._input.getFactory().createPoint(this._centre)\n    if (this._radius === 0.0) return centrePoint\n    return centrePoint.buffer(this._radius)\n  }\n  getCentre() {\n    this.compute()\n    return this._centre\n  }\n  getMaximumDiameter() {\n    this.compute()\n    switch (this._extremalPts.length) {\n    case 0:\n      return this._input.getFactory().createLineString()\n    case 1:\n      return this._input.getFactory().createPoint(this._centre)\n    case 2:\n      return this._input.getFactory().createLineString([this._extremalPts[0], this._extremalPts[1]])\n    default:\n      const maxDiameter = MinimumBoundingCircle.farthestPoints(this._extremalPts)\n      return this._input.getFactory().createLineString(maxDiameter)\n    }\n  }\n  computeCentre() {\n    switch (this._extremalPts.length) {\n    case 0:\n      this._centre = null\n      break\n    case 1:\n      this._centre = this._extremalPts[0]\n      break\n    case 2:\n      this._centre = new Coordinate((this._extremalPts[0].x + this._extremalPts[1].x) / 2.0, (this._extremalPts[0].y + this._extremalPts[1].y) / 2.0)\n      break\n    case 3:\n      this._centre = Triangle.circumcentre(this._extremalPts[0], this._extremalPts[1], this._extremalPts[2])\n      break\n    }\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Polygon from '../geom/Polygon.js'\nimport Double from '../../../../java/lang/Double.js'\nimport LineSegment from '../geom/LineSegment.js'\nimport ConvexHull from './ConvexHull.js'\nexport default class MinimumDiameter {\n  constructor() {\n    MinimumDiameter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._isConvex = null\n    this._convexHullPts = null\n    this._minBaseSeg = new LineSegment()\n    this._minWidthPt = null\n    this._minPtIndex = null\n    this._minWidth = 0.0\n    if (arguments.length === 1) {\n      const inputGeom = arguments[0]\n      MinimumDiameter.constructor_.call(this, inputGeom, false)\n    } else if (arguments.length === 2) {\n      const inputGeom = arguments[0], isConvex = arguments[1]\n      this._inputGeom = inputGeom\n      this._isConvex = isConvex\n    }\n  }\n  static nextIndex(pts, index) {\n    index++\n    if (index >= pts.length) index = 0\n    return index\n  }\n  static computeC(a, b, p) {\n    return a * p.y - b * p.x\n  }\n  static getMinimumDiameter(geom) {\n    return new MinimumDiameter(geom).getDiameter()\n  }\n  static getMinimumRectangle(geom) {\n    return new MinimumDiameter(geom).getMinimumRectangle()\n  }\n  static computeSegmentForLine(a, b, c) {\n    let p0 = null\n    let p1 = null\n    if (Math.abs(b) > Math.abs(a)) {\n      p0 = new Coordinate(0.0, c / b)\n      p1 = new Coordinate(1.0, c / b - a / b)\n    } else {\n      p0 = new Coordinate(c / a, 0.0)\n      p1 = new Coordinate(c / a - b / a, 1.0)\n    }\n    return new LineSegment(p0, p1)\n  }\n  getWidthCoordinate() {\n    this.computeMinimumDiameter()\n    return this._minWidthPt\n  }\n  getSupportingSegment() {\n    this.computeMinimumDiameter()\n    return this._inputGeom.getFactory().createLineString([this._minBaseSeg.p0, this._minBaseSeg.p1])\n  }\n  getDiameter() {\n    this.computeMinimumDiameter()\n    if (this._minWidthPt === null) return this._inputGeom.getFactory().createLineString()\n    const basePt = this._minBaseSeg.project(this._minWidthPt)\n    return this._inputGeom.getFactory().createLineString([basePt, this._minWidthPt])\n  }\n  computeWidthConvex(convexGeom) {\n    if (convexGeom instanceof Polygon) this._convexHullPts = convexGeom.getExteriorRing().getCoordinates(); else this._convexHullPts = convexGeom.getCoordinates()\n    if (this._convexHullPts.length === 0) {\n      this._minWidth = 0.0\n      this._minWidthPt = null\n      this._minBaseSeg = null\n    } else if (this._convexHullPts.length === 1) {\n      this._minWidth = 0.0\n      this._minWidthPt = this._convexHullPts[0]\n      this._minBaseSeg.p0 = this._convexHullPts[0]\n      this._minBaseSeg.p1 = this._convexHullPts[0]\n    } else if (this._convexHullPts.length === 2 || this._convexHullPts.length === 3) {\n      this._minWidth = 0.0\n      this._minWidthPt = this._convexHullPts[0]\n      this._minBaseSeg.p0 = this._convexHullPts[0]\n      this._minBaseSeg.p1 = this._convexHullPts[1]\n    } else {\n      this.computeConvexRingMinDiameter(this._convexHullPts)\n    }\n  }\n  computeConvexRingMinDiameter(pts) {\n    this._minWidth = Double.MAX_VALUE\n    let currMaxIndex = 1\n    const seg = new LineSegment()\n    for (let i = 0; i < pts.length - 1; i++) {\n      seg.p0 = pts[i]\n      seg.p1 = pts[i + 1]\n      currMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex)\n    }\n  }\n  computeMinimumDiameter() {\n    if (this._minWidthPt !== null) return null\n    if (this._isConvex) {\n      this.computeWidthConvex(this._inputGeom)\n    } else {\n      const convexGeom = new ConvexHull(this._inputGeom).getConvexHull()\n      this.computeWidthConvex(convexGeom)\n    }\n  }\n  getLength() {\n    this.computeMinimumDiameter()\n    return this._minWidth\n  }\n  findMaxPerpDistance(pts, seg, startIndex) {\n    let maxPerpDistance = seg.distancePerpendicular(pts[startIndex])\n    let nextPerpDistance = maxPerpDistance\n    let maxIndex = startIndex\n    let nextIndex = maxIndex\n    while (nextPerpDistance >= maxPerpDistance) {\n      maxPerpDistance = nextPerpDistance\n      maxIndex = nextIndex\n      nextIndex = MinimumDiameter.nextIndex(pts, maxIndex)\n      nextPerpDistance = seg.distancePerpendicular(pts[nextIndex])\n    }\n    if (maxPerpDistance < this._minWidth) {\n      this._minPtIndex = maxIndex\n      this._minWidth = maxPerpDistance\n      this._minWidthPt = pts[this._minPtIndex]\n      this._minBaseSeg = new LineSegment(seg)\n    }\n    return maxIndex\n  }\n  getMinimumRectangle() {\n    this.computeMinimumDiameter()\n    if (this._minWidth === 0.0) {\n      if (this._minBaseSeg.p0.equals2D(this._minBaseSeg.p1)) \n        return this._inputGeom.getFactory().createPoint(this._minBaseSeg.p0)\n      \n      return this._minBaseSeg.toGeometry(this._inputGeom.getFactory())\n    }\n    const dx = this._minBaseSeg.p1.x - this._minBaseSeg.p0.x\n    const dy = this._minBaseSeg.p1.y - this._minBaseSeg.p0.y\n    let minPara = Double.MAX_VALUE\n    let maxPara = -Double.MAX_VALUE\n    let minPerp = Double.MAX_VALUE\n    let maxPerp = -Double.MAX_VALUE\n    for (let i = 0; i < this._convexHullPts.length; i++) {\n      const paraC = MinimumDiameter.computeC(dx, dy, this._convexHullPts[i])\n      if (paraC > maxPara) maxPara = paraC\n      if (paraC < minPara) minPara = paraC\n      const perpC = MinimumDiameter.computeC(-dy, dx, this._convexHullPts[i])\n      if (perpC > maxPerp) maxPerp = perpC\n      if (perpC < minPerp) minPerp = perpC\n    }\n    const maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp)\n    const minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp)\n    const maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara)\n    const minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara)\n    const p0 = maxParaLine.lineIntersection(maxPerpLine)\n    const p1 = minParaLine.lineIntersection(maxPerpLine)\n    const p2 = minParaLine.lineIntersection(minPerpLine)\n    const p3 = maxParaLine.lineIntersection(minPerpLine)\n    const shell = this._inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0])\n    return this._inputGeom.getFactory().createPolygon(shell)\n  }\n}\n","import LineString from '../geom/LineString.js'\nimport CoordinateList from '../geom/CoordinateList.js'\nimport GeometryTransformer from '../geom/util/GeometryTransformer.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nimport LineSegment from '../geom/LineSegment.js'\nexport default class Densifier {\n  constructor() {\n    Densifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._distanceTolerance = null\n    const inputGeom = arguments[0]\n    this._inputGeom = inputGeom\n  }\n  static densifyPoints(pts, distanceTolerance, precModel) {\n    const seg = new LineSegment()\n    const coordList = new CoordinateList()\n    for (let i = 0; i < pts.length - 1; i++) {\n      seg.p0 = pts[i]\n      seg.p1 = pts[i + 1]\n      coordList.add(seg.p0, false)\n      const len = seg.getLength()\n      const densifiedSegCount = Math.trunc(len / distanceTolerance) + 1\n      if (densifiedSegCount > 1) {\n        const densifiedSegLen = len / densifiedSegCount\n        for (let j = 1; j < densifiedSegCount; j++) {\n          const segFract = j * densifiedSegLen / len\n          const p = seg.pointAlong(segFract)\n          precModel.makePrecise(p)\n          coordList.add(p, false)\n        }\n      }\n    }\n    coordList.add(pts[pts.length - 1], false)\n    return coordList.toCoordinateArray()\n  }\n  static densify(geom, distanceTolerance) {\n    const densifier = new Densifier(geom)\n    densifier.setDistanceTolerance(distanceTolerance)\n    return densifier.getResultGeometry()\n  }\n  getResultGeometry() {\n    return new DensifyTransformer(this._distanceTolerance).transform(this._inputGeom)\n  }\n  setDistanceTolerance(distanceTolerance) {\n    if (distanceTolerance <= 0.0) throw new IllegalArgumentException('Tolerance must be positive')\n    this._distanceTolerance = distanceTolerance\n  }\n}\nclass DensifyTransformer extends GeometryTransformer {\n  constructor() {\n    super()\n    DensifyTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.distanceTolerance = null\n    const distanceTolerance = arguments[0]\n    this.distanceTolerance = distanceTolerance\n  }\n  transformMultiPolygon(geom, parent) {\n    const roughGeom = super.transformMultiPolygon.call(this, geom, parent)\n    return this.createValidArea(roughGeom)\n  }\n  transformPolygon(geom, parent) {\n    const roughGeom = super.transformPolygon.call(this, geom, parent)\n    if (parent instanceof MultiPolygon) \n      return roughGeom\n    \n    return this.createValidArea(roughGeom)\n  }\n  transformCoordinates(coords, parent) {\n    const inputPts = coords.toCoordinateArray()\n    let newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel())\n    if (parent instanceof LineString && newPts.length === 1) \n      newPts = new Array(0).fill(null)\n    \n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n  createValidArea(roughAreaGeom) {\n    return roughAreaGeom.buffer(0.0)\n  }\n}\nDensifier.DensifyTransformer = DensifyTransformer\n","import Coordinate from '../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Quadrant {\n  static isNorthern(quad) {\n    return quad === Quadrant.NE || quad === Quadrant.NW\n  }\n  static isOpposite(quad1, quad2) {\n    if (quad1 === quad2) return false\n    const diff = (quad1 - quad2 + 4) % 4\n    if (diff === 2) return true\n    return false\n  }\n  static commonHalfPlane(quad1, quad2) {\n    if (quad1 === quad2) return quad1\n    const diff = (quad1 - quad2 + 4) % 4\n    if (diff === 2) return -1\n    const min = quad1 < quad2 ? quad1 : quad2\n    const max = quad1 > quad2 ? quad1 : quad2\n    if (min === 0 && max === 3) return 3\n    return min\n  }\n  static isInHalfPlane(quad, halfPlane) {\n    if (halfPlane === Quadrant.SE) \n      return quad === Quadrant.SE || quad === Quadrant.SW\n    \n    return quad === halfPlane || quad === halfPlane + 1\n  }\n  static quadrant() {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const dx = arguments[0], dy = arguments[1]\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )')\n      if (dx >= 0.0) \n        if (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE\n      else \n      if (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW\n      \n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p0 = arguments[0], p1 = arguments[1]\n      if (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0)\n      if (p1.x >= p0.x) \n        if (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE\n      else \n      if (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW\n      \n    }\n  }\n}\nQuadrant.NE = 0\nQuadrant.NW = 1\nQuadrant.SW = 2\nQuadrant.SE = 3\n","import WKTWriter from '../io/WKTWriter.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport Quadrant from '../geomgraph/Quadrant.js'\nimport Assert from '../util/Assert.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nexport default class HalfEdge {\n  constructor() {\n    HalfEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._orig = null\n    this._sym = null\n    this._next = null\n    const orig = arguments[0]\n    this._orig = orig\n  }\n  static create(p0, p1) {\n    const e0 = new HalfEdge(p0)\n    const e1 = new HalfEdge(p1)\n    e0.link(e1)\n    return e0\n  }\n  find(dest) {\n    let oNext = this\n    do {\n      if (oNext === null) return null\n      if (oNext.dest().equals2D(dest)) return oNext\n      oNext = oNext.oNext()\n    } while (oNext !== this)\n    return null\n  }\n  dest() {\n    return this._sym._orig\n  }\n  isEdgesSorted() {\n    const lowest = this.findLowest()\n    let e = lowest\n    do {\n      const eNext = e.oNext()\n      if (eNext === lowest) break\n      const isSorted = eNext.compareTo(e) > 0\n      if (!isSorted) \n        return false\n      \n      e = eNext\n    } while (e !== lowest)\n    return true\n  }\n  oNext() {\n    return this._sym._next\n  }\n  directionY() {\n    return this.directionPt().getY() - this._orig.getY()\n  }\n  insert(eAdd) {\n    if (this.oNext() === this) {\n      this.insertAfter(eAdd)\n      return null\n    }\n    const ePrev = this.insertionEdge(eAdd)\n    ePrev.insertAfter(eAdd)\n  }\n  insertAfter(e) {\n    Assert.equals(this._orig, e.orig())\n    const save = this.oNext()\n    this._sym.setNext(e)\n    e.sym().setNext(save)\n  }\n  degree() {\n    let degree = 0\n    let e = this\n    do {\n      degree++\n      e = e.oNext()\n    } while (e !== this)\n    return degree\n  }\n  equals() {\n    if (arguments.length === 2 && (arguments[1] instanceof Coordinate && arguments[0] instanceof Coordinate)) {\n      const p0 = arguments[0], p1 = arguments[1]\n      return this._orig.equals2D(p0) && this._sym._orig.equals(p1)\n    }\n  }\n  findLowest() {\n    let lowest = this\n    let e = this.oNext()\n    do {\n      if (e.compareTo(lowest) < 0) lowest = e\n      e = e.oNext()\n    } while (e !== this)\n    return lowest\n  }\n  directionPt() {\n    return this.dest()\n  }\n  sym() {\n    return this._sym\n  }\n  prev() {\n    return this._sym.next()._sym\n  }\n  compareAngularDirection(e) {\n    const dx = this.directionX()\n    const dy = this.directionY()\n    const dx2 = e.directionX()\n    const dy2 = e.directionY()\n    if (dx === dx2 && dy === dy2) return 0\n    const quadrant = Quadrant.quadrant(dx, dy)\n    const quadrant2 = Quadrant.quadrant(dx2, dy2)\n    if (quadrant > quadrant2) return 1\n    if (quadrant < quadrant2) return -1\n    const dir1 = this.directionPt()\n    const dir2 = e.directionPt()\n    return Orientation.index(e._orig, dir2, dir1)\n  }\n  prevNode() {\n    let e = this\n    while (e.degree() === 2) {\n      e = e.prev()\n      if (e === this) return null\n    }\n    return e\n  }\n  directionX() {\n    return this.directionPt().getX() - this._orig.getX()\n  }\n  insertionEdge(eAdd) {\n    let ePrev = this\n    do {\n      const eNext = ePrev.oNext()\n      if (eNext.compareTo(ePrev) > 0 && eAdd.compareTo(ePrev) >= 0 && eAdd.compareTo(eNext) <= 0) \n        return ePrev\n      \n      if (eNext.compareTo(ePrev) <= 0 && (eAdd.compareTo(eNext) <= 0 || eAdd.compareTo(ePrev) >= 0)) \n        return ePrev\n      \n      ePrev = eNext\n    } while (ePrev !== this)\n    Assert.shouldNeverReachHere()\n    return null\n  }\n  compareTo(obj) {\n    const e = obj\n    const comp = this.compareAngularDirection(e)\n    return comp\n  }\n  toStringNode() {\n    const orig = this.orig()\n    const dest = this.dest()\n    const sb = new StringBuilder()\n    sb.append('Node( ' + WKTWriter.format(orig) + ' )' + '\\n')\n    let e = this\n    do {\n      sb.append('  -> ' + e)\n      sb.append('\\n')\n      e = e.oNext()\n    } while (e !== this)\n    return sb.toString()\n  }\n  link(sym) {\n    this.setSym(sym)\n    sym.setSym(this)\n    this.setNext(sym)\n    sym.setNext(this)\n  }\n  next() {\n    return this._next\n  }\n  setSym(e) {\n    this._sym = e\n  }\n  orig() {\n    return this._orig\n  }\n  toString() {\n    return 'HE(' + this._orig.x + ' ' + this._orig.y + ', ' + this._sym._orig.x + ' ' + this._sym._orig.y + ')'\n  }\n  toStringNodeEdge() {\n    return '  -> (' + WKTWriter.format(this.dest())\n  }\n  setNext(e) {\n    this._next = e\n  }\n}\n","import HalfEdge from './HalfEdge.js'\nexport default class MarkHalfEdge extends HalfEdge {\n  constructor() {\n    super()\n    MarkHalfEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isMarked = false\n    const orig = arguments[0]\n    HalfEdge.constructor_.call(this, orig)\n  }\n  static setMarkBoth(e, isMarked) {\n    e.setMark(isMarked)\n    e.sym().setMark(isMarked)\n  }\n  static isMarked(e) {\n    return e.isMarked()\n  }\n  static setMark(e, isMarked) {\n    e.setMark(isMarked)\n  }\n  static markBoth(e) {\n    e.mark()\n    e.sym().mark()\n  }\n  static mark(e) {\n    e.mark()\n  }\n  mark() {\n    this._isMarked = true\n  }\n  setMark(isMarked) {\n    this._isMarked = isMarked\n  }\n  isMarked() {\n    return this._isMarked\n  }\n}\n","import HashMap from '../../../../java/util/HashMap.js'\nimport HalfEdge from './HalfEdge.js'\nexport default class EdgeGraph {\n  constructor() {\n    EdgeGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._vertexMap = new HashMap()\n  }\n  static isValidEdge(orig, dest) {\n    const cmp = dest.compareTo(orig)\n    return cmp !== 0\n  }\n  insert(orig, dest, eAdj) {\n    const e = this.create(orig, dest)\n    if (eAdj !== null) \n      eAdj.insert(e)\n    else \n      this._vertexMap.put(orig, e)\n    \n    const eAdjDest = this._vertexMap.get(dest)\n    if (eAdjDest !== null) \n      eAdjDest.insert(e.sym())\n    else \n      this._vertexMap.put(dest, e.sym())\n    \n    return e\n  }\n  create(p0, p1) {\n    const e0 = this.createEdge(p0)\n    const e1 = this.createEdge(p1)\n    e0.link(e1)\n    return e0\n  }\n  createEdge(orig) {\n    return new HalfEdge(orig)\n  }\n  addEdge(orig, dest) {\n    if (!EdgeGraph.isValidEdge(orig, dest)) return null\n    const eAdj = this._vertexMap.get(orig)\n    let eSame = null\n    if (eAdj !== null) \n      eSame = eAdj.find(dest)\n    \n    if (eSame !== null) \n      return eSame\n    \n    const e = this.insert(orig, dest, eAdj)\n    return e\n  }\n  getVertexEdges() {\n    return this._vertexMap.values()\n  }\n  findEdge(orig, dest) {\n    const e = this._vertexMap.get(orig)\n    if (e === null) return null\n    return e.find(dest)\n  }\n}\n","import MarkHalfEdge from '../edgegraph/MarkHalfEdge.js'\nexport default class DissolveHalfEdge extends MarkHalfEdge {\n  constructor() {\n    super()\n    DissolveHalfEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isStart = false\n    const orig = arguments[0]\n    MarkHalfEdge.constructor_.call(this, orig)\n  }\n  setStart() {\n    this._isStart = true\n  }\n  isStart() {\n    return this._isStart\n  }\n}\n","import EdgeGraph from '../edgegraph/EdgeGraph.js'\nimport DissolveHalfEdge from './DissolveHalfEdge.js'\nexport default class DissolveEdgeGraph extends EdgeGraph {\n  constructor() {\n    super()\n  }\n  createEdge(p0) {\n    return new DissolveHalfEdge(p0)\n  }\n}\n","import LineString from '../geom/LineString.js'\nimport CoordinateList from '../geom/CoordinateList.js'\nimport Geometry from '../geom/Geometry.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport Stack from '../../../../java/util/Stack.js'\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge.js'\nimport DissolveEdgeGraph from './DissolveEdgeGraph.js'\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class LineDissolver {\n  constructor() {\n    LineDissolver.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._result = null\n    this._factory = null\n    this._graph = null\n    this._lines = new ArrayList()\n    this._nodeEdgeStack = new Stack()\n    this._ringStartEdge = null\n    this._graph = new DissolveEdgeGraph()\n  }\n  static dissolve(g) {\n    const d = new LineDissolver()\n    d.add(g)\n    return d.getResult()\n  }\n  addLine(line) {\n    this._lines.add(this._factory.createLineString(line.toCoordinateArray()))\n  }\n  updateRingStartEdge(e) {\n    if (!e.isStart()) {\n      e = e.sym()\n      if (!e.isStart()) return null\n    }\n    if (this._ringStartEdge === null) {\n      this._ringStartEdge = e\n      return null\n    }\n    if (e.orig().compareTo(this._ringStartEdge.orig()) < 0) \n      this._ringStartEdge = e\n    \n  }\n  getResult() {\n    if (this._result === null) this.computeResult()\n    return this._result\n  }\n  process(e) {\n    let eNode = e.prevNode()\n    if (eNode === null) eNode = e\n    this.stackEdges(eNode)\n    this.buildLines()\n  }\n  buildRing(eStartRing) {\n    const line = new CoordinateList()\n    let e = eStartRing\n    line.add(e.orig().copy(), false)\n    while (e.sym().degree() === 2) {\n      const eNext = e.next()\n      if (eNext === eStartRing) break\n      line.add(eNext.orig().copy(), false)\n      e = eNext\n    }\n    line.add(e.dest().copy(), false)\n    this.addLine(line)\n  }\n  buildLine(eStart) {\n    const line = new CoordinateList()\n    let e = eStart\n    this._ringStartEdge = null\n    MarkHalfEdge.markBoth(e)\n    line.add(e.orig().copy(), false)\n    while (e.sym().degree() === 2) {\n      this.updateRingStartEdge(e)\n      const eNext = e.next()\n      if (eNext === eStart) {\n        this.buildRing(this._ringStartEdge)\n        return null\n      }\n      line.add(eNext.orig().copy(), false)\n      e = eNext\n      MarkHalfEdge.markBoth(e)\n    }\n    line.add(e.dest().clone(), false)\n    this.stackEdges(e.sym())\n    this.addLine(line)\n  }\n  stackEdges(node) {\n    let e = node\n    do {\n      if (!MarkHalfEdge.isMarked(e)) this._nodeEdgeStack.add(e)\n      e = e.oNext()\n    } while (e !== node)\n  }\n  computeResult() {\n    const edges = this._graph.getVertexEdges()\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      if (MarkHalfEdge.isMarked(e)) continue\n      this.process(e)\n    }\n    this._result = this._factory.buildGeometry(this._lines)\n  }\n  buildLines() {\n    while (!this._nodeEdgeStack.empty()) {\n      const e = this._nodeEdgeStack.pop()\n      if (MarkHalfEdge.isMarked(e)) continue\n      this.buildLine(e)\n    }\n  }\n  add() {\n    if (arguments[0] instanceof Geometry) {\n      const geometry = arguments[0]\n      geometry.apply(new (class {\n        get interfaces_() {\n          return [GeometryComponentFilter]\n        }\n        filter(component) {\n          if (component instanceof LineString) \n            this.add(component)\n          \n        }\n      })())\n    } else if (hasInterface(arguments[0], Collection)) {\n      const geometries = arguments[0]\n      for (let i = geometries.iterator(); i.hasNext(); ) {\n        const geometry = i.next()\n        this.add(geometry)\n      }\n    } else if (arguments[0] instanceof LineString) {\n      const lineString = arguments[0]\n      if (this._factory === null) \n        this._factory = lineString.getFactory()\n      \n      const seq = lineString.getCoordinateSequence()\n      let doneStart = false\n      for (let i = 1; i < seq.size(); i++) {\n        const e = this._graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i))\n        if (e === null) continue\n        if (!doneStart) {\n          e.setStart()\n          doneStart = true\n        }\n      }\n    }\n  }\n}\n","export default class Position {\n  static opposite(position) {\n    if (position === Position.LEFT) return Position.RIGHT\n    if (position === Position.RIGHT) return Position.LEFT\n    return position\n  }\n}\nPosition.ON = 0\nPosition.LEFT = 1\nPosition.RIGHT = 2\n","export default class MonotoneChain {\n  constructor() {\n    MonotoneChain.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.mce = null\n    this.chainIndex = null\n    const mce = arguments[0], chainIndex = arguments[1]\n    this.mce = mce\n    this.chainIndex = chainIndex\n  }\n  computeIntersections(mc, si) {\n    this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si)\n  }\n}\n","import Comparable from '../../../../../java/lang/Comparable.js'\nexport default class SweepLineEvent {\n  constructor() {\n    SweepLineEvent.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._label = null\n    this._xValue = null\n    this._eventType = null\n    this._insertEvent = null\n    this._deleteEventIndex = null\n    this._obj = null\n    if (arguments.length === 2) {\n      const x = arguments[0], insertEvent = arguments[1]\n      this._eventType = SweepLineEvent.DELETE\n      this._xValue = x\n      this._insertEvent = insertEvent\n    } else if (arguments.length === 3) {\n      const label = arguments[0], x = arguments[1], obj = arguments[2]\n      this._eventType = SweepLineEvent.INSERT\n      this._label = label\n      this._xValue = x\n      this._obj = obj\n    }\n  }\n  isDelete() {\n    return this._eventType === SweepLineEvent.DELETE\n  }\n  setDeleteEventIndex(deleteEventIndex) {\n    this._deleteEventIndex = deleteEventIndex\n  }\n  getObject() {\n    return this._obj\n  }\n  compareTo(o) {\n    const pe = o\n    if (this._xValue < pe._xValue) return -1\n    if (this._xValue > pe._xValue) return 1\n    if (this._eventType < pe._eventType) return -1\n    if (this._eventType > pe._eventType) return 1\n    return 0\n  }\n  getInsertEvent() {\n    return this._insertEvent\n  }\n  isInsert() {\n    return this._eventType === SweepLineEvent.INSERT\n  }\n  isSameLabel(ev) {\n    if (this._label === null) return false\n    return this._label === ev._label\n  }\n  getDeleteEventIndex() {\n    return this._deleteEventIndex\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\nSweepLineEvent.INSERT = 1\nSweepLineEvent.DELETE = 2\n","export default class EdgeSetIntersector {}\n","export default class SegmentIntersector {\n  constructor() {\n    SegmentIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hasIntersection = false\n    this._hasProper = false\n    this._hasProperInterior = false\n    this._properIntersectionPoint = null\n    this._li = null\n    this._includeProper = null\n    this._recordIsolated = null\n    this._isSelfIntersection = null\n    this._numIntersections = 0\n    this.numTests = 0\n    this._bdyNodes = null\n    this._isDone = false\n    this._isDoneWhenProperInt = false\n    const li = arguments[0], includeProper = arguments[1], recordIsolated = arguments[2]\n    this._li = li\n    this._includeProper = includeProper\n    this._recordIsolated = recordIsolated\n  }\n  static isAdjacentSegments(i1, i2) {\n    return Math.abs(i1 - i2) === 1\n  }\n  isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1) \n      if (this._li.getIntersectionNum() === 1) {\n        if (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true\n        if (e0.isClosed()) {\n          const maxSegIndex = e0.getNumPoints() - 1\n          if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) \n            return true\n          \n        }\n      }\n    \n    return false\n  }\n  getProperIntersectionPoint() {\n    return this._properIntersectionPoint\n  }\n  setIsDoneIfProperInt(isDoneWhenProperInt) {\n    this._isDoneWhenProperInt = isDoneWhenProperInt\n  }\n  hasProperInteriorIntersection() {\n    return this._hasProperInterior\n  }\n  isBoundaryPointInternal(li, bdyNodes) {\n    for (let i = bdyNodes.iterator(); i.hasNext(); ) {\n      const node = i.next()\n      const pt = node.getCoordinate()\n      if (li.isIntersection(pt)) return true\n    }\n    return false\n  }\n  hasProperIntersection() {\n    return this._hasProper\n  }\n  hasIntersection() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return this._isDone\n  }\n  isBoundaryPoint(li, bdyNodes) {\n    if (bdyNodes === null) return false\n    if (this.isBoundaryPointInternal(li, bdyNodes[0])) return true\n    if (this.isBoundaryPointInternal(li, bdyNodes[1])) return true\n    return false\n  }\n  setBoundaryNodes(bdyNodes0, bdyNodes1) {\n    this._bdyNodes = new Array(2).fill(null)\n    this._bdyNodes[0] = bdyNodes0\n    this._bdyNodes[1] = bdyNodes1\n  }\n  addIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    this.numTests++\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      if (this._recordIsolated) {\n        e0.setIsolated(false)\n        e1.setIsolated(false)\n      }\n      this._numIntersections++\n      if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n        this._hasIntersection = true\n        if (this._includeProper || !this._li.isProper()) {\n          e0.addIntersections(this._li, segIndex0, 0)\n          e1.addIntersections(this._li, segIndex1, 1)\n        }\n        if (this._li.isProper()) {\n          this._properIntersectionPoint = this._li.getIntersection(0).copy()\n          this._hasProper = true\n          if (this._isDoneWhenProperInt) \n            this._isDone = true\n          \n          if (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true\n        }\n      }\n    }\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport MonotoneChain from './MonotoneChain.js'\nimport SweepLineEvent from './SweepLineEvent.js'\nimport EdgeSetIntersector from './EdgeSetIntersector.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport List from '../../../../../java/util/List.js'\nexport default class SimpleMCSweepLineIntersector extends EdgeSetIntersector {\n  constructor() {\n    super()\n    SimpleMCSweepLineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.events = new ArrayList()\n    this.nOverlaps = null\n  }\n  prepareEvents() {\n    Collections.sort(this.events)\n    for (let i = 0; i < this.events.size(); i++) {\n      const ev = this.events.get(i)\n      if (ev.isDelete()) \n        ev.getInsertEvent().setDeleteEventIndex(i)\n      \n    }\n  }\n  computeIntersections() {\n    if (arguments.length === 1) {\n      const si = arguments[0]\n      this.nOverlaps = 0\n      this.prepareEvents()\n      for (let i = 0; i < this.events.size(); i++) {\n        const ev = this.events.get(i)\n        if (ev.isInsert()) \n          this.processOverlaps(i, ev.getDeleteEventIndex(), ev, si)\n        \n        if (si.isDone()) \n          break\n        \n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        const edges0 = arguments[0], edges1 = arguments[1], si = arguments[2]\n        this.addEdges(edges0, edges0)\n        this.addEdges(edges1, edges1)\n        this.computeIntersections(si)\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\n        const edges = arguments[0], si = arguments[1], testAllSegments = arguments[2]\n        if (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges)\n        this.computeIntersections(si)\n      }\n    }\n  }\n  addEdge(edge, edgeSet) {\n    const mce = edge.getMonotoneChainEdge()\n    const startIndex = mce.getStartIndexes()\n    for (let i = 0; i < startIndex.length - 1; i++) {\n      const mc = new MonotoneChain(mce, i)\n      const insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc)\n      this.events.add(insertEvent)\n      this.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent))\n    }\n  }\n  processOverlaps(start, end, ev0, si) {\n    const mc0 = ev0.getObject()\n    for (let i = start; i < end; i++) {\n      const ev1 = this.events.get(i)\n      if (ev1.isInsert()) {\n        const mc1 = ev1.getObject()\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si)\n          this.nOverlaps++\n        }\n      }\n    }\n  }\n  addEdges() {\n    if (arguments.length === 1) {\n      const edges = arguments[0]\n      for (let i = edges.iterator(); i.hasNext(); ) {\n        const edge = i.next()\n        this.addEdge(edge, edge)\n      }\n    } else if (arguments.length === 2) {\n      const edges = arguments[0], edgeSet = arguments[1]\n      for (let i = edges.iterator(); i.hasNext(); ) {\n        const edge = i.next()\n        this.addEdge(edge, edgeSet)\n      }\n    }\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nexport default class TopologyLocation {\n  constructor() {\n    TopologyLocation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.location = null\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Array) {\n        const location = arguments[0]\n        this.init(location.length)\n      } else if (Number.isInteger(arguments[0])) {\n        const on = arguments[0]\n        this.init(1)\n        this.location[Position.ON] = on\n      } else if (arguments[0] instanceof TopologyLocation) {\n        const gl = arguments[0]\n        this.init(gl.location.length)\n        if (gl !== null) \n          for (let i = 0; i < this.location.length; i++) \n            this.location[i] = gl.location[i]\n          \n        \n      }\n    } else if (arguments.length === 3) {\n      const on = arguments[0], left = arguments[1], right = arguments[2]\n      this.init(3)\n      this.location[Position.ON] = on\n      this.location[Position.LEFT] = left\n      this.location[Position.RIGHT] = right\n    }\n  }\n  setAllLocations(locValue) {\n    for (let i = 0; i < this.location.length; i++) \n      this.location[i] = locValue\n    \n  }\n  isNull() {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] !== Location.NONE) return false\n    \n    return true\n  }\n  setAllLocationsIfNull(locValue) {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE) this.location[i] = locValue\n    \n  }\n  isLine() {\n    return this.location.length === 1\n  }\n  merge(gl) {\n    if (gl.location.length > this.location.length) {\n      const newLoc = new Array(3).fill(null)\n      newLoc[Position.ON] = this.location[Position.ON]\n      newLoc[Position.LEFT] = Location.NONE\n      newLoc[Position.RIGHT] = Location.NONE\n      this.location = newLoc\n    }\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i]\n    \n  }\n  getLocations() {\n    return this.location\n  }\n  flip() {\n    if (this.location.length <= 1) return null\n    const temp = this.location[Position.LEFT]\n    this.location[Position.LEFT] = this.location[Position.RIGHT]\n    this.location[Position.RIGHT] = temp\n  }\n  toString() {\n    const buf = new StringBuffer()\n    if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]))\n    buf.append(Location.toLocationSymbol(this.location[Position.ON]))\n    if (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]))\n    return buf.toString()\n  }\n  setLocations(on, left, right) {\n    this.location[Position.ON] = on\n    this.location[Position.LEFT] = left\n    this.location[Position.RIGHT] = right\n  }\n  get(posIndex) {\n    if (posIndex < this.location.length) return this.location[posIndex]\n    return Location.NONE\n  }\n  isArea() {\n    return this.location.length > 1\n  }\n  isAnyNull() {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] === Location.NONE) return true\n    \n    return false\n  }\n  setLocation() {\n    if (arguments.length === 1) {\n      const locValue = arguments[0]\n      this.setLocation(Position.ON, locValue)\n    } else if (arguments.length === 2) {\n      const locIndex = arguments[0], locValue = arguments[1]\n      this.location[locIndex] = locValue\n    }\n  }\n  init(size) {\n    this.location = new Array(size).fill(null)\n    this.setAllLocations(Location.NONE)\n  }\n  isEqualOnSide(le, locIndex) {\n    return this.location[locIndex] === le.location[locIndex]\n  }\n  allPositionsEqual(loc) {\n    for (let i = 0; i < this.location.length; i++) \n      if (this.location[i] !== loc) return false\n    \n    return true\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyLocation from './TopologyLocation.js'\nexport default class Label {\n  constructor() {\n    Label.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.elt = new Array(2).fill(null)\n    if (arguments.length === 1) {\n      if (Number.isInteger(arguments[0])) {\n        const onLoc = arguments[0]\n        this.elt[0] = new TopologyLocation(onLoc)\n        this.elt[1] = new TopologyLocation(onLoc)\n      } else if (arguments[0] instanceof Label) {\n        const lbl = arguments[0]\n        this.elt[0] = new TopologyLocation(lbl.elt[0])\n        this.elt[1] = new TopologyLocation(lbl.elt[1])\n      }\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], onLoc = arguments[1]\n      this.elt[0] = new TopologyLocation(Location.NONE)\n      this.elt[1] = new TopologyLocation(Location.NONE)\n      this.elt[geomIndex].setLocation(onLoc)\n    } else if (arguments.length === 3) {\n      const onLoc = arguments[0], leftLoc = arguments[1], rightLoc = arguments[2]\n      this.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc)\n      this.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc)\n    } else if (arguments.length === 4) {\n      const geomIndex = arguments[0], onLoc = arguments[1], leftLoc = arguments[2], rightLoc = arguments[3]\n      this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE)\n      this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE)\n      this.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc)\n    }\n  }\n  static toLineLabel(label) {\n    const lineLabel = new Label(Location.NONE)\n    for (let i = 0; i < 2; i++) \n      lineLabel.setLocation(i, label.getLocation(i))\n    \n    return lineLabel\n  }\n  getGeometryCount() {\n    let count = 0\n    if (!this.elt[0].isNull()) count++\n    if (!this.elt[1].isNull()) count++\n    return count\n  }\n  setAllLocations(geomIndex, location) {\n    this.elt[geomIndex].setAllLocations(location)\n  }\n  isNull(geomIndex) {\n    return this.elt[geomIndex].isNull()\n  }\n  setAllLocationsIfNull() {\n    if (arguments.length === 1) {\n      const location = arguments[0]\n      this.setAllLocationsIfNull(0, location)\n      this.setAllLocationsIfNull(1, location)\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], location = arguments[1]\n      this.elt[geomIndex].setAllLocationsIfNull(location)\n    }\n  }\n  isLine(geomIndex) {\n    return this.elt[geomIndex].isLine()\n  }\n  merge(lbl) {\n    for (let i = 0; i < 2; i++) \n      if (this.elt[i] === null && lbl.elt[i] !== null) \n        this.elt[i] = new TopologyLocation(lbl.elt[i])\n      else \n        this.elt[i].merge(lbl.elt[i])\n      \n    \n  }\n  flip() {\n    this.elt[0].flip()\n    this.elt[1].flip()\n  }\n  getLocation() {\n    if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this.elt[geomIndex].get(Position.ON)\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], posIndex = arguments[1]\n      return this.elt[geomIndex].get(posIndex)\n    }\n  }\n  toString() {\n    const buf = new StringBuffer()\n    if (this.elt[0] !== null) {\n      buf.append('A:')\n      buf.append(this.elt[0].toString())\n    }\n    if (this.elt[1] !== null) {\n      buf.append(' B:')\n      buf.append(this.elt[1].toString())\n    }\n    return buf.toString()\n  }\n  isArea() {\n    if (arguments.length === 0) {\n      return this.elt[0].isArea() || this.elt[1].isArea()\n    } else if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this.elt[geomIndex].isArea()\n    }\n  }\n  isAnyNull(geomIndex) {\n    return this.elt[geomIndex].isAnyNull()\n  }\n  setLocation() {\n    if (arguments.length === 2) {\n      const geomIndex = arguments[0], location = arguments[1]\n      this.elt[geomIndex].setLocation(Position.ON, location)\n    } else if (arguments.length === 3) {\n      const geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2]\n      this.elt[geomIndex].setLocation(posIndex, location)\n    }\n  }\n  isEqualOnSide(lbl, side) {\n    return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n  }\n  allPositionsEqual(geomIndex, loc) {\n    return this.elt[geomIndex].allPositionsEqual(loc)\n  }\n  toLine(geomIndex) {\n    if (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0])\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nexport default class EdgeIntersection {\n  constructor() {\n    EdgeIntersection.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.coord = null\n    this.segmentIndex = null\n    this.dist = null\n    const coord = arguments[0], segmentIndex = arguments[1], dist = arguments[2]\n    this.coord = new Coordinate(coord)\n    this.segmentIndex = segmentIndex\n    this.dist = dist\n  }\n  getSegmentIndex() {\n    return this.segmentIndex\n  }\n  getCoordinate() {\n    return this.coord\n  }\n  print(out) {\n    out.print(this.coord)\n    out.print(' seg # = ' + this.segmentIndex)\n    out.println(' dist = ' + this.dist)\n  }\n  compareTo(obj) {\n    const other = obj\n    return this.compare(other.segmentIndex, other.dist)\n  }\n  isEndPoint(maxSegmentIndex) {\n    if (this.segmentIndex === 0 && this.dist === 0.0) return true\n    if (this.segmentIndex === maxSegmentIndex) return true\n    return false\n  }\n  toString() {\n    return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n  }\n  getDistance() {\n    return this.dist\n  }\n  compare(segmentIndex, dist) {\n    if (this.segmentIndex < segmentIndex) return -1\n    if (this.segmentIndex > segmentIndex) return 1\n    if (this.dist < dist) return -1\n    if (this.dist > dist) return 1\n    return 0\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import Map from './Map.js'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n */\nexport default class SortedMap extends Map {}\n","import ArrayList from './ArrayList.js'\nimport SortedMap from './SortedMap.js'\nimport HashSet from './HashSet.js'\n\nconst BLACK = 0\nconst RED = 1\n\nfunction colorOf(p) {\n  return (p == null ? BLACK : p.color)\n}\nfunction parentOf(p) {\n  return (p == null ? null : p.parent)\n}\nfunction setColor(p, c) {\n  if (p !== null) p.color = c\n}\nfunction leftOf(p) {\n  return (p == null ? null : p.left)\n}\nfunction rightOf(p) {\n  return (p == null ? null : p.right)\n}\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n */\nexport default class TreeMap extends SortedMap {\n  constructor() {\n    super()\n    this.root_ = null\n    this.size_ = 0\n  }\n\n  get(key) {\n    let p = this.root_\n    while (p !== null) {\n      const cmp = key.compareTo(p.key)\n      if (cmp < 0)\n        p = p.left\n      else if (cmp > 0)\n        p = p.right\n      else return p.value\n    }\n    return null\n  }\n\n  put(key, value) {\n    if (this.root_ === null) {\n      this.root_ = {\n        key: key,\n        value: value,\n        left: null,\n        right: null,\n        parent: null,\n        color: BLACK,\n        getValue() {\n          return this.value\n        },\n        getKey() {\n          return this.key\n        }\n      }\n      this.size_ = 1\n      return null\n    }\n    let t = this.root_; let parent; let cmp\n    do {\n      parent = t\n      cmp = key.compareTo(t.key)\n      if (cmp < 0) {\n        t = t.left\n      } else if (cmp > 0) {\n        t = t.right\n      } else {\n        const oldValue = t.value\n        t.value = value\n        return oldValue\n      }\n    } while (t !== null)\n    const e = {\n      key: key,\n      left: null,\n      right: null,\n      value: value,\n      parent: parent,\n      color: BLACK,\n      getValue() {\n        return this.value\n      },\n      getKey() {\n        return this.key\n      }\n    }\n    if (cmp < 0)\n      parent.left = e\n    else parent.right = e\n\n    this.fixAfterInsertion(e)\n    this.size_++\n    return null\n  }\n\n  /**\n   * @param {Object} x\n   */\n  fixAfterInsertion(x) {\n    let y\n    x.color = RED\n    while (x != null && x !== this.root_ && x.parent.color === RED)\n      if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n        y = rightOf(parentOf(parentOf(x)))\n        if (colorOf(y) === RED) {\n          setColor(parentOf(x), BLACK)\n          setColor(y, BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          x = parentOf(parentOf(x))\n        } else {\n          if (x === rightOf(parentOf(x))) {\n            x = parentOf(x)\n            this.rotateLeft(x)\n          }\n          setColor(parentOf(x), BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          this.rotateRight(parentOf(parentOf(x)))\n        }\n      } else {\n        y = leftOf(parentOf(parentOf(x)))\n        if (colorOf(y) === RED) {\n          setColor(parentOf(x), BLACK)\n          setColor(y, BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          x = parentOf(parentOf(x))\n        } else {\n          if (x === leftOf(parentOf(x))) {\n            x = parentOf(x)\n            this.rotateRight(x)\n          }\n          setColor(parentOf(x), BLACK)\n          setColor(parentOf(parentOf(x)), RED)\n          this.rotateLeft(parentOf(parentOf(x)))\n        }\n      }\n\n    this.root_.color = BLACK\n  }\n\n  values() {\n    const arrayList = new ArrayList()\n    let p = this.getFirstEntry()\n    if (p !== null) {\n      arrayList.add(p.value)\n      while ((p = TreeMap.successor(p)) !== null)\n        arrayList.add(p.value)\n    }\n    return arrayList\n  }\n\n  entrySet() {\n    const hashSet = new HashSet()\n    let p = this.getFirstEntry()\n    if (p !== null) {\n      hashSet.add(p)\n      while ((p = TreeMap.successor(p)) !== null)\n        hashSet.add(p)\n    }\n    return hashSet\n  }\n\n  /**\n   * @param {Object} p\n   */\n  rotateLeft(p) {\n    if (p != null) {\n      const r = p.right\n      p.right = r.left\n      if (r.left != null)\n        r.left.parent = p\n      r.parent = p.parent\n      if (p.parent == null)\n        this.root_ = r\n      else if (p.parent.left === p)\n        p.parent.left = r\n      else\n        p.parent.right = r\n      r.left = p\n      p.parent = r\n    }\n  }\n\n  /**\n   * @param {Object} p\n   */\n  rotateRight(p) {\n    if (p != null) {\n      const l = p.left\n      p.left = l.right\n      if (l.right != null)\n        l.right.parent = p\n      l.parent = p.parent\n      if (p.parent == null)\n        this.root_ = l\n      else if (p.parent.right === p)\n        p.parent.right = l\n      else\n        p.parent.left = l\n      l.right = p\n      p.parent = l\n    }\n  }\n\n  /**\n   * @return {Object}\n   */\n  getFirstEntry() {\n    let p = this.root_\n    if (p != null)\n      while (p.left != null) p = p.left\n    return p\n  }\n\n  /**\n   * @param {Object} t\n   * @return {Object}\n   * @private\n   */\n  static successor(t) {\n    let p\n    if (t === null) {\n      return null\n    } else if (t.right !== null) {\n      p = t.right\n      while (p.left !== null)\n        p = p.left\n      return p\n    } else {\n      p = t.parent\n      let ch = t\n      while (p !== null && ch === p.right) {\n        ch = p\n        p = p.parent\n      }\n      return p\n    }\n  }\n\n  size() {\n    return this.size_\n  }\n\n  containsKey(key) {\n    let p = this.root_\n    while (p !== null) {\n      const cmp = key.compareTo(p.key)\n      if (cmp < 0)\n        p = p.left\n      else if (cmp > 0)\n        p = p.right\n      else return true\n    }\n    return false\n  }\n}\n","import EdgeIntersection from './EdgeIntersection.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Label from './Label.js'\nimport Edge from './Edge.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeIntersectionList {\n  constructor() {\n    EdgeIntersectionList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeMap = new TreeMap()\n    this.edge = null\n    const edge = arguments[0]\n    this.edge = edge\n  }\n  print(out) {\n    out.println('Intersections:')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      ei.print(out)\n    }\n  }\n  iterator() {\n    return this._nodeMap.values().iterator()\n  }\n  addSplitEdges(edgeList) {\n    this.addEndpoints()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const newEdge = this.createSplitEdge(eiPrev, ei)\n      edgeList.add(newEdge)\n      eiPrev = ei\n    }\n  }\n  addEndpoints() {\n    const maxSegIndex = this.edge.pts.length - 1\n    this.add(this.edge.pts[0], 0, 0.0)\n    this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0)\n  }\n  createSplitEdge(ei0, ei1) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    const lastSegStartPt = this.edge.pts[ei1.segmentIndex]\n    const useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) \n      npts--\n    \n    const pts = new Array(npts).fill(null)\n    let ipt = 0\n    pts[ipt++] = new Coordinate(ei0.coord)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) \n      pts[ipt++] = this.edge.pts[i]\n    \n    if (useIntPt1) pts[ipt] = ei1.coord\n    return new Edge(pts, new Label(this.edge._label))\n  }\n  add(intPt, segmentIndex, dist) {\n    const eiNew = new EdgeIntersection(intPt, segmentIndex, dist)\n    const ei = this._nodeMap.get(eiNew)\n    if (ei !== null) \n      return ei\n    \n    this._nodeMap.put(eiNew, eiNew)\n    return eiNew\n  }\n  isIntersection(pt) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      if (ei.coord.equals(pt)) return true\n    }\n    return false\n  }\n}\n","import Arrays from '../../../../java/util/Arrays.js'\nimport System from '../../../../java/lang/System.js'\nexport default class IntArrayList {\n  constructor() {\n    IntArrayList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._data = null\n    this._size = 0\n    if (arguments.length === 0) {\n      IntArrayList.constructor_.call(this, 10)\n    } else if (arguments.length === 1) {\n      const initialCapacity = arguments[0]\n      this._data = new Array(initialCapacity).fill(null)\n    }\n  }\n  size() {\n    return this._size\n  }\n  addAll(values) {\n    if (values === null) return null\n    if (values.length === 0) return null\n    this.ensureCapacity(this._size + values.length)\n    System.arraycopy(values, 0, this._data, this._size, values.length)\n    this._size += values.length\n  }\n  ensureCapacity(capacity) {\n    if (capacity <= this._data.length) return null\n    const newLength = Math.max(capacity, this._data.length * 2)\n    this._data = Arrays.copyOf(this._data, newLength)\n  }\n  toArray() {\n    const array = new Array(this._size).fill(null)\n    System.arraycopy(this._data, 0, array, 0, this._size)\n    return array\n  }\n  add(value) {\n    this.ensureCapacity(this._size + 1)\n    this._data[this._size] = value\n    ++ this._size\n  }\n}\n","import IntArrayList from '../../util/IntArrayList.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Quadrant from '../Quadrant.js'\nexport default class MonotoneChainIndexer {\n  static toIntArray(list) {\n    const array = new Array(list.size()).fill(null)\n    for (let i = 0; i < array.length; i++) \n      array[i] = list.get(i).intValue()\n    \n    return array\n  }\n  getChainStartIndices(pts) {\n    let start = 0\n    const startIndexList = new IntArrayList(Math.trunc(pts.length / 2))\n    startIndexList.add(start)\n    do {\n      const last = this.findChainEnd(pts, start)\n      startIndexList.add(last)\n      start = last\n    } while (start < pts.length - 1)\n    return startIndexList.toArray()\n  }\n  findChainEnd(pts, start) {\n    const chainQuad = Quadrant.quadrant(pts[start], pts[start + 1])\n    let last = start + 1\n    while (last < pts.length) {\n      const quad = Quadrant.quadrant(pts[last - 1], pts[last])\n      if (quad !== chainQuad) break\n      last++\n    }\n    return last - 1\n  }\n  OLDgetChainStartIndices(pts) {\n    let start = 0\n    const startIndexList = new ArrayList()\n    startIndexList.add(start)\n    do {\n      const last = this.findChainEnd(pts, start)\n      startIndexList.add(last)\n      start = last\n    } while (start < pts.length - 1)\n    const startIndex = MonotoneChainIndexer.toIntArray(startIndexList)\n    return startIndex\n  }\n}\n","import MonotoneChainIndexer from './MonotoneChainIndexer.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class MonotoneChainEdge {\n  constructor() {\n    MonotoneChainEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.e = null\n    this.pts = null\n    this.startIndex = null\n    const e = arguments[0]\n    this.e = e\n    this.pts = e.getCoordinates()\n    const mcb = new MonotoneChainIndexer()\n    this.startIndex = mcb.getChainStartIndices(this.pts)\n  }\n  getCoordinates() {\n    return this.pts\n  }\n  getMaxX(chainIndex) {\n    const x1 = this.pts[this.startIndex[chainIndex]].x\n    const x2 = this.pts[this.startIndex[chainIndex + 1]].x\n    return x1 > x2 ? x1 : x2\n  }\n  getMinX(chainIndex) {\n    const x1 = this.pts[this.startIndex[chainIndex]].x\n    const x2 = this.pts[this.startIndex[chainIndex + 1]].x\n    return x1 < x2 ? x1 : x2\n  }\n  computeIntersectsForChain() {\n    if (arguments.length === 4) {\n      const chainIndex0 = arguments[0], mce = arguments[1], chainIndex1 = arguments[2], si = arguments[3]\n      this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si)\n    } else if (arguments.length === 6) {\n      const start0 = arguments[0], end0 = arguments[1], mce = arguments[2], start1 = arguments[3], end1 = arguments[4], ei = arguments[5]\n      if (end0 - start0 === 1 && end1 - start1 === 1) {\n        ei.addIntersections(this.e, start0, mce.e, start1)\n        return null\n      }\n      if (!this.overlaps(start0, end0, mce, start1, end1)) return null\n      const mid0 = Math.trunc((start0 + end0) / 2)\n      const mid1 = Math.trunc((start1 + end1) / 2)\n      if (start0 < mid0) {\n        if (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei)\n        if (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei)\n      }\n      if (mid0 < end0) {\n        if (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei)\n        if (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei)\n      }\n    }\n  }\n  overlaps(start0, end0, mce, start1, end1) {\n    return Envelope.intersects(this.pts[start0], this.pts[end0], mce.pts[start1], mce.pts[end1])\n  }\n  getStartIndexes() {\n    return this.startIndex\n  }\n  computeIntersects(mce, si) {\n    for (let i = 0; i < this.startIndex.length - 1; i++) \n      for (let j = 0; j < mce.startIndex.length - 1; j++) \n        this.computeIntersectsForChain(i, mce, j, si)\n      \n    \n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nexport default class Depth {\n  constructor() {\n    Depth.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._depth = Array(2).fill().map(() => Array(3))\n    for (let i = 0; i < 2; i++) \n      for (let j = 0; j < 3; j++) \n        this._depth[i][j] = Depth.NULL_VALUE\n      \n    \n  }\n  static depthAtLocation(location) {\n    if (location === Location.EXTERIOR) return 0\n    if (location === Location.INTERIOR) return 1\n    return Depth.NULL_VALUE\n  }\n  getDepth(geomIndex, posIndex) {\n    return this._depth[geomIndex][posIndex]\n  }\n  setDepth(geomIndex, posIndex, depthValue) {\n    this._depth[geomIndex][posIndex] = depthValue\n  }\n  isNull() {\n    if (arguments.length === 0) {\n      for (let i = 0; i < 2; i++) \n        for (let j = 0; j < 3; j++) \n          if (this._depth[i][j] !== Depth.NULL_VALUE) return false\n        \n      \n      return true\n    } else if (arguments.length === 1) {\n      const geomIndex = arguments[0]\n      return this._depth[geomIndex][1] === Depth.NULL_VALUE\n    } else if (arguments.length === 2) {\n      const geomIndex = arguments[0], posIndex = arguments[1]\n      return this._depth[geomIndex][posIndex] === Depth.NULL_VALUE\n    }\n  }\n  normalize() {\n    for (let i = 0; i < 2; i++) \n      if (!this.isNull(i)) {\n        let minDepth = this._depth[i][1]\n        if (this._depth[i][2] < minDepth) minDepth = this._depth[i][2]\n        if (minDepth < 0) minDepth = 0\n        for (let j = 1; j < 3; j++) {\n          let newValue = 0\n          if (this._depth[i][j] > minDepth) newValue = 1\n          this._depth[i][j] = newValue\n        }\n      }\n    \n  }\n  getDelta(geomIndex) {\n    return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n  }\n  getLocation(geomIndex, posIndex) {\n    if (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR\n    return Location.INTERIOR\n  }\n  toString() {\n    return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n  }\n  add() {\n    if (arguments.length === 1) {\n      const lbl = arguments[0]\n      for (let i = 0; i < 2; i++) \n        for (let j = 1; j < 3; j++) {\n          const loc = lbl.getLocation(i, j)\n          if (loc === Location.EXTERIOR || loc === Location.INTERIOR) \n            if (this.isNull(i, j)) \n              this._depth[i][j] = Depth.depthAtLocation(loc)\n            else this._depth[i][j] += Depth.depthAtLocation(loc)\n          \n        }\n      \n    } else if (arguments.length === 3) {\n      const geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2]\n      if (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++\n    }\n  }\n}\nDepth.NULL_VALUE = -1\n","import Assert from '../util/Assert.js'\nexport default class GraphComponent {\n  constructor() {\n    GraphComponent.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._label = null\n    this._isInResult = false\n    this._isCovered = false\n    this._isCoveredSet = false\n    this._isVisited = false\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const label = arguments[0]\n      this._label = label\n    }\n  }\n  setVisited(isVisited) {\n    this._isVisited = isVisited\n  }\n  setInResult(isInResult) {\n    this._isInResult = isInResult\n  }\n  isCovered() {\n    return this._isCovered\n  }\n  isCoveredSet() {\n    return this._isCoveredSet\n  }\n  setLabel(label) {\n    this._label = label\n  }\n  getLabel() {\n    return this._label\n  }\n  setCovered(isCovered) {\n    this._isCovered = isCovered\n    this._isCoveredSet = true\n  }\n  updateIM(im) {\n    Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label')\n    this.computeIM(im)\n  }\n  isInResult() {\n    return this._isInResult\n  }\n  isVisited() {\n    return this._isVisited\n  }\n}\n","import EdgeIntersectionList from './EdgeIntersectionList.js'\nimport IntersectionMatrix from '../geom/IntersectionMatrix.js'\nimport MonotoneChainEdge from './index/MonotoneChainEdge.js'\nimport Position from './Position.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Label from './Label.js'\nimport Envelope from '../geom/Envelope.js'\nimport StringBuilder from '../../../../java/lang/StringBuilder.js'\nimport Depth from './Depth.js'\nimport GraphComponent from './GraphComponent.js'\nexport default class Edge extends GraphComponent {\n  constructor() {\n    super()\n    Edge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.pts = null\n    this._env = null\n    this.eiList = new EdgeIntersectionList(this)\n    this._name = null\n    this._mce = null\n    this._isIsolated = true\n    this._depth = new Depth()\n    this._depthDelta = 0\n    if (arguments.length === 1) {\n      const pts = arguments[0]\n      Edge.constructor_.call(this, pts, null)\n    } else if (arguments.length === 2) {\n      const pts = arguments[0], label = arguments[1]\n      this.pts = pts\n      this._label = label\n    }\n  }\n  static updateIM() {\n    if (arguments.length === 2 && (arguments[1] instanceof IntersectionMatrix && arguments[0] instanceof Label)) {\n      const label = arguments[0], im = arguments[1]\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1)\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2)\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2)\n      }\n    } else {\n      return super.updateIM.apply(this, arguments)\n    }\n  }\n  getDepth() {\n    return this._depth\n  }\n  getCollapsedEdge() {\n    const newPts = new Array(2).fill(null)\n    newPts[0] = this.pts[0]\n    newPts[1] = this.pts[1]\n    const newe = new Edge(newPts, Label.toLineLabel(this._label))\n    return newe\n  }\n  isIsolated() {\n    return this._isIsolated\n  }\n  getCoordinates() {\n    return this.pts\n  }\n  setIsolated(isIsolated) {\n    this._isIsolated = isIsolated\n  }\n  setName(name) {\n    this._name = name\n  }\n  equals(o) {\n    if (!(o instanceof Edge)) return false\n    const e = o\n    if (this.pts.length !== e.pts.length) return false\n    let isEqualForward = true\n    let isEqualReverse = true\n    let iRev = this.pts.length\n    for (let i = 0; i < this.pts.length; i++) {\n      if (!this.pts[i].equals2D(e.pts[i])) \n        isEqualForward = false\n      \n      if (!this.pts[i].equals2D(e.pts[-- iRev])) \n        isEqualReverse = false\n      \n      if (!isEqualForward && !isEqualReverse) return false\n    }\n    return true\n  }\n  getCoordinate() {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) return this.pts[0]\n      return null\n    } else if (arguments.length === 1) {\n      const i = arguments[0]\n      return this.pts[i]\n    }\n  }\n  print(out) {\n    out.print('edge ' + this._name + ': ')\n    out.print('LINESTRING (')\n    for (let i = 0; i < this.pts.length; i++) {\n      if (i > 0) out.print(',')\n      out.print(this.pts[i].x + ' ' + this.pts[i].y)\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta)\n  }\n  computeIM(im) {\n    Edge.updateIM(this._label, im)\n  }\n  isCollapsed() {\n    if (!this._label.isArea()) return false\n    if (this.pts.length !== 3) return false\n    if (this.pts[0].equals(this.pts[2])) return true\n    return false\n  }\n  isClosed() {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  }\n  getMaximumSegmentIndex() {\n    return this.pts.length - 1\n  }\n  getDepthDelta() {\n    return this._depthDelta\n  }\n  getNumPoints() {\n    return this.pts.length\n  }\n  printReverse(out) {\n    out.print('edge ' + this._name + ': ')\n    for (let i = this.pts.length - 1; i >= 0; i--) \n      out.print(this.pts[i] + ' ')\n    \n    out.println('')\n  }\n  getMonotoneChainEdge() {\n    if (this._mce === null) this._mce = new MonotoneChainEdge(this)\n    return this._mce\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      this._env = new Envelope()\n      for (let i = 0; i < this.pts.length; i++) \n        this._env.expandToInclude(this.pts[i])\n      \n    }\n    return this._env\n  }\n  addIntersection(li, segmentIndex, geomIndex, intIndex) {\n    const intPt = new Coordinate(li.getIntersection(intIndex))\n    let normalizedSegmentIndex = segmentIndex\n    let dist = li.getEdgeDistance(geomIndex, intIndex)\n    const nextSegIndex = normalizedSegmentIndex + 1\n    if (nextSegIndex < this.pts.length) {\n      const nextPt = this.pts[nextSegIndex]\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex\n        dist = 0.0\n      }\n    }\n    const ei = this.eiList.add(intPt, normalizedSegmentIndex, dist)\n  }\n  toString() {\n    const builder = new StringBuilder()\n    builder.append('edge ' + this._name + ': ')\n    builder.append('LINESTRING (')\n    for (let i = 0; i < this.pts.length; i++) {\n      if (i > 0) builder.append(',')\n      builder.append(this.pts[i].x + ' ' + this.pts[i].y)\n    }\n    builder.append(')  ' + this._label + ' ' + this._depthDelta)\n    return builder.toString()\n  }\n  isPointwiseEqual(e) {\n    if (this.pts.length !== e.pts.length) return false\n    for (let i = 0; i < this.pts.length; i++) \n      if (!this.pts[i].equals2D(e.pts[i])) \n        return false\n      \n    \n    return true\n  }\n  setDepthDelta(depthDelta) {\n    this._depthDelta = depthDelta\n  }\n  getEdgeIntersectionList() {\n    return this.eiList\n  }\n  addIntersections(li, segmentIndex, geomIndex) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) \n      this.addIntersection(li, segmentIndex, geomIndex, i)\n    \n  }\n}\n","import Location from '../geom/Location.js'\nimport Label from './Label.js'\nimport GraphComponent from './GraphComponent.js'\nexport default class Node extends GraphComponent {\n  constructor() {\n    super()\n    Node.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coord = null\n    this._edges = null\n    const coord = arguments[0], edges = arguments[1]\n    this._coord = coord\n    this._edges = edges\n    this._label = new Label(0, Location.NONE)\n  }\n  isIncidentEdgeInResult() {\n    for (let it = this.getEdges().getEdges().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.getEdge().isInResult()) return true\n    }\n    return false\n  }\n  isIsolated() {\n    return this._label.getGeometryCount() === 1\n  }\n  getCoordinate() {\n    return this._coord\n  }\n  print(out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label)\n  }\n  computeIM(im) {}\n  computeMergedLocation(label2, eltIndex) {\n    let loc = Location.NONE\n    loc = this._label.getLocation(eltIndex)\n    if (!label2.isNull(eltIndex)) {\n      const nLoc = label2.getLocation(eltIndex)\n      if (loc !== Location.BOUNDARY) loc = nLoc\n    }\n    return loc\n  }\n  setLabel() {\n    if (arguments.length === 2 && (Number.isInteger(arguments[1]) && Number.isInteger(arguments[0]))) {\n      const argIndex = arguments[0], onLocation = arguments[1]\n      if (this._label === null) \n        this._label = new Label(argIndex, onLocation)\n      else this._label.setLocation(argIndex, onLocation)\n    } else {\n      return super.setLabel.apply(this, arguments)\n    }\n  }\n  getEdges() {\n    return this._edges\n  }\n  mergeLabel() {\n    if (arguments[0] instanceof Node) {\n      const n = arguments[0]\n      this.mergeLabel(n._label)\n    } else if (arguments[0] instanceof Label) {\n      const label2 = arguments[0]\n      for (let i = 0; i < 2; i++) {\n        const loc = this.computeMergedLocation(label2, i)\n        const thisLoc = this._label.getLocation(i)\n        if (thisLoc === Location.NONE) this._label.setLocation(i, loc)\n      }\n    }\n  }\n  add(e) {\n    this._edges.insert(e)\n    e.setNode(this)\n  }\n  setLabelBoundary(argIndex) {\n    if (this._label === null) return null\n    let loc = Location.NONE\n    if (this._label !== null) loc = this._label.getLocation(argIndex)\n    let newLoc = null\n    switch (loc) {\n    case Location.BOUNDARY:\n      newLoc = Location.INTERIOR\n      break\n    case Location.INTERIOR:\n      newLoc = Location.BOUNDARY\n      break\n    default:\n      newLoc = Location.BOUNDARY\n      break\n    }\n    this._label.setLocation(argIndex, newLoc)\n  }\n}\n","import Location from '../geom/Location.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Node from './Node.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class NodeMap {\n  constructor() {\n    NodeMap.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.nodeMap = new TreeMap()\n    this.nodeFact = null\n    const nodeFact = arguments[0]\n    this.nodeFact = nodeFact\n  }\n  find(coord) {\n    return this.nodeMap.get(coord)\n  }\n  addNode() {\n    if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      let node = this.nodeMap.get(coord)\n      if (node === null) {\n        node = this.nodeFact.createNode(coord)\n        this.nodeMap.put(coord, node)\n      }\n      return node\n    } else if (arguments[0] instanceof Node) {\n      const n = arguments[0]\n      const node = this.nodeMap.get(n.getCoordinate())\n      if (node === null) {\n        this.nodeMap.put(n.getCoordinate(), n)\n        return n\n      }\n      node.mergeLabel(n)\n      return node\n    }\n  }\n  print(out) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const n = it.next()\n      n.print(out)\n    }\n  }\n  iterator() {\n    return this.nodeMap.values().iterator()\n  }\n  values() {\n    return this.nodeMap.values()\n  }\n  getBoundaryNodes(geomIndex) {\n    const bdyNodes = new ArrayList()\n    for (let i = this.iterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node)\n    }\n    return bdyNodes\n  }\n  add(e) {\n    const p = e.getCoordinate()\n    const n = this.addNode(p)\n    n.add(e)\n  }\n}\n","import Orientation from '../algorithm/Orientation.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport Quadrant from './Quadrant.js'\nimport Assert from '../util/Assert.js'\nexport default class EdgeEnd {\n  constructor() {\n    EdgeEnd.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edge = null\n    this._label = null\n    this._node = null\n    this._p0 = null\n    this._p1 = null\n    this._dx = null\n    this._dy = null\n    this._quadrant = null\n    if (arguments.length === 1) {\n      const edge = arguments[0]\n      this._edge = edge\n    } else if (arguments.length === 3) {\n      const edge = arguments[0], p0 = arguments[1], p1 = arguments[2]\n      EdgeEnd.constructor_.call(this, edge, p0, p1, null)\n    } else if (arguments.length === 4) {\n      const edge = arguments[0], p0 = arguments[1], p1 = arguments[2], label = arguments[3]\n      EdgeEnd.constructor_.call(this, edge)\n      this.init(p0, p1)\n      this._label = label\n    }\n  }\n  compareDirection(e) {\n    if (this._dx === e._dx && this._dy === e._dy) return 0\n    if (this._quadrant > e._quadrant) return 1\n    if (this._quadrant < e._quadrant) return -1\n    return Orientation.index(e._p0, e._p1, this._p1)\n  }\n  getDy() {\n    return this._dy\n  }\n  getCoordinate() {\n    return this._p0\n  }\n  setNode(node) {\n    this._node = node\n  }\n  print(out) {\n    const angle = Math.atan2(this._dy, this._dx)\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label)\n  }\n  compareTo(obj) {\n    const e = obj\n    return this.compareDirection(e)\n  }\n  getDirectedCoordinate() {\n    return this._p1\n  }\n  getDx() {\n    return this._dx\n  }\n  getLabel() {\n    return this._label\n  }\n  getEdge() {\n    return this._edge\n  }\n  getQuadrant() {\n    return this._quadrant\n  }\n  getNode() {\n    return this._node\n  }\n  toString() {\n    const angle = Math.atan2(this._dy, this._dx)\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n  }\n  computeLabel(boundaryNodeRule) {}\n  init(p0, p1) {\n    this._p0 = p0\n    this._p1 = p1\n    this._dx = p1.x - p0.x\n    this._dy = p1.y - p0.y\n    this._quadrant = Quadrant.quadrant(this._dx, this._dy)\n    Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found')\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import Coordinate from './Coordinate.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\n\nexport default class TopologyException extends RuntimeException {\n  constructor(msg, pt) {\n    super(pt ? msg + ' [ ' + pt + ' ]' : msg)\n    this.pt = pt ? new Coordinate(pt) : undefined\n    this.name = Object.keys({ TopologyException })[0]\n  }\n  getCoordinate() {\n    return this.pt\n  }\n}\n","import Location from '../geom/Location.js'\nimport EdgeEnd from './EdgeEnd.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport Label from './Label.js'\nexport default class DirectedEdge extends EdgeEnd {\n  constructor() {\n    super()\n    DirectedEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isForward = null\n    this._isInResult = false\n    this._isVisited = false\n    this._sym = null\n    this._next = null\n    this._nextMin = null\n    this._edgeRing = null\n    this._minEdgeRing = null\n    this._depth = [0, -999, -999]\n    const edge = arguments[0], isForward = arguments[1]\n    EdgeEnd.constructor_.call(this, edge)\n    this._isForward = isForward\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1))\n    } else {\n      const n = edge.getNumPoints() - 1\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1))\n    }\n    this.computeDirectedLabel()\n  }\n  static depthFactor(currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1\n    return 0\n  }\n  getNextMin() {\n    return this._nextMin\n  }\n  getDepth(position) {\n    return this._depth[position]\n  }\n  setVisited(isVisited) {\n    this._isVisited = isVisited\n  }\n  computeDirectedLabel() {\n    this._label = new Label(this._edge.getLabel())\n    if (!this._isForward) this._label.flip()\n  }\n  getNext() {\n    return this._next\n  }\n  setDepth(position, depthVal) {\n    if (this._depth[position] !== -999) \n      if (this._depth[position] !== depthVal) throw new TopologyException('assigned depths do not match', this.getCoordinate())\n    \n    this._depth[position] = depthVal\n  }\n  isInteriorAreaEdge() {\n    let isInteriorAreaEdge = true\n    for (let i = 0; i < 2; i++) \n      if (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) \n        isInteriorAreaEdge = false\n      \n    \n    return isInteriorAreaEdge\n  }\n  setNextMin(nextMin) {\n    this._nextMin = nextMin\n  }\n  print(out) {\n    super.print.call(this, out)\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT])\n    out.print(' (' + this.getDepthDelta() + ')')\n    if (this._isInResult) out.print(' inResult')\n  }\n  setMinEdgeRing(minEdgeRing) {\n    this._minEdgeRing = minEdgeRing\n  }\n  isLineEdge() {\n    const isLine = this._label.isLine(0) || this._label.isLine(1)\n    const isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR)\n    const isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR)\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  }\n  setEdgeRing(edgeRing) {\n    this._edgeRing = edgeRing\n  }\n  getMinEdgeRing() {\n    return this._minEdgeRing\n  }\n  getDepthDelta() {\n    let depthDelta = this._edge.getDepthDelta()\n    if (!this._isForward) depthDelta = -depthDelta\n    return depthDelta\n  }\n  setInResult(isInResult) {\n    this._isInResult = isInResult\n  }\n  getSym() {\n    return this._sym\n  }\n  isForward() {\n    return this._isForward\n  }\n  getEdge() {\n    return this._edge\n  }\n  printEdge(out) {\n    this.print(out)\n    out.print(' ')\n    if (this._isForward) this._edge.print(out); else this._edge.printReverse(out)\n  }\n  setSym(de) {\n    this._sym = de\n  }\n  setVisitedEdge(isVisited) {\n    this.setVisited(isVisited)\n    this._sym.setVisited(isVisited)\n  }\n  setEdgeDepths(position, depth) {\n    let depthDelta = this.getEdge().getDepthDelta()\n    if (!this._isForward) depthDelta = -depthDelta\n    let directionFactor = 1\n    if (position === Position.LEFT) directionFactor = -1\n    const oppositePos = Position.opposite(position)\n    const delta = depthDelta * directionFactor\n    const oppositeDepth = depth + delta\n    this.setDepth(position, depth)\n    this.setDepth(oppositePos, oppositeDepth)\n  }\n  getEdgeRing() {\n    return this._edgeRing\n  }\n  isInResult() {\n    return this._isInResult\n  }\n  setNext(next) {\n    this._next = next\n  }\n  isVisited() {\n    return this._isVisited\n  }\n}\n","import Node from './Node.js'\nexport default class NodeFactory {\n  createNode(coord) {\n    return new Node(coord, null)\n  }\n}\n","import Location from '../geom/Location.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Node from './Node.js'\nimport NodeMap from './NodeMap.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport DirectedEdge from './DirectedEdge.js'\nimport System from '../../../../java/lang/System.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Quadrant from './Quadrant.js'\nimport NodeFactory from './NodeFactory.js'\nexport default class PlanarGraph {\n  constructor() {\n    PlanarGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edges = new ArrayList()\n    this._nodes = null\n    this._edgeEndList = new ArrayList()\n    if (arguments.length === 0) {\n      this._nodes = new NodeMap(new NodeFactory())\n    } else if (arguments.length === 1) {\n      const nodeFact = arguments[0]\n      this._nodes = new NodeMap(nodeFact)\n    }\n  }\n  static linkResultDirectedEdges(nodes) {\n    for (let nodeit = nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkResultDirectedEdges()\n    }\n  }\n  printEdges(out) {\n    out.println('Edges:')\n    for (let i = 0; i < this._edges.size(); i++) {\n      out.println('edge ' + i + ':')\n      const e = this._edges.get(i)\n      e.print(out)\n      e.eiList.print(out)\n    }\n  }\n  find(coord) {\n    return this._nodes.find(coord)\n  }\n  addNode() {\n    if (arguments[0] instanceof Node) {\n      const node = arguments[0]\n      return this._nodes.addNode(node)\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      return this._nodes.addNode(coord)\n    }\n  }\n  getNodeIterator() {\n    return this._nodes.iterator()\n  }\n  linkResultDirectedEdges() {\n    for (let nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkResultDirectedEdges()\n    }\n  }\n  debugPrintln(o) {\n    System.out.println(o)\n  }\n  isBoundaryNode(geomIndex, coord) {\n    const node = this._nodes.find(coord)\n    if (node === null) return false\n    const label = node.getLabel()\n    if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true\n    return false\n  }\n  linkAllDirectedEdges() {\n    for (let nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().linkAllDirectedEdges()\n    }\n  }\n  matchInSameDirection(p0, p1, ep0, ep1) {\n    if (!p0.equals(ep0)) return false\n    if (Orientation.index(p0, p1, ep1) === Orientation.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true\n    return false\n  }\n  getEdgeEnds() {\n    return this._edgeEndList\n  }\n  debugPrint(o) {\n    System.out.print(o)\n  }\n  getEdgeIterator() {\n    return this._edges.iterator()\n  }\n  findEdgeInSameDirection(p0, p1) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      const e = this._edges.get(i)\n      const eCoord = e.getCoordinates()\n      if (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e\n      if (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e\n    }\n    return null\n  }\n  insertEdge(e) {\n    this._edges.add(e)\n  }\n  findEdgeEnd(e) {\n    for (let i = this.getEdgeEnds().iterator(); i.hasNext(); ) {\n      const ee = i.next()\n      if (ee.getEdge() === e) return ee\n    }\n    return null\n  }\n  addEdges(edgesToAdd) {\n    for (let it = edgesToAdd.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      this._edges.add(e)\n      const de1 = new DirectedEdge(e, true)\n      const de2 = new DirectedEdge(e, false)\n      de1.setSym(de2)\n      de2.setSym(de1)\n      this.add(de1)\n      this.add(de2)\n    }\n  }\n  add(e) {\n    this._nodes.add(e)\n    this._edgeEndList.add(e)\n  }\n  getNodes() {\n    return this._nodes.values()\n  }\n  findEdge(p0, p1) {\n    for (let i = 0; i < this._edges.size(); i++) {\n      const e = this._edges.get(i)\n      const eCoord = e.getCoordinates()\n      if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e\n    }\n    return null\n  }\n}\n","import PointLocator from '../algorithm/PointLocator.js'\nimport Location from '../geom/Location.js'\nimport LineString from '../geom/LineString.js'\nimport HashMap from '../../../../java/util/HashMap.js'\nimport Geometry from '../geom/Geometry.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Position from './Position.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Point from '../geom/Point.js'\nimport Polygon from '../geom/Polygon.js'\nimport MultiPoint from '../geom/MultiPoint.js'\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector.js'\nimport LinearRing from '../geom/LinearRing.js'\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport SegmentIntersector from './index/SegmentIntersector.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nimport Label from './Label.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport Polygonal from '../geom/Polygonal.js'\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator.js'\nimport Assert from '../util/Assert.js'\nimport Edge from './Edge.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nimport PlanarGraph from './PlanarGraph.js'\nexport default class GeometryGraph extends PlanarGraph {\n  constructor() {\n    super()\n    GeometryGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parentGeom = null\n    this._lineEdgeMap = new HashMap()\n    this._boundaryNodeRule = null\n    this._useBoundaryDeterminationRule = true\n    this._argIndex = null\n    this._boundaryNodes = null\n    this._hasTooFewPoints = false\n    this._invalidPoint = null\n    this._areaPtLocator = null\n    this._ptLocator = new PointLocator()\n    if (arguments.length === 2) {\n      const argIndex = arguments[0], parentGeom = arguments[1]\n      GeometryGraph.constructor_.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)\n    } else if (arguments.length === 3) {\n      const argIndex = arguments[0], parentGeom = arguments[1], boundaryNodeRule = arguments[2]\n      this._argIndex = argIndex\n      this._parentGeom = parentGeom\n      this._boundaryNodeRule = boundaryNodeRule\n      if (parentGeom !== null) \n        this.add(parentGeom)\n      \n    }\n  }\n  static determineBoundary(boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  }\n  insertBoundaryPoint(argIndex, coord) {\n    const n = this._nodes.addNode(coord)\n    const lbl = n.getLabel()\n    let boundaryCount = 1\n    let loc = Location.NONE\n    loc = lbl.getLocation(argIndex, Position.ON)\n    if (loc === Location.BOUNDARY) boundaryCount++\n    const newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount)\n    lbl.setLocation(argIndex, newLoc)\n  }\n  computeSelfNodes() {\n    if (arguments.length === 2) {\n      const li = arguments[0], computeRingSelfNodes = arguments[1]\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      const li = arguments[0], computeRingSelfNodes = arguments[1], isDoneIfProperInt = arguments[2]\n      const si = new SegmentIntersector(li, true, false)\n      si.setIsDoneIfProperInt(isDoneIfProperInt)\n      const esi = this.createEdgeSetIntersector()\n      const isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon\n      const computeAllSegments = computeRingSelfNodes || !isRings\n      esi.computeIntersections(this._edges, si, computeAllSegments)\n      this.addSelfIntersectionNodes(this._argIndex)\n      return si\n    }\n  }\n  computeSplitEdges(edgelist) {\n    for (let i = this._edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      e.eiList.addSplitEdges(edgelist)\n    }\n  }\n  computeEdgeIntersections(g, li, includeProper) {\n    const si = new SegmentIntersector(li, includeProper, true)\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes())\n    const esi = this.createEdgeSetIntersector()\n    esi.computeIntersections(this._edges, g._edges, si)\n    return si\n  }\n  getGeometry() {\n    return this._parentGeom\n  }\n  getBoundaryNodeRule() {\n    return this._boundaryNodeRule\n  }\n  hasTooFewPoints() {\n    return this._hasTooFewPoints\n  }\n  addPoint() {\n    if (arguments[0] instanceof Point) {\n      const p = arguments[0]\n      const coord = p.getCoordinate()\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR)\n    } else if (arguments[0] instanceof Coordinate) {\n      const pt = arguments[0]\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR)\n    }\n  }\n  addPolygon(p) {\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      this.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR)\n    }\n  }\n  addEdge(e) {\n    this.insertEdge(e)\n    const coord = e.getCoordinates()\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY)\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY)\n  }\n  addLineString(line) {\n    const coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true\n      this._invalidPoint = coord[0]\n      return null\n    }\n    const e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR))\n    this._lineEdgeMap.put(line, e)\n    this.insertEdge(e)\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point')\n    this.insertBoundaryPoint(this._argIndex, coord[0])\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1])\n  }\n  getInvalidPoint() {\n    return this._invalidPoint\n  }\n  getBoundaryPoints() {\n    const coll = this.getBoundaryNodes()\n    const pts = new Array(coll.size()).fill(null)\n    let i = 0\n    for (let it = coll.iterator(); it.hasNext(); ) {\n      const node = it.next()\n      pts[i++] = node.getCoordinate().copy()\n    }\n    return pts\n  }\n  getBoundaryNodes() {\n    if (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex)\n    return this._boundaryNodes\n  }\n  addSelfIntersectionNode(argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) return null\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc)\n  }\n  addPolygonRing(lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) return null\n    const coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates())\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true\n      this._invalidPoint = coord[0]\n      return null\n    }\n    let left = cwLeft\n    let right = cwRight\n    if (Orientation.isCCW(coord)) {\n      left = cwRight\n      right = cwLeft\n    }\n    const e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right))\n    this._lineEdgeMap.put(lr, e)\n    this.insertEdge(e)\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY)\n  }\n  insertPoint(argIndex, coord, onLocation) {\n    const n = this._nodes.addNode(coord)\n    const lbl = n.getLabel()\n    if (lbl === null) \n      n._label = new Label(argIndex, onLocation)\n    else lbl.setLocation(argIndex, onLocation)\n  }\n  createEdgeSetIntersector() {\n    return new SimpleMCSweepLineIntersector()\n  }\n  addSelfIntersectionNodes(argIndex) {\n    for (let i = this._edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.eiList.iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        this.addSelfIntersectionNode(argIndex, ei.coord, eLoc)\n      }\n    }\n  }\n  add() {\n    if (arguments.length === 1 && arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      if (g.isEmpty()) return null\n      if (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false\n      if (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getGeometryType())\n    } else {\n      return super.add.apply(this, arguments)\n    }\n  }\n  addCollection(gc) {\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = gc.getGeometryN(i)\n      this.add(g)\n    }\n  }\n  locate(pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) \n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom)\n      \n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  }\n  findEdge() {\n    if (arguments.length === 1 && arguments[0] instanceof LineString) {\n      const line = arguments[0]\n      return this._lineEdgeMap.get(line)\n    } else {\n      return super.findEdge.apply(this, arguments)\n    }\n  }\n}\n","export default class KdNodeVisitor {\n  visit(node) {}\n}\n","import Coordinate from '../../geom/Coordinate.js'\nexport default class KdNode {\n  constructor() {\n    KdNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._p = null\n    this._data = null\n    this._left = null\n    this._right = null\n    this._count = null\n    if (arguments.length === 2) {\n      const p = arguments[0], data = arguments[1]\n      this._p = new Coordinate(p)\n      this._left = null\n      this._right = null\n      this._count = 1\n      this._data = data\n    } else if (arguments.length === 3) {\n      const _x = arguments[0], _y = arguments[1], data = arguments[2]\n      this._p = new Coordinate(_x, _y)\n      this._left = null\n      this._right = null\n      this._count = 1\n      this._data = data\n    }\n  }\n  isRepeated() {\n    return this._count > 1\n  }\n  getRight() {\n    return this._right\n  }\n  getCoordinate() {\n    return this._p\n  }\n  setLeft(_left) {\n    this._left = _left\n  }\n  getX() {\n    return this._p.x\n  }\n  getData() {\n    return this._data\n  }\n  getCount() {\n    return this._count\n  }\n  getLeft() {\n    return this._left\n  }\n  getY() {\n    return this._p.y\n  }\n  increment() {\n    this._count = this._count + 1\n  }\n  setRight(_right) {\n    this._right = _right\n  }\n}\n","import CoordinateList from '../../geom/CoordinateList.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport KdNodeVisitor from './KdNodeVisitor.js'\nimport Envelope from '../../geom/Envelope.js'\nimport List from '../../../../../java/util/List.js'\nimport KdNode from './KdNode.js'\nexport default class KdTree {\n  constructor() {\n    KdTree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._root = null\n    this._numberOfNodes = null\n    this._tolerance = null\n    if (arguments.length === 0) {\n      KdTree.constructor_.call(this, 0.0)\n    } else if (arguments.length === 1) {\n      const tolerance = arguments[0]\n      this._tolerance = tolerance\n    }\n  }\n  static toCoordinates() {\n    if (arguments.length === 1) {\n      const kdnodes = arguments[0]\n      return KdTree.toCoordinates(kdnodes, false)\n    } else if (arguments.length === 2) {\n      const kdnodes = arguments[0], includeRepeated = arguments[1]\n      const coord = new CoordinateList()\n      for (let it = kdnodes.iterator(); it.hasNext(); ) {\n        const node = it.next()\n        const count = includeRepeated ? node.getCount() : 1\n        for (let i = 0; i < count; i++) \n          coord.add(node.getCoordinate(), true)\n        \n      }\n      return coord.toCoordinateArray()\n    }\n  }\n  insert() {\n    if (arguments.length === 1) {\n      const p = arguments[0]\n      return this.insert(p, null)\n    } else if (arguments.length === 2) {\n      const p = arguments[0], data = arguments[1]\n      if (this._root === null) {\n        this._root = new KdNode(p, data)\n        return this._root\n      }\n      if (this._tolerance > 0) {\n        const matchNode = this.findBestMatchNode(p)\n        if (matchNode !== null) {\n          matchNode.increment()\n          return matchNode\n        }\n      }\n      return this.insertExact(p, data)\n    }\n  }\n  query() {\n    if (arguments.length === 1) {\n      const queryEnv = arguments[0]\n      const result = new ArrayList()\n      this.query(queryEnv, result)\n      return result\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n        const queryEnv = arguments[0], result = arguments[1]\n        this.queryNode(this._root, queryEnv, true, new (class {\n          get interfaces_() {\n            return [KdNodeVisitor]\n          }\n          visit(node) {\n            result.add(node)\n          }\n        })())\n      } else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n        const queryEnv = arguments[0], visitor = arguments[1]\n        this.queryNode(this._root, queryEnv, true, visitor)\n      }\n    }\n  }\n  queryNode(currentNode, queryEnv, odd, visitor) {\n    if (currentNode === null) return null\n    let min = null\n    let max = null\n    let discriminant = null\n    if (odd) {\n      min = queryEnv.getMinX()\n      max = queryEnv.getMaxX()\n      discriminant = currentNode.getX()\n    } else {\n      min = queryEnv.getMinY()\n      max = queryEnv.getMaxY()\n      discriminant = currentNode.getY()\n    }\n    const searchLeft = min < discriminant\n    const searchRight = discriminant <= max\n    if (searchLeft) \n      this.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor)\n    \n    if (queryEnv.contains(currentNode.getCoordinate())) \n      visitor.visit(currentNode)\n    \n    if (searchRight) \n      this.queryNode(currentNode.getRight(), queryEnv, !odd, visitor)\n    \n  }\n  findBestMatchNode(p) {\n    const visitor = new BestMatchVisitor(p, this._tolerance)\n    this.query(visitor.queryEnvelope(), visitor)\n    return visitor.getNode()\n  }\n  isEmpty() {\n    if (this._root === null) return true\n    return false\n  }\n  insertExact(p, data) {\n    let currentNode = this._root\n    let leafNode = this._root\n    let isOddLevel = true\n    let isLessThan = true\n    while (currentNode !== null) {\n      if (currentNode !== null) {\n        const isInTolerance = p.distance(currentNode.getCoordinate()) <= this._tolerance\n        if (isInTolerance) {\n          currentNode.increment()\n          return currentNode\n        }\n      }\n      if (isOddLevel) \n        isLessThan = p.x < currentNode.getX()\n      else \n        isLessThan = p.y < currentNode.getY()\n      \n      leafNode = currentNode\n      if (isLessThan) \n        currentNode = currentNode.getLeft()\n      else \n        currentNode = currentNode.getRight()\n      \n      isOddLevel = !isOddLevel\n    }\n    this._numberOfNodes = this._numberOfNodes + 1\n    const node = new KdNode(p, data)\n    if (isLessThan) \n      leafNode.setLeft(node)\n    else \n      leafNode.setRight(node)\n    \n    return node\n  }\n}\nclass BestMatchVisitor {\n  constructor() {\n    BestMatchVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._tolerance = null\n    this._matchNode = null\n    this._matchDist = 0.0\n    this._p = null\n    const p = arguments[0], tolerance = arguments[1]\n    this._p = p\n    this._tolerance = tolerance\n  }\n  visit(node) {\n    const dist = this._p.distance(node.getCoordinate())\n    const isInTolerance = dist <= this._tolerance\n    if (!isInTolerance) return null\n    let update = false\n    if (this._matchNode === null || dist < this._matchDist || this._matchNode !== null && dist === this._matchDist && node.getCoordinate().compareTo(this._matchNode.getCoordinate()) < 1) update = true\n    if (update) {\n      this._matchNode = node\n      this._matchDist = dist\n    }\n  }\n  queryEnvelope() {\n    const queryEnv = new Envelope(this._p)\n    queryEnv.expandBy(this._tolerance)\n    return queryEnv\n  }\n  getNode() {\n    return this._matchNode\n  }\n  get interfaces_() {\n    return [KdNodeVisitor]\n  }\n}\nKdTree.BestMatchVisitor = BestMatchVisitor\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nexport default class NodeBase {\n  constructor() {\n    NodeBase.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._items = new ArrayList()\n    this._subnode = new Array(4).fill(null)\n  }\n  static getSubnodeIndex(env, centrex, centrey) {\n    let subnodeIndex = -1\n    if (env.getMinX() >= centrex) {\n      if (env.getMinY() >= centrey) subnodeIndex = 3\n      if (env.getMaxY() <= centrey) subnodeIndex = 1\n    }\n    if (env.getMaxX() <= centrex) {\n      if (env.getMinY() >= centrey) subnodeIndex = 2\n      if (env.getMaxY() <= centrey) subnodeIndex = 0\n    }\n    return subnodeIndex\n  }\n  hasChildren() {\n    for (let i = 0; i < 4; i++) \n      if (this._subnode[i] !== null) return true\n    \n    return false\n  }\n  isPrunable() {\n    return !(this.hasChildren() || this.hasItems())\n  }\n  addAllItems(resultItems) {\n    resultItems.addAll(this._items)\n    for (let i = 0; i < 4; i++) \n      if (this._subnode[i] !== null) \n        this._subnode[i].addAllItems(resultItems)\n      \n    \n    return resultItems\n  }\n  getNodeCount() {\n    let subSize = 0\n    for (let i = 0; i < 4; i++) \n      if (this._subnode[i] !== null) \n        subSize += this._subnode[i].size()\n      \n    \n    return subSize + 1\n  }\n  size() {\n    let subSize = 0\n    for (let i = 0; i < 4; i++) \n      if (this._subnode[i] !== null) \n        subSize += this._subnode[i].size()\n      \n    \n    return subSize + this._items.size()\n  }\n  addAllItemsFromOverlapping(searchEnv, resultItems) {\n    if (!this.isSearchMatch(searchEnv)) return null\n    resultItems.addAll(this._items)\n    for (let i = 0; i < 4; i++) \n      if (this._subnode[i] !== null) \n        this._subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems)\n      \n    \n  }\n  visitItems(searchEnv, visitor) {\n    for (let i = this._items.iterator(); i.hasNext(); ) \n      visitor.visitItem(i.next())\n    \n  }\n  hasItems() {\n    return !this._items.isEmpty()\n  }\n  remove(itemEnv, item) {\n    if (!this.isSearchMatch(itemEnv)) return false\n    let found = false\n    for (let i = 0; i < 4; i++) \n      if (this._subnode[i] !== null) {\n        found = this._subnode[i].remove(itemEnv, item)\n        if (found) {\n          if (this._subnode[i].isPrunable()) this._subnode[i] = null\n          break\n        }\n      }\n    \n    if (found) return found\n    found = this._items.remove(item)\n    return found\n  }\n  visit(searchEnv, visitor) {\n    if (!this.isSearchMatch(searchEnv)) return null\n    this.visitItems(searchEnv, visitor)\n    for (let i = 0; i < 4; i++) \n      if (this._subnode[i] !== null) \n        this._subnode[i].visit(searchEnv, visitor)\n      \n    \n  }\n  getItems() {\n    return this._items\n  }\n  depth() {\n    let maxSubDepth = 0\n    for (let i = 0; i < 4; i++) \n      if (this._subnode[i] !== null) {\n        const sqd = this._subnode[i].depth()\n        if (sqd > maxSubDepth) maxSubDepth = sqd\n      }\n    \n    return maxSubDepth + 1\n  }\n  isEmpty() {\n    let isEmpty = true\n    if (!this._items.isEmpty()) isEmpty = false; else \n      for (let i = 0; i < 4; i++) \n        if (this._subnode[i] !== null) \n          if (!this._subnode[i].isEmpty()) {\n            isEmpty = false\n            break\n          }\n        \n      \n    \n    return isEmpty\n  }\n  add(item) {\n    this._items.add(item)\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\n","export default function DoubleBits() { }\nDoubleBits.exponent = function(d) {\n  return CVTFWD(64, d) - 1023\n}\nDoubleBits.powerOf2 = function(exp) {\n  return Math.pow(2, exp)\n}\n\n/**\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\n * http://www.merlyn.demon.co.uk/js-exact.htm\n *\n * @param {Number}\n *          NumW 32 or 64 to denote the number of bits.\n * @param {Number}\n *          Qty the number to calculate the bit pattern for.\n * @return {Number} The integer value of the exponent.\n * @private\n */\nfunction CVTFWD(NumW, Qty) {\n  let Sign\n  let Expo\n  let Mant\n  let Bin\n  const Inf = {\n    32: {\n      d: 0x7F,\n      c: 0x80,\n      b: 0,\n      a: 0\n    },\n    64: {\n      d: 0x7FF0,\n      c: 0,\n      b: 0,\n      a: 0\n    }\n  }\n  const ExW = {\n    32: 8,\n    64: 11\n  }[NumW]\n\n  if (!Bin) {\n    Sign = Qty < 0 || 1 / Qty < 0 // OK for +-0\n    if (!isFinite(Qty)) {\n      Bin = Inf[NumW]\n      if (Sign) Bin.d += 1 << (NumW / 4 - 1)\n\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  if (!Bin) {\n    Expo = {\n      32: 127,\n      64: 1023\n    }[NumW]\n    Mant = Math.abs(Qty)\n    while (Mant >= 2) {\n      Expo++\n      Mant /= 2\n    }\n    while (Mant < 1 && Expo > 0) {\n      Expo--\n      Mant *= 2\n    }\n    if (Expo <= 0) Mant /= 2\n\n    if (NumW === 32 && Expo > 254) {\n      Bin = {\n        d: Sign ? 0xFF : 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  return Expo\n}\n","import Coordinate from '../../geom/Coordinate.js'\nimport DoubleBits from './DoubleBits.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class Key {\n  constructor() {\n    Key.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pt = new Coordinate()\n    this._level = 0\n    this._env = null\n    const itemEnv = arguments[0]\n    this.computeKey(itemEnv)\n  }\n  static computeQuadLevel(env) {\n    const dx = env.getWidth()\n    const dy = env.getHeight()\n    const dMax = dx > dy ? dx : dy\n    const level = DoubleBits.exponent(dMax) + 1\n    return level\n  }\n  getLevel() {\n    return this._level\n  }\n  computeKey() {\n    if (arguments.length === 1) {\n      const itemEnv = arguments[0]\n      this._level = Key.computeQuadLevel(itemEnv)\n      this._env = new Envelope()\n      this.computeKey(this._level, itemEnv)\n      while (!this._env.contains(itemEnv)) {\n        this._level += 1\n        this.computeKey(this._level, itemEnv)\n      }\n    } else if (arguments.length === 2) {\n      const level = arguments[0], itemEnv = arguments[1]\n      const quadSize = DoubleBits.powerOf2(level)\n      this._pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize\n      this._pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize\n      this._env.init(this._pt.x, this._pt.x + quadSize, this._pt.y, this._pt.y + quadSize)\n    }\n  }\n  getEnvelope() {\n    return this._env\n  }\n  getCentre() {\n    return new Coordinate((this._env.getMinX() + this._env.getMaxX()) / 2, (this._env.getMinY() + this._env.getMaxY()) / 2)\n  }\n  getPoint() {\n    return this._pt\n  }\n}\n","import NodeBase from './NodeBase.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Assert from '../../util/Assert.js'\nimport Key from './Key.js'\nexport default class Node extends NodeBase {\n  constructor() {\n    super()\n    Node.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._env = null\n    this._centrex = null\n    this._centrey = null\n    this._level = null\n    const env = arguments[0], level = arguments[1]\n    this._env = env\n    this._level = level\n    this._centrex = (env.getMinX() + env.getMaxX()) / 2\n    this._centrey = (env.getMinY() + env.getMaxY()) / 2\n  }\n  static createNode(env) {\n    const key = new Key(env)\n    const node = new Node(key.getEnvelope(), key.getLevel())\n    return node\n  }\n  static createExpanded(node, addEnv) {\n    const expandEnv = new Envelope(addEnv)\n    if (node !== null) expandEnv.expandToInclude(node._env)\n    const largerNode = Node.createNode(expandEnv)\n    if (node !== null) largerNode.insertNode(node)\n    return largerNode\n  }\n  find(searchEnv) {\n    const subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey)\n    if (subnodeIndex === -1) return this\n    if (this._subnode[subnodeIndex] !== null) {\n      const node = this._subnode[subnodeIndex]\n      return node.find(searchEnv)\n    }\n    return this\n  }\n  isSearchMatch(searchEnv) {\n    if (searchEnv === null) return false\n    return this._env.intersects(searchEnv)\n  }\n  getSubnode(index) {\n    if (this._subnode[index] === null) \n      this._subnode[index] = this.createSubnode(index)\n    \n    return this._subnode[index]\n  }\n  getEnvelope() {\n    return this._env\n  }\n  getNode(searchEnv) {\n    const subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey)\n    if (subnodeIndex !== -1) {\n      const node = this.getSubnode(subnodeIndex)\n      return node.getNode(searchEnv)\n    } else {\n      return this\n    }\n  }\n  createSubnode(index) {\n    let minx = 0.0\n    let maxx = 0.0\n    let miny = 0.0\n    let maxy = 0.0\n    switch (index) {\n    case 0:\n      minx = this._env.getMinX()\n      maxx = this._centrex\n      miny = this._env.getMinY()\n      maxy = this._centrey\n      break\n    case 1:\n      minx = this._centrex\n      maxx = this._env.getMaxX()\n      miny = this._env.getMinY()\n      maxy = this._centrey\n      break\n    case 2:\n      minx = this._env.getMinX()\n      maxx = this._centrex\n      miny = this._centrey\n      maxy = this._env.getMaxY()\n      break\n    case 3:\n      minx = this._centrex\n      maxx = this._env.getMaxX()\n      miny = this._centrey\n      maxy = this._env.getMaxY()\n      break\n    }\n    const sqEnv = new Envelope(minx, maxx, miny, maxy)\n    const node = new Node(sqEnv, this._level - 1)\n    return node\n  }\n  insertNode(node) {\n    Assert.isTrue(this._env === null || this._env.contains(node._env))\n    const index = NodeBase.getSubnodeIndex(node._env, this._centrex, this._centrey)\n    if (node._level === this._level - 1) {\n      this._subnode[index] = node\n    } else {\n      const childNode = this.createSubnode(index)\n      childNode.insertNode(node)\n      this._subnode[index] = childNode\n    }\n  }\n}\n","import DoubleBits from './DoubleBits.js'\nexport default class IntervalSize {\n  static isZeroWidth(min, max) {\n    const width = max - min\n    if (width === 0.0) return true\n    const maxAbs = Math.max(Math.abs(min), Math.abs(max))\n    const scaledInterval = width / maxAbs\n    const level = DoubleBits.exponent(scaledInterval)\n    return level <= IntervalSize.MIN_BINARY_EXPONENT\n  }\n}\nIntervalSize.MIN_BINARY_EXPONENT = -50\n","import Coordinate from '../../geom/Coordinate.js'\nimport NodeBase from './NodeBase.js'\nimport Node from './Node.js'\nimport IntervalSize from './IntervalSize.js'\nimport Assert from '../../util/Assert.js'\nexport default class Root extends NodeBase {\n  constructor() {\n    super()\n  }\n  insert(itemEnv, item) {\n    const index = NodeBase.getSubnodeIndex(itemEnv, Root.origin.x, Root.origin.y)\n    if (index === -1) {\n      this.add(item)\n      return null\n    }\n    const node = this._subnode[index]\n    if (node === null || !node.getEnvelope().contains(itemEnv)) {\n      const largerNode = Node.createExpanded(node, itemEnv)\n      this._subnode[index] = largerNode\n    }\n    this.insertContained(this._subnode[index], itemEnv, item)\n  }\n  isSearchMatch(searchEnv) {\n    return true\n  }\n  insertContained(tree, itemEnv, item) {\n    Assert.isTrue(tree.getEnvelope().contains(itemEnv))\n    const isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX())\n    const isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY())\n    let node = null\n    if (isZeroX || isZeroY) node = tree.find(itemEnv); else node = tree.getNode(itemEnv)\n    node.add(item)\n  }\n}\nRoot.origin = new Coordinate(0.0, 0.0)\n","export default class SpatialIndex {\n  insert(itemEnv, item) {}\n  remove(itemEnv, item) {}\n  query() {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0], visitor = arguments[1]\n    }\n  }\n}\n","import Root from './Root.js'\nimport SpatialIndex from '../SpatialIndex.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport ArrayListVisitor from '../ArrayListVisitor.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class Quadtree {\n  constructor() {\n    Quadtree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._root = null\n    this._minExtent = 1.0\n    this._root = new Root()\n  }\n  static ensureExtent(itemEnv, minExtent) {\n    let minx = itemEnv.getMinX()\n    let maxx = itemEnv.getMaxX()\n    let miny = itemEnv.getMinY()\n    let maxy = itemEnv.getMaxY()\n    if (minx !== maxx && miny !== maxy) return itemEnv\n    if (minx === maxx) {\n      minx = minx - minExtent / 2.0\n      maxx = maxx + minExtent / 2.0\n    }\n    if (miny === maxy) {\n      miny = miny - minExtent / 2.0\n      maxy = maxy + minExtent / 2.0\n    }\n    return new Envelope(minx, maxx, miny, maxy)\n  }\n  size() {\n    if (this._root !== null) return this._root.size()\n    return 0\n  }\n  insert(itemEnv, item) {\n    this.collectStats(itemEnv)\n    const insertEnv = Quadtree.ensureExtent(itemEnv, this._minExtent)\n    this._root.insert(insertEnv, item)\n  }\n  query() {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n      const visitor = new ArrayListVisitor()\n      this.query(searchEnv, visitor)\n      return visitor.getItems()\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0], visitor = arguments[1]\n      this._root.visit(searchEnv, visitor)\n    }\n  }\n  queryAll() {\n    const foundItems = new ArrayList()\n    this._root.addAllItems(foundItems)\n    return foundItems\n  }\n  remove(itemEnv, item) {\n    const posEnv = Quadtree.ensureExtent(itemEnv, this._minExtent)\n    return this._root.remove(posEnv, item)\n  }\n  collectStats(itemEnv) {\n    const delX = itemEnv.getWidth()\n    if (delX < this._minExtent && delX > 0.0) this._minExtent = delX\n    const delY = itemEnv.getHeight()\n    if (delY < this._minExtent && delY > 0.0) this._minExtent = delY\n  }\n  depth() {\n    if (this._root !== null) return this._root.depth()\n    return 0\n  }\n  isEmpty() {\n    if (this._root === null) return true\n    return this._root.isEmpty()\n  }\n  get interfaces_() {\n    return [SpatialIndex, Serializable]\n  }\n}\n","export default class Boundable {\n  getBounds() {}\n}\n","import Boundable from './Boundable.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nexport default class ItemBoundable {\n  constructor() {\n    ItemBoundable.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._bounds = null\n    this._item = null\n    const bounds = arguments[0], item = arguments[1]\n    this._bounds = bounds\n    this._item = item\n  }\n  getItem() {\n    return this._item\n  }\n  getBounds() {\n    return this._bounds\n  }\n  get interfaces_() {\n    return [Boundable, Serializable]\n  }\n}\n","import ArrayList from '../../../../java/util/ArrayList.js'\nexport default class PriorityQueue {\n  constructor() {\n    PriorityQueue.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._size = null\n    this._items = null\n    this._size = 0\n    this._items = new ArrayList()\n    this._items.add(null)\n  }\n  poll() {\n    if (this.isEmpty()) return null\n    const minItem = this._items.get(1)\n    this._items.set(1, this._items.get(this._size))\n    this._size -= 1\n    this.reorder(1)\n    return minItem\n  }\n  size() {\n    return this._size\n  }\n  reorder(hole) {\n    let child = null\n    const tmp = this._items.get(hole)\n    for (; hole * 2 <= this._size; hole = child) {\n      child = hole * 2\n      if (child !== this._size && this._items.get(child + 1).compareTo(this._items.get(child)) < 0) child++\n      if (this._items.get(child).compareTo(tmp) < 0) this._items.set(hole, this._items.get(child)); else break\n    }\n    this._items.set(hole, tmp)\n  }\n  clear() {\n    this._size = 0\n    this._items.clear()\n  }\n  peek() {\n    if (this.isEmpty()) return null\n    const minItem = this._items.get(1)\n    return minItem\n  }\n  isEmpty() {\n    return this._size === 0\n  }\n  add(x) {\n    this._items.add(null)\n    this._size += 1\n    let hole = this._size\n    this._items.set(0, x)\n    for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) \n      this._items.set(hole, this._items.get(Math.trunc(hole / 2)))\n    \n    this._items.set(hole, x)\n  }\n}\n","import Boundable from './Boundable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Assert from '../../util/Assert.js'\nexport default class AbstractNode {\n  constructor() {\n    AbstractNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._childBoundables = new ArrayList()\n    this._bounds = null\n    this._level = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const level = arguments[0]\n      this._level = level\n    }\n  }\n  getLevel() {\n    return this._level\n  }\n  size() {\n    return this._childBoundables.size()\n  }\n  getChildBoundables() {\n    return this._childBoundables\n  }\n  addChildBoundable(childBoundable) {\n    Assert.isTrue(this._bounds === null)\n    this._childBoundables.add(childBoundable)\n  }\n  isEmpty() {\n    return this._childBoundables.isEmpty()\n  }\n  getBounds() {\n    if (this._bounds === null) \n      this._bounds = this.computeBounds()\n    \n    return this._bounds\n  }\n  get interfaces_() {\n    return [Boundable, Serializable]\n  }\n}\n","export default class EnvelopeDistance {\n  static maxDistance(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2) {\n    let dist = EnvelopeDistance.distance(ax1, ay1, bx1, by1)\n    dist = Math.max(dist, EnvelopeDistance.distance(ax1, ay1, bx2, by2))\n    dist = Math.max(dist, EnvelopeDistance.distance(ax2, ay2, bx1, by1))\n    dist = Math.max(dist, EnvelopeDistance.distance(ax2, ay2, bx2, by2))\n    return dist\n  }\n  static distance(x1, y1, x2, y2) {\n    const dx = x2 - x1\n    const dy = y2 - y1\n    return Math.sqrt(dx * dx + dy * dy)\n  }\n  static maximumDistance(env1, env2) {\n    const minx = Math.min(env1.getMinX(), env2.getMinX())\n    const miny = Math.min(env1.getMinY(), env2.getMinY())\n    const maxx = Math.max(env1.getMaxX(), env2.getMaxX())\n    const maxy = Math.max(env1.getMaxY(), env2.getMaxY())\n    return EnvelopeDistance.distance(minx, miny, maxx, maxy)\n  }\n  static minMaxDistance(a, b) {\n    const aminx = a.getMinX()\n    const aminy = a.getMinY()\n    const amaxx = a.getMaxX()\n    const amaxy = a.getMaxY()\n    const bminx = b.getMinX()\n    const bminy = b.getMinY()\n    const bmaxx = b.getMaxX()\n    const bmaxy = b.getMaxY()\n    let dist = EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bminx, bminy, bminx, bmaxy)\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, aminx, amaxy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(aminx, aminy, amaxx, aminy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, aminx, amaxy, bmaxx, bmaxy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bminx, bminy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bminx, bminy, bmaxx, bminy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bmaxx, bmaxy, bminx, bmaxy))\n    dist = Math.min(dist, EnvelopeDistance.maxDistance(amaxx, amaxy, amaxx, aminy, bmaxx, bmaxy, bmaxx, bminy))\n    return dist\n  }\n}\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport AbstractNode from './AbstractNode.js'\nimport EnvelopeDistance from './EnvelopeDistance.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nexport default class BoundablePair {\n  constructor() {\n    BoundablePair.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._boundable1 = null\n    this._boundable2 = null\n    this._distance = null\n    this._itemDistance = null\n    const boundable1 = arguments[0], boundable2 = arguments[1], itemDistance = arguments[2]\n    this._boundable1 = boundable1\n    this._boundable2 = boundable2\n    this._itemDistance = itemDistance\n    this._distance = this.distance()\n  }\n  static area(b) {\n    return b.getBounds().getArea()\n  }\n  static isComposite(item) {\n    return item instanceof AbstractNode\n  }\n  maximumDistance() {\n    return EnvelopeDistance.maximumDistance(this._boundable1.getBounds(), this._boundable2.getBounds())\n  }\n  expandToQueue(priQ, minDistance) {\n    const isComp1 = BoundablePair.isComposite(this._boundable1)\n    const isComp2 = BoundablePair.isComposite(this._boundable2)\n    if (isComp1 && isComp2) {\n      if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n        this.expand(this._boundable1, this._boundable2, false, priQ, minDistance)\n        return null\n      } else {\n        this.expand(this._boundable2, this._boundable1, true, priQ, minDistance)\n        return null\n      }\n    } else if (isComp1) {\n      this.expand(this._boundable1, this._boundable2, false, priQ, minDistance)\n      return null\n    } else if (isComp2) {\n      this.expand(this._boundable2, this._boundable1, true, priQ, minDistance)\n      return null\n    }\n    throw new IllegalArgumentException('neither boundable is composite')\n  }\n  isLeaves() {\n    return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n  }\n  compareTo(o) {\n    const nd = o\n    if (this._distance < nd._distance) return -1\n    if (this._distance > nd._distance) return 1\n    return 0\n  }\n  expand(bndComposite, bndOther, isFlipped, priQ, minDistance) {\n    const children = bndComposite.getChildBoundables()\n    for (let i = children.iterator(); i.hasNext(); ) {\n      const child = i.next()\n      let bp = null\n      if (isFlipped) \n        bp = new BoundablePair(bndOther, child, this._itemDistance)\n      else \n        bp = new BoundablePair(child, bndOther, this._itemDistance)\n      \n      if (bp.getDistance() < minDistance) \n        priQ.add(bp)\n      \n    }\n  }\n  getBoundable(i) {\n    if (i === 0) return this._boundable1\n    return this._boundable2\n  }\n  getDistance() {\n    return this._distance\n  }\n  distance() {\n    if (this.isLeaves()) \n      return this._itemDistance.distance(this._boundable1, this._boundable2)\n    \n    return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import ItemBoundable from './ItemBoundable.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport ItemVisitor from '../ItemVisitor.js'\nimport AbstractNode from './AbstractNode.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Assert from '../../util/Assert.js'\nimport List from '../../../../../java/util/List.js'\nexport default class AbstractSTRtree {\n  constructor() {\n    AbstractSTRtree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._root = null\n    this._built = false\n    this._itemBoundables = new ArrayList()\n    this._nodeCapacity = null\n    if (arguments.length === 0) {\n      AbstractSTRtree.constructor_.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY)\n    } else if (arguments.length === 1) {\n      const nodeCapacity = arguments[0]\n      Assert.isTrue(nodeCapacity > 1, 'Node capacity must be greater than 1')\n      this._nodeCapacity = nodeCapacity\n    }\n  }\n  static compareDoubles(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0\n  }\n  queryInternal() {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      const searchBounds = arguments[0], node = arguments[1], visitor = arguments[2]\n      const childBoundables = node.getChildBoundables()\n      for (let i = 0; i < childBoundables.size(); i++) {\n        const childBoundable = childBoundables.get(i)\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) \n          this.queryInternal(searchBounds, childBoundable, visitor)\n        else if (childBoundable instanceof ItemBoundable) \n          visitor.visitItem(childBoundable.getItem())\n        else \n          Assert.shouldNeverReachHere()\n        \n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      const searchBounds = arguments[0], node = arguments[1], matches = arguments[2]\n      const childBoundables = node.getChildBoundables()\n      for (let i = 0; i < childBoundables.size(); i++) {\n        const childBoundable = childBoundables.get(i)\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) \n          this.queryInternal(searchBounds, childBoundable, matches)\n        else if (childBoundable instanceof ItemBoundable) \n          matches.add(childBoundable.getItem())\n        else \n          Assert.shouldNeverReachHere()\n        \n      }\n    }\n  }\n  getNodeCapacity() {\n    return this._nodeCapacity\n  }\n  lastNode(nodes) {\n    return nodes.get(nodes.size() - 1)\n  }\n  size() {\n    if (arguments.length === 0) {\n      if (this.isEmpty()) \n        return 0\n      \n      this.build()\n      return this.size(this._root)\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      let size = 0\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) \n          size += this.size(childBoundable)\n        else if (childBoundable instanceof ItemBoundable) \n          size += 1\n        \n      }\n      return size\n    }\n  }\n  removeItem(node, item) {\n    let childToRemove = null\n    for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (childBoundable instanceof ItemBoundable) \n        if (childBoundable.getItem() === item) childToRemove = childBoundable\n      \n    }\n    if (childToRemove !== null) {\n      node.getChildBoundables().remove(childToRemove)\n      return true\n    }\n    return false\n  }\n  itemsTree() {\n    if (arguments.length === 0) {\n      this.build()\n      const valuesTree = this.itemsTree(this._root)\n      if (valuesTree === null) return new ArrayList()\n      return valuesTree\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      const valuesTreeForNode = new ArrayList()\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          const valuesTreeForChild = this.itemsTree(childBoundable)\n          if (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild)\n        } else if (childBoundable instanceof ItemBoundable) {\n          valuesTreeForNode.add(childBoundable.getItem())\n        } else {\n          Assert.shouldNeverReachHere()\n        }\n      }\n      if (valuesTreeForNode.size() <= 0) return null\n      return valuesTreeForNode\n    }\n  }\n  insert(bounds, item) {\n    Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.')\n    this._itemBoundables.add(new ItemBoundable(bounds, item))\n  }\n  boundablesAtLevel() {\n    if (arguments.length === 1) {\n      const level = arguments[0]\n      const boundables = new ArrayList()\n      this.boundablesAtLevel(level, this._root, boundables)\n      return boundables\n    } else if (arguments.length === 3) {\n      const level = arguments[0], top = arguments[1], boundables = arguments[2]\n      Assert.isTrue(level > -2)\n      if (top.getLevel() === level) {\n        boundables.add(top)\n        return null\n      }\n      for (let i = top.getChildBoundables().iterator(); i.hasNext(); ) {\n        const boundable = i.next()\n        if (boundable instanceof AbstractNode) {\n          this.boundablesAtLevel(level, boundable, boundables)\n        } else {\n          Assert.isTrue(boundable instanceof ItemBoundable)\n          if (level === -1) \n            boundables.add(boundable)\n          \n        }\n      }\n      return null\n    }\n  }\n  query() {\n    if (arguments.length === 1) {\n      const searchBounds = arguments[0]\n      this.build()\n      const matches = new ArrayList()\n      if (this.isEmpty()) \n        return matches\n      \n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        this.queryInternal(searchBounds, this._root, matches)\n      \n      return matches\n    } else if (arguments.length === 2) {\n      const searchBounds = arguments[0], visitor = arguments[1]\n      this.build()\n      if (this.isEmpty()) \n        return null\n      \n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        this.queryInternal(searchBounds, this._root, visitor)\n      \n    }\n  }\n  build() {\n    if (this._built) return null\n    this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1)\n    this._itemBoundables = null\n    this._built = true\n  }\n  getRoot() {\n    this.build()\n    return this._root\n  }\n  remove() {\n    if (arguments.length === 2) {\n      const searchBounds = arguments[0], item = arguments[1]\n      this.build()\n      if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) \n        return this.remove(searchBounds, this._root, item)\n      \n      return false\n    } else if (arguments.length === 3) {\n      const searchBounds = arguments[0], node = arguments[1], item = arguments[2]\n      let found = this.removeItem(node, item)\n      if (found) return true\n      let childToPrune = null\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) \n          continue\n        \n        if (childBoundable instanceof AbstractNode) {\n          found = this.remove(searchBounds, childBoundable, item)\n          if (found) {\n            childToPrune = childBoundable\n            break\n          }\n        }\n      }\n      if (childToPrune !== null) \n        if (childToPrune.getChildBoundables().isEmpty()) \n          node.getChildBoundables().remove(childToPrune)\n        \n      \n      return found\n    }\n  }\n  createHigherLevels(boundablesOfALevel, level) {\n    Assert.isTrue(!boundablesOfALevel.isEmpty())\n    const parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1)\n    if (parentBoundables.size() === 1) \n      return parentBoundables.get(0)\n    \n    return this.createHigherLevels(parentBoundables, level + 1)\n  }\n  depth() {\n    if (arguments.length === 0) {\n      if (this.isEmpty()) \n        return 0\n      \n      this.build()\n      return this.depth(this._root)\n    } else if (arguments.length === 1) {\n      const node = arguments[0]\n      let maxChildDepth = 0\n      for (let i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n        const childBoundable = i.next()\n        if (childBoundable instanceof AbstractNode) {\n          const childDepth = this.depth(childBoundable)\n          if (childDepth > maxChildDepth) maxChildDepth = childDepth\n        }\n      }\n      return maxChildDepth + 1\n    }\n  }\n  createParentBoundables(childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty())\n    const parentBoundables = new ArrayList()\n    parentBoundables.add(this.createNode(newLevel))\n    const sortedChildBoundables = new ArrayList(childBoundables)\n    Collections.sort(sortedChildBoundables, this.getComparator())\n    for (let i = sortedChildBoundables.iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) \n        parentBoundables.add(this.createNode(newLevel))\n      \n      this.lastNode(parentBoundables).addChildBoundable(childBoundable)\n    }\n    return parentBoundables\n  }\n  isEmpty() {\n    if (!this._built) return this._itemBoundables.isEmpty()\n    return this._root.isEmpty()\n  }\n  get interfaces_() {\n    return [Serializable]\n  }\n}\nfunction IntersectsOp() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10\n","export default class ItemDistance {\n  distance(item1, item2) {}\n}\n","import ItemBoundable from './ItemBoundable.js'\nimport PriorityQueue from '../../util/PriorityQueue.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport SpatialIndex from '../SpatialIndex.js'\nimport AbstractNode from './AbstractNode.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport BoundablePair from './BoundablePair.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Comparator from '../../../../../java/util/Comparator.js'\nimport Serializable from '../../../../../java/io/Serializable.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Assert from '../../util/Assert.js'\nimport AbstractSTRtree from './AbstractSTRtree.js'\nimport ItemDistance from './ItemDistance.js'\nexport default class STRtree extends AbstractSTRtree {\n  constructor() {\n    super()\n    STRtree.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    if (arguments.length === 0) {\n      STRtree.constructor_.call(this, STRtree.DEFAULT_NODE_CAPACITY)\n    } else if (arguments.length === 1) {\n      const nodeCapacity = arguments[0]\n      AbstractSTRtree.constructor_.call(this, nodeCapacity)\n    }\n  }\n  static centreX(e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  }\n  static avg(a, b) {\n    return (a + b) / 2\n  }\n  static getItems(kNearestNeighbors) {\n    const items = new Array(kNearestNeighbors.size()).fill(null)\n    let count = 0\n    while (!kNearestNeighbors.isEmpty()) {\n      const bp = kNearestNeighbors.poll()\n      items[count] = bp.getBoundable(0).getItem()\n      count++\n    }\n    return items\n  }\n  static centreY(e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  }\n  createParentBoundablesFromVerticalSlices(verticalSlices, newLevel) {\n    Assert.isTrue(verticalSlices.length > 0)\n    const parentBoundables = new ArrayList()\n    for (let i = 0; i < verticalSlices.length; i++) \n      parentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel))\n    \n    return parentBoundables\n  }\n  nearestNeighbourK() {\n    if (arguments.length === 2) {\n      const initBndPair = arguments[0], k = arguments[1]\n      return this.nearestNeighbourK(initBndPair, Double.POSITIVE_INFINITY, k)\n    } else if (arguments.length === 3) {\n      const initBndPair = arguments[0], maxDistance = arguments[1], k = arguments[2]\n      let distanceLowerBound = maxDistance\n      const priQ = new PriorityQueue()\n      priQ.add(initBndPair)\n      const kNearestNeighbors = new PriorityQueue()\n      while (!priQ.isEmpty() && distanceLowerBound >= 0.0) {\n        const bndPair = priQ.poll()\n        const pairDistance = bndPair.getDistance()\n        if (pairDistance >= distanceLowerBound) \n          break\n        \n        if (bndPair.isLeaves()) \n          if (kNearestNeighbors.size() < k) {\n            kNearestNeighbors.add(bndPair)\n          } else {\n            const bp1 = kNearestNeighbors.peek()\n            if (bp1.getDistance() > pairDistance) {\n              kNearestNeighbors.poll()\n              kNearestNeighbors.add(bndPair)\n            }\n            const bp2 = kNearestNeighbors.peek()\n            distanceLowerBound = bp2.getDistance()\n          }\n        else \n          bndPair.expandToQueue(priQ, distanceLowerBound)\n        \n      }\n      return STRtree.getItems(kNearestNeighbors)\n    }\n  }\n  createNode(level) {\n    return new STRtreeNode(level)\n  }\n  size() {\n    if (arguments.length === 0) \n      return super.size.call(this)\n    else return super.size.apply(this, arguments)\n  }\n  insert() {\n    if (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n      const itemEnv = arguments[0], item = arguments[1]\n      if (itemEnv.isNull()) \n        return null\n      \n      super.insert.call(this, itemEnv, item)\n    } else {\n      return super.insert.apply(this, arguments)\n    }\n  }\n  getIntersectsOp() {\n    return STRtree.intersectsOp\n  }\n  verticalSlices(childBoundables, sliceCount) {\n    const sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount))\n    const slices = new Array(sliceCount).fill(null)\n    const i = childBoundables.iterator()\n    for (let j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList()\n      let boundablesAddedToSlice = 0\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        const childBoundable = i.next()\n        slices[j].add(childBoundable)\n        boundablesAddedToSlice++\n      }\n    }\n    return slices\n  }\n  query() {\n    if (arguments.length === 1) {\n      const searchEnv = arguments[0]\n      return super.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      const searchEnv = arguments[0], visitor = arguments[1]\n      super.query.call(this, searchEnv, visitor)\n    }\n  }\n  getComparator() {\n    return STRtree.yComparator\n  }\n  createParentBoundablesFromVerticalSlice(childBoundables, newLevel) {\n    return super.createParentBoundables.call(this, childBoundables, newLevel)\n  }\n  remove() {\n    if (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n      const itemEnv = arguments[0], item = arguments[1]\n      return super.remove.call(this, itemEnv, item)\n    } else {\n      return super.remove.apply(this, arguments)\n    }\n  }\n  depth() {\n    if (arguments.length === 0) \n      return super.depth.call(this)\n    else return super.depth.apply(this, arguments)\n  }\n  createParentBoundables(childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty())\n    const minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()))\n    const sortedChildBoundables = new ArrayList(childBoundables)\n    Collections.sort(sortedChildBoundables, STRtree.xComparator)\n    const verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))))\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  }\n  nearestNeighbour() {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        const itemDist = arguments[0]\n        if (this.isEmpty()) return null\n        const bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist)\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        const initBndPair = arguments[0]\n        let distanceLowerBound = Double.POSITIVE_INFINITY\n        let minPair = null\n        const priQ = new PriorityQueue()\n        priQ.add(initBndPair)\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          const bndPair = priQ.poll()\n          const pairDistance = bndPair.getDistance()\n          if (pairDistance >= distanceLowerBound) break\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = pairDistance\n            minPair = bndPair\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound)\n          }\n        }\n        if (minPair === null) return null\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 2) {\n      const tree = arguments[0], itemDist = arguments[1]\n      if (this.isEmpty() || tree.isEmpty()) return null\n      const bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist)\n      return this.nearestNeighbour(bp)\n    } else if (arguments.length === 3) {\n      const env = arguments[0], item = arguments[1], itemDist = arguments[2]\n      const bnd = new ItemBoundable(env, item)\n      const bp = new BoundablePair(this.getRoot(), bnd, itemDist)\n      return this.nearestNeighbour(bp)[0]\n    } else if (arguments.length === 4) {\n      const env = arguments[0], item = arguments[1], itemDist = arguments[2], k = arguments[3]\n      const bnd = new ItemBoundable(env, item)\n      const bp = new BoundablePair(this.getRoot(), bnd, itemDist)\n      return this.nearestNeighbourK(bp, k)\n    }\n  }\n  isWithinDistance() {\n    if (arguments.length === 2) {\n      const initBndPair = arguments[0], maxDistance = arguments[1]\n      let distanceUpperBound = Double.POSITIVE_INFINITY\n      const priQ = new PriorityQueue()\n      priQ.add(initBndPair)\n      while (!priQ.isEmpty()) {\n        const bndPair = priQ.poll()\n        const pairDistance = bndPair.getDistance()\n        if (pairDistance > maxDistance) return false\n        if (bndPair.maximumDistance() <= maxDistance) return true\n        if (bndPair.isLeaves()) {\n          distanceUpperBound = pairDistance\n          if (distanceUpperBound <= maxDistance) return true\n        } else {\n          bndPair.expandToQueue(priQ, distanceUpperBound)\n        }\n      }\n      return false\n    } else if (arguments.length === 3) {\n      const tree = arguments[0], itemDist = arguments[1], maxDistance = arguments[2]\n      const bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist)\n      return this.isWithinDistance(bp, maxDistance)\n    }\n  }\n  get interfaces_() {\n    return [SpatialIndex, Serializable]\n  }\n}\nclass STRtreeNode extends AbstractNode {\n  constructor() {\n    super()\n    STRtreeNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const level = arguments[0]\n    AbstractNode.constructor_.call(this, level)\n  }\n  computeBounds() {\n    let bounds = null\n    for (let i = this.getChildBoundables().iterator(); i.hasNext(); ) {\n      const childBoundable = i.next()\n      if (bounds === null) \n        bounds = new Envelope(childBoundable.getBounds())\n      else \n        bounds.expandToInclude(childBoundable.getBounds())\n      \n    }\n    return bounds\n  }\n}\nSTRtree.STRtreeNode = STRtreeNode\nSTRtree.xComparator = new (class {\n  get interfaces_() {\n    return [Comparator]\n  }\n  compare(o1, o2) {\n    return AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n  }\n})()\nSTRtree.yComparator = new (class {\n  get interfaces_() {\n    return [Comparator]\n  }\n  compare(o1, o2) {\n    return AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n  }\n})()\nSTRtree.intersectsOp = new (class {\n  get interfaces_() {\n    return [IntersectsOp]\n  }\n  intersects(aBounds, bBounds) {\n    return aBounds.intersects(bBounds)\n  }\n})()\nSTRtree.DEFAULT_NODE_CAPACITY = 10\n","import Coordinate from '../geom/Coordinate.js'\nimport GeometryFactory from '../geom/GeometryFactory.js'\n\nconst geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon']\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nexport default class GeoJSONParser {\n  constructor(geometryFactory) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n  }\n\n  /**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */\n  read(json) {\n    let obj\n    if (typeof json === 'string')\n      obj = JSON.parse(json)\n    else obj = json\n\n    const type = obj.type\n\n    if (!parse[type]) throw new Error('Unknown GeoJSON type: ' + obj.type)\n\n    if (geometryTypes.indexOf(type) !== -1)\n      return parse[type].call(this, obj.coordinates)\n    else if (type === 'GeometryCollection') return parse[type].call(this, obj.geometries)\n\n    // feature or feature collection\n    return parse[type].call(this, obj)\n  }\n\n  /**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */\n  write(geometry) {\n    const type = geometry.getGeometryType()\n\n    if (!extract[type]) throw new Error('Geometry is not supported')\n\n    return extract[type].call(this, geometry)\n  }\n}\n\nconst parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function(obj) {\n    const feature = {}\n\n    for (const key in obj) feature[key] = obj[key]\n\n    if (obj.geometry) {\n      const type = obj.geometry.type\n      if (!parse[type]) throw new Error('Unknown GeoJSON type: ' + obj.type)\n      feature.geometry = this.read(obj.geometry)\n    }\n\n    if (obj.bbox) feature.bbox = parse.bbox.call(this, obj.bbox)\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function(obj) {\n    const featureCollection = {}\n\n    if (obj.features) {\n      featureCollection.features = []\n\n      for (let i = 0; i < obj.features.length; ++i) featureCollection.features.push(this.read(obj.features[i]))\n    }\n\n    if (obj.bbox) featureCollection.bbox = this.parse.bbox.call(this, obj.bbox)\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function(array) {\n    const coordinates = []\n    for (let i = 0; i < array.length; ++i) {\n      const sub = array[i]\n      coordinates.push(new Coordinate(...sub))\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function(array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function(array) {\n    const coordinate = new Coordinate(...array)\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function(array) {\n    const points = []\n    for (let i = 0; i < array.length; ++i) points.push(parse.Point.call(this, array[i]))\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function(array) {\n    const coordinates = parse.coordinates.call(this, array)\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function(array) {\n    const lineStrings = []\n    for (let i = 0; i < array.length; ++i) lineStrings.push(parse.LineString.call(this, array[i]))\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function(array) {\n    const shellCoordinates = parse.coordinates.call(this, array[0])\n    const shell = this.geometryFactory.createLinearRing(shellCoordinates)\n    const holes = []\n    for (let i = 1; i < array.length; ++i) {\n      const hole = array[i]\n      const coordinates = parse.coordinates.call(this, hole)\n      const linearRing = this.geometryFactory.createLinearRing(coordinates)\n      holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function(array) {\n    const polygons = []\n    for (let i = 0; i < array.length; ++i) {\n      const polygon = array[i]\n      polygons.push(parse.Polygon.call(this, polygon))\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function(array) {\n    const geometries = []\n    for (let i = 0; i < array.length; ++i) {\n      const geometry = array[i]\n      geometries.push(this.read(geometry))\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n}\n\nconst extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function(coordinate) {\n    const a = [coordinate.x, coordinate.y]\n    if (coordinate.z)\n      a.push(coordinate.z)\n    if (coordinate.m)\n      a.push(coordinate.m)\n    return a\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function(point) {\n    const array = extract.coordinate.call(this, point.getCoordinate())\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function(multipoint) {\n    const array = []\n    for (let i = 0; i < multipoint._geometries.length; ++i) {\n      const point = multipoint._geometries[i]\n      const geoJson = extract.Point.call(this, point)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function(linestring) {\n    const array = []\n    const coordinates = linestring.getCoordinates()\n    for (let i = 0; i < coordinates.length; ++i) {\n      const coordinate = coordinates[i]\n      array.push(extract.coordinate.call(this, coordinate))\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function(multilinestring) {\n    const array = []\n    for (let i = 0; i < multilinestring._geometries.length; ++i) {\n      const linestring = multilinestring._geometries[i]\n      const geoJson = extract.LineString.call(this, linestring)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function(polygon) {\n    const array = []\n    const shellGeoJson = extract.LineString.call(this, polygon._shell)\n    array.push(shellGeoJson.coordinates)\n    for (let i = 0; i < polygon._holes.length; ++i) {\n      const hole = polygon._holes[i]\n      const holeGeoJson = extract.LineString.call(this, hole)\n      array.push(holeGeoJson.coordinates)\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function(multipolygon) {\n    const array = []\n    for (let i = 0; i < multipolygon._geometries.length; ++i) {\n      const polygon = multipolygon._geometries[i]\n      const geoJson = extract.Polygon.call(this, polygon)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function(collection) {\n    const array = []\n    for (let i = 0; i < collection._geometries.length; ++i) {\n      const geometry = collection._geometries[i]\n      const type = geometry.getGeometryType()\n      array.push(extract[type].call(this, geometry))\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n}\n","/**\n * @module org/locationtech/jts/io/GeoJSONReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory.js'\nimport GeoJSONParser from './GeoJSONParser.js'\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\nexport default class GeoJSONReader {\n  /**\n   * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n   * to allow it to create <code>Geometry</code> objects of the appropriate\n   * implementation. In particular, the <code>GeometryFactory</code> determines\n   * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n   *\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new GeoJSONParser(geometryFactory || new GeometryFactory())\n  }\n\n  /**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof module:org/locationtech/jts/io/GeoJSONReader#\n   */\n  read(geoJson) {\n    const geometry = this.parser.read(geoJson)\n    return geometry\n  }\n}\n","/**\n * @module org/locationtech/jts/io/GeoJSONWriter\n */\n\nimport GeoJSONParser from './GeoJSONParser.js'\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\nexport default class GeoJSONWriter {\n  /**\n   * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n   * model. Only the maximum number of decimal places necessary to represent the\n   * ordinates to the required precision will be output.\n   *\n   * @param {GeometryFactory} geometryFactory\n   * @constructor\n   */\n  constructor() {\n    this.parser = new GeoJSONParser(this.geometryFactory)\n  }\n\n  /**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof module:org/locationtech/jts/io/GeoJSONWriter#\n   */\n  write(geometry) {\n    return this.parser.write(geometry)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory.js'\nimport WKTParser from './WKTParser.js'\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\nexport default class WKTReader {\n  /**\n   * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n   * to allow it to create <code>Geometry</code> objects of the appropriate\n   * implementation. In particular, the <code>GeometryFactory</code> determines\n   * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n   * @param {GeometryFactory} geometryFactory\n   */\n  constructor(geometryFactory) {\n    this.parser = new WKTParser(geometryFactory || new GeometryFactory())\n  }\n\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof module:org/locationtech/jts/io/WKTReader#\n   */\n  read(wkt) {\n    return this.parser.read(wkt)\n  }\n}\n","/* eslint-disable no-undef */\n\n/**\n * @module org/locationtech/jts/io/OL3Parser\n */\n\nimport Coordinate from '../geom/Coordinate.js'\nimport GeometryFactory from '../geom/GeometryFactory.js'\n\nfunction p2c(p) {\n  return [p.x, p.y]\n}\n\nexport default class OL3Parser {\n  /**\n   * OpenLayers Geometry parser and writer\n   * @param {GeometryFactory} geometryFactory\n   * @param {ol} olReference\n   */\n  constructor(geometryFactory, olReference) {\n    this.geometryFactory = geometryFactory || new GeometryFactory()\n    this.ol = olReference || (typeof ol !== 'undefined' && ol)\n  }\n\n  /**\n   * Inject OpenLayers geom classes\n   */\n  inject(Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection) {\n    this.ol = {\n      geom: {\n        Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection\n      }\n    }\n  }\n\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  read(geometry) {\n    const ol = this.ol\n    if (geometry instanceof ol.geom.Point)\n      return this.convertFromPoint(geometry)\n    else if (geometry instanceof ol.geom.LineString)\n      return this.convertFromLineString(geometry)\n    else if (geometry instanceof ol.geom.LinearRing)\n      return this.convertFromLinearRing(geometry)\n    else if (geometry instanceof ol.geom.Polygon)\n      return this.convertFromPolygon(geometry)\n    else if (geometry instanceof ol.geom.MultiPoint)\n      return this.convertFromMultiPoint(geometry)\n    else if (geometry instanceof ol.geom.MultiLineString)\n      return this.convertFromMultiLineString(geometry)\n    else if (geometry instanceof ol.geom.MultiPolygon)\n      return this.convertFromMultiPolygon(geometry)\n    else if (geometry instanceof ol.geom.GeometryCollection) return this.convertFromCollection(geometry)\n  }\n\n  convertFromPoint(point) {\n    const coordinates = point.getCoordinates()\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\n  }\n\n  convertFromLineString(lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function(coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  }\n\n  convertFromLinearRing(linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function(coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  }\n\n  convertFromPolygon(polygon) {\n    const linearRings = polygon.getLinearRings()\n    let shell = null\n    const holes = []\n    for (let i = 0; i < linearRings.length; i++) {\n      const linearRing = this.convertFromLinearRing(linearRings[i])\n      if (i === 0)\n        shell = linearRing\n      else holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  }\n\n  convertFromMultiPoint(multiPoint) {\n    const points = multiPoint.getPoints().map(function(point) {\n      return this.convertFromPoint(point)\n    }, this)\n    return this.geometryFactory.createMultiPoint(points)\n  }\n\n  convertFromMultiLineString(multiLineString) {\n    const lineStrings = multiLineString.getLineStrings().map(function(lineString) {\n      return this.convertFromLineString(lineString)\n    }, this)\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  }\n\n  convertFromMultiPolygon(multiPolygon) {\n    const polygons = multiPolygon.getPolygons().map(function(polygon) {\n      return this.convertFromPolygon(polygon)\n    }, this)\n    return this.geometryFactory.createMultiPolygon(polygons)\n  }\n\n  convertFromCollection(collection) {\n    const geometries = collection.getGeometries().map(function(geometry) {\n      return this.read(geometry)\n    }, this)\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  write(geometry) {\n    if (geometry.getGeometryType() === 'Point')\n      return this.convertToPoint(geometry.getCoordinate())\n    else if (geometry.getGeometryType() === 'LineString')\n      return this.convertToLineString(geometry)\n    else if (geometry.getGeometryType() === 'LinearRing')\n      return this.convertToLinearRing(geometry)\n    else if (geometry.getGeometryType() === 'Polygon')\n      return this.convertToPolygon(geometry)\n    else if (geometry.getGeometryType() === 'MultiPoint')\n      return this.convertToMultiPoint(geometry)\n    else if (geometry.getGeometryType() === 'MultiLineString')\n      return this.convertToMultiLineString(geometry)\n    else if (geometry.getGeometryType() === 'MultiPolygon')\n      return this.convertToMultiPolygon(geometry)\n    else if (geometry.getGeometryType() === 'GeometryCollection') return this.convertToCollection(geometry)\n  }\n\n  convertToPoint(coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\n  }\n\n  convertToLineString(lineString) {\n    const points = lineString._points._coordinates.map(p2c)\n    return new this.ol.geom.LineString(points)\n  }\n\n  convertToLinearRing(linearRing) {\n    const points = linearRing._points._coordinates.map(p2c)\n    return new this.ol.geom.LinearRing(points)\n  }\n\n  convertToPolygon(polygon) {\n    const rings = [polygon._shell._points._coordinates.map(p2c)]\n    for (let i = 0; i < polygon._holes.length; i++) rings.push(polygon._holes[i]._points._coordinates.map(p2c))\n\n    return new this.ol.geom.Polygon(rings)\n  }\n\n  convertToMultiPoint(multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\n  }\n\n  convertToMultiLineString(multiLineString) {\n    const lineStrings = []\n    for (let i = 0; i < multiLineString._geometries.length; i++) lineStrings.push(this.convertToLineString(multiLineString._geometries[i]).getCoordinates())\n\n    return new this.ol.geom.MultiLineString(lineStrings)\n  }\n\n  convertToMultiPolygon(multiPolygon) {\n    const polygons = []\n    for (let i = 0; i < multiPolygon._geometries.length; i++) polygons.push(this.convertToPolygon(multiPolygon._geometries[i]).getCoordinates())\n\n    return new this.ol.geom.MultiPolygon(polygons)\n  }\n\n  convertToCollection(geometryCollection) {\n    const geometries = []\n    for (let i = 0; i < geometryCollection._geometries.length; i++) {\n      const geometry = geometryCollection._geometries[i]\n      geometries.push(this.write(geometry))\n    }\n    return new this.ol.geom.GeometryCollection(geometries)\n  }\n}\n","import Assert from '../util/Assert.js'\nexport default class SegmentPointComparator {\n  static relativeSign(x0, x1) {\n    if (x0 < x1) return -1\n    if (x0 > x1) return 1\n    return 0\n  }\n  static compare(octant, p0, p1) {\n    if (p0.equals2D(p1)) return 0\n    const xSign = SegmentPointComparator.relativeSign(p0.x, p1.x)\n    const ySign = SegmentPointComparator.relativeSign(p0.y, p1.y)\n    switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    }\n    Assert.shouldNeverReachHere('invalid octant value')\n    return 0\n  }\n  static compareValue(compareSign0, compareSign1) {\n    if (compareSign0 < 0) return -1\n    if (compareSign0 > 0) return 1\n    if (compareSign1 < 0) return -1\n    if (compareSign1 > 0) return 1\n    return 0\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport SegmentPointComparator from './SegmentPointComparator.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nexport default class SegmentNode {\n  constructor() {\n    SegmentNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._segString = null\n    this.coord = null\n    this.segmentIndex = null\n    this._segmentOctant = null\n    this._isInterior = null\n    const segString = arguments[0], coord = arguments[1], segmentIndex = arguments[2], segmentOctant = arguments[3]\n    this._segString = segString\n    this.coord = new Coordinate(coord)\n    this.segmentIndex = segmentIndex\n    this._segmentOctant = segmentOctant\n    this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex))\n  }\n  getCoordinate() {\n    return this.coord\n  }\n  print(out) {\n    out.print(this.coord)\n    out.print(' seg # = ' + this.segmentIndex)\n  }\n  compareTo(obj) {\n    const other = obj\n    if (this.segmentIndex < other.segmentIndex) return -1\n    if (this.segmentIndex > other.segmentIndex) return 1\n    if (this.coord.equals2D(other.coord)) return 0\n    if (!this._isInterior) return -1\n    if (!other._isInterior) return 1\n    return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n  }\n  isEndPoint(maxSegmentIndex) {\n    if (this.segmentIndex === 0 && !this._isInterior) return true\n    if (this.segmentIndex === maxSegmentIndex) return true\n    return false\n  }\n  toString() {\n    return this.segmentIndex + ':' + this.coord.toString()\n  }\n  isInterior() {\n    return this._isInterior\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import CoordinateList from '../geom/CoordinateList.js'\nimport SegmentNode from './SegmentNode.js'\nimport Iterator from '../../../../java/util/Iterator.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport Integer from '../../../../java/lang/Integer.js'\nimport UnsupportedOperationException from '../../../../java/lang/UnsupportedOperationException.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\nimport Assert from '../util/Assert.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class SegmentNodeList {\n  constructor() {\n    SegmentNodeList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeMap = new TreeMap()\n    this._edge = null\n    const edge = arguments[0]\n    this._edge = edge\n  }\n  getSplitCoordinates() {\n    const coordList = new CoordinateList()\n    this.addEndpoints()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      this.addEdgeCoordinates(eiPrev, ei, coordList)\n      eiPrev = ei\n    }\n    return coordList.toCoordinateArray()\n  }\n  addCollapsedNodes() {\n    const collapsedVertexIndexes = new ArrayList()\n    this.findCollapsesFromInsertedNodes(collapsedVertexIndexes)\n    this.findCollapsesFromExistingVertices(collapsedVertexIndexes)\n    for (let it = collapsedVertexIndexes.iterator(); it.hasNext(); ) {\n      const vertexIndex = it.next().intValue()\n      this.add(this._edge.getCoordinate(vertexIndex), vertexIndex)\n    }\n  }\n  createSplitEdgePts(ei0, ei1) {\n    let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n    if (npts === 2) return [new Coordinate(ei0.coord), new Coordinate(ei1.coord)]\n    const lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex)\n    const useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt)\n    if (!useIntPt1) \n      npts--\n    \n    const pts = new Array(npts).fill(null)\n    let ipt = 0\n    pts[ipt++] = new Coordinate(ei0.coord)\n    for (let i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) \n      pts[ipt++] = this._edge.getCoordinate(i)\n    \n    if (useIntPt1) pts[ipt] = new Coordinate(ei1.coord)\n    return pts\n  }\n  print(out) {\n    out.println('Intersections:')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ei = it.next()\n      ei.print(out)\n    }\n  }\n  findCollapsesFromExistingVertices(collapsedVertexIndexes) {\n    for (let i = 0; i < this._edge.size() - 2; i++) {\n      const p0 = this._edge.getCoordinate(i)\n      const p1 = this._edge.getCoordinate(i + 1)\n      const p2 = this._edge.getCoordinate(i + 2)\n      if (p0.equals2D(p2)) \n        collapsedVertexIndexes.add(Integer.valueOf(i + 1))\n      \n    }\n  }\n  addEdgeCoordinates(ei0, ei1, coordList) {\n    const pts = this.createSplitEdgePts(ei0, ei1)\n    coordList.add(pts, false)\n  }\n  iterator() {\n    return this._nodeMap.values().iterator()\n  }\n  addSplitEdges(edgeList) {\n    this.addEndpoints()\n    this.addCollapsedNodes()\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const newEdge = this.createSplitEdge(eiPrev, ei)\n      edgeList.add(newEdge)\n      eiPrev = ei\n    }\n  }\n  findCollapseIndex(ei0, ei1, collapsedVertexIndex) {\n    if (!ei0.coord.equals2D(ei1.coord)) return false\n    let numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex\n    if (!ei1.isInterior()) \n      numVerticesBetween--\n    \n    if (numVerticesBetween === 1) {\n      collapsedVertexIndex[0] = ei0.segmentIndex + 1\n      return true\n    }\n    return false\n  }\n  findCollapsesFromInsertedNodes(collapsedVertexIndexes) {\n    const collapsedVertexIndex = new Array(1).fill(null)\n    const it = this.iterator()\n    let eiPrev = it.next()\n    while (it.hasNext()) {\n      const ei = it.next()\n      const isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex)\n      if (isCollapsed) collapsedVertexIndexes.add(Integer.valueOf(collapsedVertexIndex[0]))\n      eiPrev = ei\n    }\n  }\n  getEdge() {\n    return this._edge\n  }\n  addEndpoints() {\n    const maxSegIndex = this._edge.size() - 1\n    this.add(this._edge.getCoordinate(0), 0)\n    this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex)\n  }\n  createSplitEdge(ei0, ei1) {\n    const pts = this.createSplitEdgePts(ei0, ei1)\n    return new NodedSegmentString(pts, this._edge.getData())\n  }\n  add(intPt, segmentIndex) {\n    const eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex))\n    const ei = this._nodeMap.get(eiNew)\n    if (ei !== null) {\n      Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates')\n      return ei\n    }\n    this._nodeMap.put(eiNew, eiNew)\n    return eiNew\n  }\n  checkSplitEdgesCorrectness(splitEdges) {\n    const edgePts = this._edge.getCoordinates()\n    const split0 = splitEdges.get(0)\n    const pt0 = split0.getCoordinate(0)\n    if (!pt0.equals2D(edgePts[0])) throw new RuntimeException('bad split edge start point at ' + pt0)\n    const splitn = splitEdges.get(splitEdges.size() - 1)\n    const splitnPts = splitn.getCoordinates()\n    const ptn = splitnPts[splitnPts.length - 1]\n    if (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException('bad split edge end point at ' + ptn)\n  }\n}\nclass NodeVertexIterator {\n  constructor() {\n    NodeVertexIterator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeList = null\n    this._edge = null\n    this._nodeIt = null\n    this._currNode = null\n    this._nextNode = null\n    this._currSegIndex = 0\n    const nodeList = arguments[0]\n    this._nodeList = nodeList\n    this._edge = nodeList.getEdge()\n    this._nodeIt = nodeList.iterator()\n    this.readNextNode()\n  }\n  next() {\n    if (this._currNode === null) {\n      this._currNode = this._nextNode\n      this._currSegIndex = this._currNode.segmentIndex\n      this.readNextNode()\n      return this._currNode\n    }\n    if (this._nextNode === null) return null\n    if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n      this._currNode = this._nextNode\n      this._currSegIndex = this._currNode.segmentIndex\n      this.readNextNode()\n      return this._currNode\n    }\n    if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n    return null\n  }\n  remove() {\n    throw new UnsupportedOperationException(this.getClass().getName())\n  }\n  hasNext() {\n    if (this._nextNode === null) return false\n    return true\n  }\n  readNextNode() {\n    if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n  }\n  get interfaces_() {\n    return [Iterator]\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nexport default class Octant {\n  static octant() {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      const dx = arguments[0], dy = arguments[1]\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )')\n      const adx = Math.abs(dx)\n      const ady = Math.abs(dy)\n      if (dx >= 0) \n        if (dy >= 0) \n          if (adx >= ady) return 0; else return 1\n        else \n        if (adx >= ady) return 7; else return 6\n        \n      else \n      if (dy >= 0) \n        if (adx >= ady) return 3; else return 2\n      else \n      if (adx >= ady) return 4; else return 5\n        \n      \n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      const p0 = arguments[0], p1 = arguments[1]\n      const dx = p1.x - p0.x\n      const dy = p1.y - p0.y\n      if (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0)\n      return Octant.octant(dx, dy)\n    }\n  }\n}\n","export default class SegmentString {\n  getCoordinates() {}\n  size() {}\n  getCoordinate(i) {}\n  isClosed() {}\n  setData(data) {}\n  getData() {}\n}\n","import SegmentString from './SegmentString.js'\nexport default class NodableSegmentString {\n  addIntersection(intPt, segmentIndex) {}\n  get interfaces_() {\n    return [SegmentString]\n  }\n}\n","import SegmentNodeList from './SegmentNodeList.js'\nimport WKTWriter from '../io/WKTWriter.js'\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Octant from './Octant.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport NodableSegmentString from './NodableSegmentString.js'\nexport default class NodedSegmentString {\n  constructor() {\n    NodedSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeList = new SegmentNodeList(this)\n    this._pts = null\n    this._data = null\n    const pts = arguments[0], data = arguments[1]\n    this._pts = pts\n    this._data = data\n  }\n  static getNodedSubstrings() {\n    if (arguments.length === 1) {\n      const segStrings = arguments[0]\n      const resultEdgelist = new ArrayList()\n      NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist)\n      return resultEdgelist\n    } else if (arguments.length === 2) {\n      const segStrings = arguments[0], resultEdgelist = arguments[1]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        ss.getNodeList().addSplitEdges(resultEdgelist)\n      }\n    }\n  }\n  getCoordinates() {\n    return this._pts\n  }\n  size() {\n    return this._pts.length\n  }\n  getCoordinate(i) {\n    return this._pts[i]\n  }\n  isClosed() {\n    return this._pts[0].equals(this._pts[this._pts.length - 1])\n  }\n  getSegmentOctant(index) {\n    if (index === this._pts.length - 1) return -1\n    return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n  }\n  setData(data) {\n    this._data = data\n  }\n  safeOctant(p0, p1) {\n    if (p0.equals2D(p1)) return 0\n    return Octant.octant(p0, p1)\n  }\n  getData() {\n    return this._data\n  }\n  addIntersection() {\n    if (arguments.length === 2) {\n      const intPt = arguments[0], segmentIndex = arguments[1]\n      this.addIntersectionNode(intPt, segmentIndex)\n    } else if (arguments.length === 4) {\n      const li = arguments[0], segmentIndex = arguments[1], geomIndex = arguments[2], intIndex = arguments[3]\n      const intPt = new Coordinate(li.getIntersection(intIndex))\n      this.addIntersection(intPt, segmentIndex)\n    }\n  }\n  toString() {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n  }\n  getNodeList() {\n    return this._nodeList\n  }\n  addIntersectionNode(intPt, segmentIndex) {\n    let normalizedSegmentIndex = segmentIndex\n    const nextSegIndex = normalizedSegmentIndex + 1\n    if (nextSegIndex < this._pts.length) {\n      const nextPt = this._pts[nextSegIndex]\n      if (intPt.equals2D(nextPt)) \n        normalizedSegmentIndex = nextSegIndex\n      \n    }\n    const ei = this._nodeList.add(intPt, normalizedSegmentIndex)\n    return ei\n  }\n  addIntersections(li, segmentIndex, geomIndex) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) \n      this.addIntersection(li, segmentIndex, geomIndex, i)\n    \n  }\n  get interfaces_() {\n    return [NodableSegmentString]\n  }\n}\n","import LineSegment from '../../geom/LineSegment.js'\nexport default class MonotoneChainOverlapAction {\n  constructor() {\n    MonotoneChainOverlapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._overlapSeg1 = new LineSegment()\n    this._overlapSeg2 = new LineSegment()\n  }\n  overlap() {\n    if (arguments.length === 2) {\n      const seg1 = arguments[0], seg2 = arguments[1]\n    } else if (arguments.length === 4) {\n      const mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3]\n      mc1.getLineSegment(start1, this._overlapSeg1)\n      mc2.getLineSegment(start2, this._overlapSeg2)\n      this.overlap(this._overlapSeg1, this._overlapSeg2)\n    }\n  }\n}\n","import Envelope from '../../geom/Envelope.js'\nexport default class MonotoneChain {\n  constructor() {\n    MonotoneChain.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._start = null\n    this._end = null\n    this._env = null\n    this._context = null\n    this._id = null\n    const pts = arguments[0], start = arguments[1], end = arguments[2], context = arguments[3]\n    this._pts = pts\n    this._start = start\n    this._end = end\n    this._context = context\n  }\n  getLineSegment(index, ls) {\n    ls.p0 = this._pts[index]\n    ls.p1 = this._pts[index + 1]\n  }\n  computeSelect(searchEnv, start0, end0, mcs) {\n    const p0 = this._pts[start0]\n    const p1 = this._pts[end0]\n    if (end0 - start0 === 1) {\n      mcs.select(this, start0)\n      return null\n    }\n    if (!searchEnv.intersects(p0, p1)) return null\n    const mid = Math.trunc((start0 + end0) / 2)\n    if (start0 < mid) \n      this.computeSelect(searchEnv, start0, mid, mcs)\n    \n    if (mid < end0) \n      this.computeSelect(searchEnv, mid, end0, mcs)\n    \n  }\n  getCoordinates() {\n    const coord = new Array(this._end - this._start + 1).fill(null)\n    let index = 0\n    for (let i = this._start; i <= this._end; i++) \n      coord[index++] = this._pts[i]\n    \n    return coord\n  }\n  computeOverlaps() {\n    if (arguments.length === 2) {\n      const mc = arguments[0], mco = arguments[1]\n      this.computeOverlaps(this._start, this._end, mc, mc._start, mc._end, mco)\n    } else if (arguments.length === 6) {\n      const start0 = arguments[0], end0 = arguments[1], mc = arguments[2], start1 = arguments[3], end1 = arguments[4], mco = arguments[5]\n      if (end0 - start0 === 1 && end1 - start1 === 1) {\n        mco.overlap(this, start0, mc, start1)\n        return null\n      }\n      if (!this.overlaps(start0, end0, mc, start1, end1)) return null\n      const mid0 = Math.trunc((start0 + end0) / 2)\n      const mid1 = Math.trunc((start1 + end1) / 2)\n      if (start0 < mid0) {\n        if (start1 < mid1) this.computeOverlaps(start0, mid0, mc, start1, mid1, mco)\n        if (mid1 < end1) this.computeOverlaps(start0, mid0, mc, mid1, end1, mco)\n      }\n      if (mid0 < end0) {\n        if (start1 < mid1) this.computeOverlaps(mid0, end0, mc, start1, mid1, mco)\n        if (mid1 < end1) this.computeOverlaps(mid0, end0, mc, mid1, end1, mco)\n      }\n    }\n  }\n  setId(id) {\n    this._id = id\n  }\n  select(searchEnv, mcs) {\n    this.computeSelect(searchEnv, this._start, this._end, mcs)\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      const p0 = this._pts[this._start]\n      const p1 = this._pts[this._end]\n      this._env = new Envelope(p0, p1)\n    }\n    return this._env\n  }\n  overlaps(start0, end0, mc, start1, end1) {\n    return Envelope.intersects(this._pts[start0], this._pts[end0], mc._pts[start1], mc._pts[end1])\n  }\n  getEndIndex() {\n    return this._end\n  }\n  getStartIndex() {\n    return this._start\n  }\n  getContext() {\n    return this._context\n  }\n  getId() {\n    return this._id\n  }\n}\n","import MonotoneChain from './MonotoneChain.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Quadrant from '../../geomgraph/Quadrant.js'\nexport default class MonotoneChainBuilder {\n  static findChainEnd(pts, start) {\n    let safeStart = start\n    while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) \n      safeStart++\n    \n    if (safeStart >= pts.length - 1) \n      return pts.length - 1\n    \n    const chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1])\n    let last = start + 1\n    while (last < pts.length) {\n      if (!pts[last - 1].equals2D(pts[last])) {\n        const quad = Quadrant.quadrant(pts[last - 1], pts[last])\n        if (quad !== chainQuad) break\n      }\n      last++\n    }\n    return last - 1\n  }\n  static getChains() {\n    if (arguments.length === 1) {\n      const pts = arguments[0]\n      return MonotoneChainBuilder.getChains(pts, null)\n    } else if (arguments.length === 2) {\n      const pts = arguments[0], context = arguments[1]\n      const mcList = new ArrayList()\n      let chainStart = 0\n      do {\n        const chainEnd = MonotoneChainBuilder.findChainEnd(pts, chainStart)\n        const mc = new MonotoneChain(pts, chainStart, chainEnd, context)\n        mcList.add(mc)\n        chainStart = chainEnd\n      } while (chainStart < pts.length - 1)\n      return mcList\n    }\n  }\n}\n","export default class Noder {\n  computeNodes(segStrings) {}\n  getNodedSubstrings() {}\n}\n","import Noder from './Noder.js'\nexport default class SinglePassNoder {\n  constructor() {\n    SinglePassNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._segInt = null\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const segInt = arguments[0]\n      this.setSegmentIntersector(segInt)\n    }\n  }\n  setSegmentIntersector(segInt) {\n    this._segInt = segInt\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import STRtree from '../index/strtree/STRtree.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction.js'\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport SinglePassNoder from './SinglePassNoder.js'\nexport default class MCIndexNoder extends SinglePassNoder {\n  constructor() {\n    super()\n    MCIndexNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._monoChains = new ArrayList()\n    this._index = new STRtree()\n    this._idCounter = 0\n    this._nodedSegStrings = null\n    this._nOverlaps = 0\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const si = arguments[0]\n      SinglePassNoder.constructor_.call(this, si)\n    }\n  }\n  getMonotoneChains() {\n    return this._monoChains\n  }\n  getNodedSubstrings() {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  }\n  getIndex() {\n    return this._index\n  }\n  add(segStr) {\n    const segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr)\n    for (let i = segChains.iterator(); i.hasNext(); ) {\n      const mc = i.next()\n      mc.setId(this._idCounter++)\n      this._index.insert(mc.getEnvelope(), mc)\n      this._monoChains.add(mc)\n    }\n  }\n  computeNodes(inputSegStrings) {\n    this._nodedSegStrings = inputSegStrings\n    for (let i = inputSegStrings.iterator(); i.hasNext(); ) \n      this.add(i.next())\n    \n    this.intersectChains()\n  }\n  intersectChains() {\n    const overlapAction = new SegmentOverlapAction(this._segInt)\n    for (let i = this._monoChains.iterator(); i.hasNext(); ) {\n      const queryChain = i.next()\n      const overlapChains = this._index.query(queryChain.getEnvelope())\n      for (let j = overlapChains.iterator(); j.hasNext(); ) {\n        const testChain = j.next()\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction)\n          this._nOverlaps++\n        }\n        if (this._segInt.isDone()) return null\n      }\n    }\n  }\n}\nclass SegmentOverlapAction extends MonotoneChainOverlapAction {\n  constructor() {\n    super()\n    SegmentOverlapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._si = null\n    const si = arguments[0]\n    this._si = si\n  }\n  overlap() {\n    if (arguments.length === 4) {\n      const mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3]\n      const ss1 = mc1.getContext()\n      const ss2 = mc2.getContext()\n      this._si.processIntersections(ss1, start1, ss2, start2)\n    } else {\n      return super.overlap.apply(this, arguments)\n    }\n  }\n}\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction\n","import hasInterface from '../../../../hasInterface.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport Noder from './Noder.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport NodedSegmentString from './NodedSegmentString.js'\nimport System from '../../../../java/lang/System.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class ScaledNoder {\n  constructor() {\n    ScaledNoder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._noder = null\n    this._scaleFactor = null\n    this._offsetX = null\n    this._offsetY = null\n    this._isScaled = false\n    if (arguments.length === 2) {\n      const noder = arguments[0], scaleFactor = arguments[1]\n      ScaledNoder.constructor_.call(this, noder, scaleFactor, 0, 0)\n    } else if (arguments.length === 4) {\n      const noder = arguments[0], scaleFactor = arguments[1], offsetX = arguments[2], offsetY = arguments[3]\n      this._noder = noder\n      this._scaleFactor = scaleFactor\n      this._isScaled = !this.isIntegerPrecision()\n    }\n  }\n  rescale() {\n    if (hasInterface(arguments[0], Collection)) {\n      const segStrings = arguments[0]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        this.rescale(ss.getCoordinates())\n      }\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      for (let i = 0; i < pts.length; i++) {\n        pts[i].x = pts[i].x / this._scaleFactor + this._offsetX\n        pts[i].y = pts[i].y / this._scaleFactor + this._offsetY\n      }\n      if (pts.length === 2 && pts[0].equals2D(pts[1])) \n        System.out.println(pts)\n      \n    }\n  }\n  scale() {\n    if (hasInterface(arguments[0], Collection)) {\n      const segStrings = arguments[0]\n      const nodedSegmentStrings = new ArrayList(segStrings.size())\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        nodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()))\n      }\n      return nodedSegmentStrings\n    } else if (arguments[0] instanceof Array) {\n      const pts = arguments[0]\n      const roundPts = new Array(pts.length).fill(null)\n      for (let i = 0; i < pts.length; i++) \n        roundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].getZ())\n      \n      const roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts)\n      return roundPtsNoDup\n    }\n  }\n  isIntegerPrecision() {\n    return this._scaleFactor === 1.0\n  }\n  getNodedSubstrings() {\n    const splitSS = this._noder.getNodedSubstrings()\n    if (this._isScaled) this.rescale(splitSS)\n    return splitSS\n  }\n  computeNodes(inputSegStrings) {\n    let intSegStrings = inputSegStrings\n    if (this._isScaled) intSegStrings = this.scale(inputSegStrings)\n    this._noder.computeNodes(intSegStrings)\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import LineString from '../geom/LineString.js'\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nexport default class BoundaryOp {\n  constructor() {\n    BoundaryOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    this._geomFact = null\n    this._bnRule = null\n    this._endpointMap = null\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      BoundaryOp.constructor_.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE)\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], bnRule = arguments[1]\n      this._geom = geom\n      this._geomFact = geom.getFactory()\n      this._bnRule = bnRule\n    }\n  }\n  static getBoundary() {\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      const bop = new BoundaryOp(g)\n      return bop.getBoundary()\n    } else if (arguments.length === 2) {\n      const g = arguments[0], bnRule = arguments[1]\n      const bop = new BoundaryOp(g, bnRule)\n      return bop.getBoundary()\n    }\n  }\n  boundaryMultiLineString(mLine) {\n    if (this._geom.isEmpty()) \n      return this.getEmptyMultiPoint()\n    \n    const bdyPts = this.computeBoundaryCoordinates(mLine)\n    if (bdyPts.length === 1) \n      return this._geomFact.createPoint(bdyPts[0])\n    \n    return this._geomFact.createMultiPointFromCoords(bdyPts)\n  }\n  getBoundary() {\n    if (this._geom instanceof LineString) return this.boundaryLineString(this._geom)\n    if (this._geom instanceof MultiLineString) return this.boundaryMultiLineString(this._geom)\n    return this._geom.getBoundary()\n  }\n  boundaryLineString(line) {\n    if (this._geom.isEmpty()) \n      return this.getEmptyMultiPoint()\n    \n    if (line.isClosed()) {\n      const closedEndpointOnBoundary = this._bnRule.isInBoundary(2)\n      if (closedEndpointOnBoundary) \n        return line.getStartPoint()\n      else \n        return this._geomFact.createMultiPoint()\n      \n    }\n    return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n  }\n  getEmptyMultiPoint() {\n    return this._geomFact.createMultiPoint()\n  }\n  computeBoundaryCoordinates(mLine) {\n    const bdyPts = new ArrayList()\n    this._endpointMap = new TreeMap()\n    for (let i = 0; i < mLine.getNumGeometries(); i++) {\n      const line = mLine.getGeometryN(i)\n      if (line.getNumPoints() === 0) continue\n      this.addEndpoint(line.getCoordinateN(0))\n      this.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1))\n    }\n    for (let it = this._endpointMap.entrySet().iterator(); it.hasNext(); ) {\n      const entry = it.next()\n      const counter = entry.getValue()\n      const valence = counter.count\n      if (this._bnRule.isInBoundary(valence)) \n        bdyPts.add(entry.getKey())\n      \n    }\n    return CoordinateArrays.toCoordinateArray(bdyPts)\n  }\n  addEndpoint(pt) {\n    let counter = this._endpointMap.get(pt)\n    if (counter === null) {\n      counter = new Counter()\n      this._endpointMap.put(pt, counter)\n    }\n    counter.count++\n  }\n}\nclass Counter {\n  constructor() {\n    Counter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.count = null\n  }\n}\n","import TreeSet from '../../../../java/util/TreeSet.js'\nimport LineString from '../geom/LineString.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport MultiPoint from '../geom/MultiPoint.js'\nimport GeometryGraph from '../geomgraph/GeometryGraph.js'\nimport GeometryCollection from '../geom/GeometryCollection.js'\nimport Polygonal from '../geom/Polygonal.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nexport default class IsSimpleOp {\n  constructor() {\n    IsSimpleOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._isClosedEndpointsInInterior = true\n    this._nonSimpleLocation = null\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      this._inputGeom = geom\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], boundaryNodeRule = arguments[1]\n      this._inputGeom = geom\n      this._isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2)\n    }\n  }\n  static isSimple() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      const op = new IsSimpleOp(geom)\n      return op.isSimple()\n    } else if (arguments.length === 2) {\n      const geom = arguments[0], boundaryNodeRule = arguments[1]\n      const op = new IsSimpleOp(geom, boundaryNodeRule)\n      return op.isSimple()\n    }\n  }\n  isSimpleMultiPoint(mp) {\n    if (mp.isEmpty()) return true\n    const points = new TreeSet()\n    for (let i = 0; i < mp.getNumGeometries(); i++) {\n      const pt = mp.getGeometryN(i)\n      const p = pt.getCoordinate()\n      if (points.contains(p)) {\n        this._nonSimpleLocation = p\n        return false\n      }\n      points.add(p)\n    }\n    return true\n  }\n  isSimplePolygonal(geom) {\n    const rings = LinearComponentExtracter.getLines(geom)\n    for (let i = rings.iterator(); i.hasNext(); ) {\n      const ring = i.next()\n      if (!this.isSimpleLinearGeometry(ring)) return false\n    }\n    return true\n  }\n  hasClosedEndpointIntersection(graph) {\n    const endPoints = new TreeMap()\n    for (let i = graph.getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const isClosed = e.isClosed()\n      const p0 = e.getCoordinate(0)\n      this.addEndpoint(endPoints, p0, isClosed)\n      const p1 = e.getCoordinate(e.getNumPoints() - 1)\n      this.addEndpoint(endPoints, p1, isClosed)\n    }\n    for (let i = endPoints.values().iterator(); i.hasNext(); ) {\n      const eiInfo = i.next()\n      if (eiInfo.isClosed && eiInfo.degree !== 2) {\n        this._nonSimpleLocation = eiInfo.getCoordinate()\n        return true\n      }\n    }\n    return false\n  }\n  getNonSimpleLocation() {\n    return this._nonSimpleLocation\n  }\n  isSimpleLinearGeometry(geom) {\n    if (geom.isEmpty()) return true\n    const graph = new GeometryGraph(0, geom)\n    const li = new RobustLineIntersector()\n    const si = graph.computeSelfNodes(li, true)\n    if (!si.hasIntersection()) return true\n    if (si.hasProperIntersection()) {\n      this._nonSimpleLocation = si.getProperIntersectionPoint()\n      return false\n    }\n    if (this.hasNonEndpointIntersection(graph)) return false\n    if (this._isClosedEndpointsInInterior) \n      if (this.hasClosedEndpointIntersection(graph)) return false\n    \n    return true\n  }\n  hasNonEndpointIntersection(graph) {\n    for (let i = graph.getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const maxSegmentIndex = e.getMaximumSegmentIndex()\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        if (!ei.isEndPoint(maxSegmentIndex)) {\n          this._nonSimpleLocation = ei.getCoordinate()\n          return true\n        }\n      }\n    }\n    return false\n  }\n  addEndpoint(endPoints, p, isClosed) {\n    let eiInfo = endPoints.get(p)\n    if (eiInfo === null) {\n      eiInfo = new EndpointInfo(p)\n      endPoints.put(p, eiInfo)\n    }\n    eiInfo.addEndpoint(isClosed)\n  }\n  computeSimple(geom) {\n    this._nonSimpleLocation = null\n    if (geom.isEmpty()) return true\n    if (geom instanceof LineString) return this.isSimpleLinearGeometry(geom)\n    if (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom)\n    if (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom)\n    if (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom)\n    if (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom)\n    return true\n  }\n  isSimple() {\n    this._nonSimpleLocation = null\n    return this.computeSimple(this._inputGeom)\n  }\n  isSimpleGeometryCollection(geom) {\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const comp = geom.getGeometryN(i)\n      if (!this.computeSimple(comp)) return false\n    }\n    return true\n  }\n}\nclass EndpointInfo {\n  constructor() {\n    EndpointInfo.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.pt = null\n    this.isClosed = null\n    this.degree = null\n    const pt = arguments[0]\n    this.pt = pt\n    this.isClosed = false\n    this.degree = 0\n  }\n  addEndpoint(isClosed) {\n    this.degree++\n    this.isClosed |= isClosed\n  }\n  getCoordinate() {\n    return this.pt\n  }\n}\nIsSimpleOp.EndpointInfo = EndpointInfo\n","export default class BufferParameters {\n  constructor() {\n    BufferParameters.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS\n    this._endCapStyle = BufferParameters.CAP_ROUND\n    this._joinStyle = BufferParameters.JOIN_ROUND\n    this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT\n    this._isSingleSided = false\n    this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const quadrantSegments = arguments[0]\n      this.setQuadrantSegments(quadrantSegments)\n    } else if (arguments.length === 2) {\n      const quadrantSegments = arguments[0], endCapStyle = arguments[1]\n      this.setQuadrantSegments(quadrantSegments)\n      this.setEndCapStyle(endCapStyle)\n    } else if (arguments.length === 4) {\n      const quadrantSegments = arguments[0], endCapStyle = arguments[1], joinStyle = arguments[2], mitreLimit = arguments[3]\n      this.setQuadrantSegments(quadrantSegments)\n      this.setEndCapStyle(endCapStyle)\n      this.setJoinStyle(joinStyle)\n      this.setMitreLimit(mitreLimit)\n    }\n  }\n  static bufferDistanceError(quadSegs) {\n    const alpha = Math.PI / 2.0 / quadSegs\n    return 1 - Math.cos(alpha / 2.0)\n  }\n  getEndCapStyle() {\n    return this._endCapStyle\n  }\n  isSingleSided() {\n    return this._isSingleSided\n  }\n  setQuadrantSegments(quadSegs) {\n    this._quadrantSegments = quadSegs\n    if (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL\n    if (this._quadrantSegments < 0) {\n      this._joinStyle = BufferParameters.JOIN_MITRE\n      this._mitreLimit = Math.abs(this._quadrantSegments)\n    }\n    if (quadSegs <= 0) \n      this._quadrantSegments = 1\n    \n    if (this._joinStyle !== BufferParameters.JOIN_ROUND) \n      this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS\n    \n  }\n  getJoinStyle() {\n    return this._joinStyle\n  }\n  setJoinStyle(joinStyle) {\n    this._joinStyle = joinStyle\n  }\n  setSimplifyFactor(simplifyFactor) {\n    this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor\n  }\n  getSimplifyFactor() {\n    return this._simplifyFactor\n  }\n  getQuadrantSegments() {\n    return this._quadrantSegments\n  }\n  setEndCapStyle(endCapStyle) {\n    this._endCapStyle = endCapStyle\n  }\n  getMitreLimit() {\n    return this._mitreLimit\n  }\n  setMitreLimit(mitreLimit) {\n    this._mitreLimit = mitreLimit\n  }\n  setSingleSided(isSingleSided) {\n    this._isSingleSided = isSingleSided\n  }\n}\nBufferParameters.CAP_ROUND = 1\nBufferParameters.CAP_FLAT = 2\nBufferParameters.CAP_SQUARE = 3\nBufferParameters.JOIN_ROUND = 1\nBufferParameters.JOIN_MITRE = 2\nBufferParameters.JOIN_BEVEL = 3\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01\n","import Position from '../../geomgraph/Position.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Assert from '../../util/Assert.js'\nexport default class RightmostEdgeFinder {\n  constructor() {\n    RightmostEdgeFinder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._minIndex = -1\n    this._minCoord = null\n    this._minDe = null\n    this._orientedDe = null\n  }\n  getCoordinate() {\n    return this._minCoord\n  }\n  getRightmostSide(de, index) {\n    let side = this.getRightmostSideOfSegment(de, index)\n    if (side < 0) side = this.getRightmostSideOfSegment(de, index - 1)\n    if (side < 0) {\n      this._minCoord = null\n      this.checkForRightmostCoordinate(de)\n    }\n    return side\n  }\n  findRightmostEdgeAtVertex() {\n    const pts = this._minDe.getEdge().getCoordinates()\n    Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge')\n    const pPrev = pts[this._minIndex - 1]\n    const pNext = pts[this._minIndex + 1]\n    const orientation = Orientation.index(this._minCoord, pNext, pPrev)\n    let usePrev = false\n    if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === Orientation.COUNTERCLOCKWISE) \n      usePrev = true\n    else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === Orientation.CLOCKWISE) \n      usePrev = true\n    \n    if (usePrev) \n      this._minIndex = this._minIndex - 1\n    \n  }\n  getRightmostSideOfSegment(de, i) {\n    const e = de.getEdge()\n    const coord = e.getCoordinates()\n    if (i < 0 || i + 1 >= coord.length) return -1\n    if (coord[i].y === coord[i + 1].y) return -1\n    let pos = Position.LEFT\n    if (coord[i].y < coord[i + 1].y) pos = Position.RIGHT\n    return pos\n  }\n  getEdge() {\n    return this._orientedDe\n  }\n  checkForRightmostCoordinate(de) {\n    const coord = de.getEdge().getCoordinates()\n    for (let i = 0; i < coord.length - 1; i++) \n      if (this._minCoord === null || coord[i].x > this._minCoord.x) {\n        this._minDe = de\n        this._minIndex = i\n        this._minCoord = coord[i]\n      }\n    \n  }\n  findRightmostEdgeAtNode() {\n    const node = this._minDe.getNode()\n    const star = node.getEdges()\n    this._minDe = star.getRightmostEdge()\n    if (!this._minDe.isForward()) {\n      this._minDe = this._minDe.getSym()\n      this._minIndex = this._minDe.getEdge().getCoordinates().length - 1\n    }\n  }\n  findEdge(dirEdgeList) {\n    for (let i = dirEdgeList.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (!de.isForward()) continue\n      this.checkForRightmostCoordinate(de)\n    }\n    Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing')\n    if (this._minIndex === 0) \n      this.findRightmostEdgeAtNode()\n    else \n      this.findRightmostEdgeAtVertex()\n    \n    this._orientedDe = this._minDe\n    const rightmostSide = this.getRightmostSide(this._minDe, this._minIndex)\n    if (rightmostSide === Position.LEFT) \n      this._orientedDe = this._minDe.getSym()\n    \n  }\n}\n","export default class LinkedList {\n  constructor() {\n    this.array = []\n  }\n\n  addLast(e) {\n    this.array.push(e)\n  }\n\n  removeFirst() {\n    return this.array.shift()\n  }\n\n  isEmpty() {\n    return this.array.length === 0\n  }\n}\n","import HashSet from '../../../../../java/util/HashSet.js'\nimport Position from '../../geomgraph/Position.js'\nimport Stack from '../../../../../java/util/Stack.js'\nimport RightmostEdgeFinder from './RightmostEdgeFinder.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport LinkedList from '../../../../../java/util/LinkedList.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class BufferSubgraph {\n  constructor() {\n    BufferSubgraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._finder = null\n    this._dirEdgeList = new ArrayList()\n    this._nodes = new ArrayList()\n    this._rightMostCoord = null\n    this._env = null\n    this._finder = new RightmostEdgeFinder()\n  }\n  clearVisitedEdges() {\n    for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      de.setVisited(false)\n    }\n  }\n  getRightmostCoordinate() {\n    return this._rightMostCoord\n  }\n  computeNodeDepth(n) {\n    let startEdge = null\n    for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (de.isVisited() || de.getSym().isVisited()) {\n        startEdge = de\n        break\n      }\n    }\n    if (startEdge === null) throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate())\n    n.getEdges().computeDepths(startEdge)\n    for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      de.setVisited(true)\n      this.copySymDepths(de)\n    }\n  }\n  computeDepth(outsideDepth) {\n    this.clearVisitedEdges()\n    const de = this._finder.getEdge()\n    const n = de.getNode()\n    const label = de.getLabel()\n    de.setEdgeDepths(Position.RIGHT, outsideDepth)\n    this.copySymDepths(de)\n    this.computeDepths(de)\n  }\n  create(node) {\n    this.addReachable(node)\n    this._finder.findEdge(this._dirEdgeList)\n    this._rightMostCoord = this._finder.getCoordinate()\n  }\n  findResultEdges() {\n    for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) \n        de.setInResult(true)\n      \n    }\n  }\n  computeDepths(startEdge) {\n    const nodesVisited = new HashSet()\n    const nodeQueue = new LinkedList()\n    const startNode = startEdge.getNode()\n    nodeQueue.addLast(startNode)\n    nodesVisited.add(startNode)\n    startEdge.setVisited(true)\n    while (!nodeQueue.isEmpty()) {\n      const n = nodeQueue.removeFirst()\n      nodesVisited.add(n)\n      this.computeNodeDepth(n)\n      for (let i = n.getEdges().iterator(); i.hasNext(); ) {\n        const de = i.next()\n        const sym = de.getSym()\n        if (sym.isVisited()) continue\n        const adjNode = sym.getNode()\n        if (!nodesVisited.contains(adjNode)) {\n          nodeQueue.addLast(adjNode)\n          nodesVisited.add(adjNode)\n        }\n      }\n    }\n  }\n  compareTo(o) {\n    const graph = o\n    if (this._rightMostCoord.x < graph._rightMostCoord.x) \n      return -1\n    \n    if (this._rightMostCoord.x > graph._rightMostCoord.x) \n      return 1\n    \n    return 0\n  }\n  getEnvelope() {\n    if (this._env === null) {\n      const edgeEnv = new Envelope()\n      for (let it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n        const dirEdge = it.next()\n        const pts = dirEdge.getEdge().getCoordinates()\n        for (let i = 0; i < pts.length - 1; i++) \n          edgeEnv.expandToInclude(pts[i])\n        \n      }\n      this._env = edgeEnv\n    }\n    return this._env\n  }\n  addReachable(startNode) {\n    const nodeStack = new Stack()\n    nodeStack.add(startNode)\n    while (!nodeStack.empty()) {\n      const node = nodeStack.pop()\n      this.add(node, nodeStack)\n    }\n  }\n  copySymDepths(de) {\n    const sym = de.getSym()\n    sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT))\n    sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT))\n  }\n  add(node, nodeStack) {\n    node.setVisited(true)\n    this._nodes.add(node)\n    for (let i = node.getEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      this._dirEdgeList.add(de)\n      const sym = de.getSym()\n      const symNode = sym.getNode()\n      if (!symNode.isVisited()) nodeStack.push(symNode)\n    }\n  }\n  getNodes() {\n    return this._nodes\n  }\n  getDirectedEdges() {\n    return this._dirEdgeList\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport PointLocation from '../algorithm/PointLocation.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport Orientation from '../algorithm/Orientation.js'\nimport Label from './Label.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Assert from '../util/Assert.js'\nexport default class EdgeRing {\n  constructor() {\n    EdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._startDe = null\n    this._maxNodeDegree = -1\n    this._edges = new ArrayList()\n    this._pts = new ArrayList()\n    this._label = new Label(Location.NONE)\n    this._ring = null\n    this._isHole = null\n    this._shell = null\n    this._holes = new ArrayList()\n    this._geometryFactory = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      const start = arguments[0], geometryFactory = arguments[1]\n      this._geometryFactory = geometryFactory\n      this.computePoints(start)\n      this.computeRing()\n    }\n  }\n  computeRing() {\n    if (this._ring !== null) return null\n    const coord = new Array(this._pts.size()).fill(null)\n    for (let i = 0; i < this._pts.size(); i++) \n      coord[i] = this._pts.get(i)\n    \n    this._ring = this._geometryFactory.createLinearRing(coord)\n    this._isHole = Orientation.isCCW(this._ring.getCoordinates())\n  }\n  isIsolated() {\n    return this._label.getGeometryCount() === 1\n  }\n  computePoints(start) {\n    this._startDe = start\n    let de = start\n    let isFirstEdge = true\n    do {\n      if (de === null) throw new TopologyException('Found null DirectedEdge')\n      if (de.getEdgeRing() === this) throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate())\n      this._edges.add(de)\n      const label = de.getLabel()\n      Assert.isTrue(label.isArea())\n      this.mergeLabel(label)\n      this.addPoints(de.getEdge(), de.isForward(), isFirstEdge)\n      isFirstEdge = false\n      this.setEdgeRing(de, this)\n      de = this.getNext(de)\n    } while (de !== this._startDe)\n  }\n  getLinearRing() {\n    return this._ring\n  }\n  getCoordinate(i) {\n    return this._pts.get(i)\n  }\n  computeMaxNodeDegree() {\n    this._maxNodeDegree = 0\n    let de = this._startDe\n    do {\n      const node = de.getNode()\n      const degree = node.getEdges().getOutgoingDegree(this)\n      if (degree > this._maxNodeDegree) this._maxNodeDegree = degree\n      de = this.getNext(de)\n    } while (de !== this._startDe)\n    this._maxNodeDegree *= 2\n  }\n  addPoints(edge, isForward, isFirstEdge) {\n    const edgePts = edge.getCoordinates()\n    if (isForward) {\n      let startIndex = 1\n      if (isFirstEdge) startIndex = 0\n      for (let i = startIndex; i < edgePts.length; i++) \n        this._pts.add(edgePts[i])\n      \n    } else {\n      let startIndex = edgePts.length - 2\n      if (isFirstEdge) startIndex = edgePts.length - 1\n      for (let i = startIndex; i >= 0; i--) \n        this._pts.add(edgePts[i])\n      \n    }\n  }\n  isHole() {\n    return this._isHole\n  }\n  setInResult() {\n    let de = this._startDe\n    do {\n      de.getEdge().setInResult(true)\n      de = de.getNext()\n    } while (de !== this._startDe)\n  }\n  containsPoint(p) {\n    const shell = this.getLinearRing()\n    const env = shell.getEnvelopeInternal()\n    if (!env.contains(p)) return false\n    if (!PointLocation.isInRing(p, shell.getCoordinates())) return false\n    for (let i = this._holes.iterator(); i.hasNext(); ) {\n      const hole = i.next()\n      if (hole.containsPoint(p)) return false\n    }\n    return true\n  }\n  addHole(ring) {\n    this._holes.add(ring)\n  }\n  isShell() {\n    return this._shell === null\n  }\n  getLabel() {\n    return this._label\n  }\n  getEdges() {\n    return this._edges\n  }\n  getMaxNodeDegree() {\n    if (this._maxNodeDegree < 0) this.computeMaxNodeDegree()\n    return this._maxNodeDegree\n  }\n  getShell() {\n    return this._shell\n  }\n  mergeLabel() {\n    if (arguments.length === 1) {\n      const deLabel = arguments[0]\n      this.mergeLabel(deLabel, 0)\n      this.mergeLabel(deLabel, 1)\n    } else if (arguments.length === 2) {\n      const deLabel = arguments[0], geomIndex = arguments[1]\n      const loc = deLabel.getLocation(geomIndex, Position.RIGHT)\n      if (loc === Location.NONE) return null\n      if (this._label.getLocation(geomIndex) === Location.NONE) {\n        this._label.setLocation(geomIndex, loc)\n        return null\n      }\n    }\n  }\n  setShell(shell) {\n    this._shell = shell\n    if (shell !== null) shell.addHole(this)\n  }\n  toPolygon(geometryFactory) {\n    const holeLR = new Array(this._holes.size()).fill(null)\n    for (let i = 0; i < this._holes.size(); i++) \n      holeLR[i] = this._holes.get(i).getLinearRing()\n    \n    const poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR)\n    return poly\n  }\n}\n","import EdgeRing from '../../geomgraph/EdgeRing.js'\nexport default class MinimalEdgeRing extends EdgeRing {\n  constructor() {\n    super()\n    MinimalEdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const start = arguments[0], geometryFactory = arguments[1]\n    EdgeRing.constructor_.call(this, start, geometryFactory)\n  }\n  setEdgeRing(de, er) {\n    de.setMinEdgeRing(er)\n  }\n  getNext(de) {\n    return de.getNextMin()\n  }\n}\n","import MinimalEdgeRing from './MinimalEdgeRing.js'\nimport EdgeRing from '../../geomgraph/EdgeRing.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class MaximalEdgeRing extends EdgeRing {\n  constructor() {\n    super()\n    MaximalEdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const start = arguments[0], geometryFactory = arguments[1]\n    EdgeRing.constructor_.call(this, start, geometryFactory)\n  }\n  buildMinimalRings() {\n    const minEdgeRings = new ArrayList()\n    let de = this._startDe\n    do {\n      if (de.getMinEdgeRing() === null) {\n        const minEr = new MinimalEdgeRing(de, this._geometryFactory)\n        minEdgeRings.add(minEr)\n      }\n      de = de.getNext()\n    } while (de !== this._startDe)\n    return minEdgeRings\n  }\n  setEdgeRing(de, er) {\n    de.setEdgeRing(er)\n  }\n  linkDirectedEdgesForMinimalEdgeRings() {\n    let de = this._startDe\n    do {\n      const node = de.getNode()\n      node.getEdges().linkMinimalDirectedEdges(this)\n      de = de.getNext()\n    } while (de !== this._startDe)\n  }\n  getNext(de) {\n    return de.getNext()\n  }\n}\n","import PointLocation from '../../algorithm/PointLocation.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport MaximalEdgeRing from './MaximalEdgeRing.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nexport default class PolygonBuilder {\n  constructor() {\n    PolygonBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometryFactory = null\n    this._shellList = new ArrayList()\n    const geometryFactory = arguments[0]\n    this._geometryFactory = geometryFactory\n  }\n  static findEdgeRingContaining(testEr, shellList) {\n    const testRing = testEr.getLinearRing()\n    const testEnv = testRing.getEnvelopeInternal()\n    let testPt = testRing.getCoordinateN(0)\n    let minShell = null\n    let minShellEnv = null\n    for (let it = shellList.iterator(); it.hasNext(); ) {\n      const tryShell = it.next()\n      const tryShellRing = tryShell.getLinearRing()\n      const tryShellEnv = tryShellRing.getEnvelopeInternal()\n      if (tryShellEnv.equals(testEnv)) continue\n      if (!tryShellEnv.contains(testEnv)) continue\n      testPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates())\n      let isContained = false\n      if (PointLocation.isInRing(testPt, tryShellRing.getCoordinates())) isContained = true\n      if (isContained) \n        if (minShell === null || minShellEnv.contains(tryShellEnv)) {\n          minShell = tryShell\n          minShellEnv = minShell.getLinearRing().getEnvelopeInternal()\n        }\n      \n    }\n    return minShell\n  }\n  sortShellsAndHoles(edgeRings, shellList, freeHoleList) {\n    for (let it = edgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.isHole()) \n        freeHoleList.add(er)\n      else \n        shellList.add(er)\n      \n    }\n  }\n  computePolygons(shellList) {\n    const resultPolyList = new ArrayList()\n    for (let it = shellList.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      const poly = er.toPolygon(this._geometryFactory)\n      resultPolyList.add(poly)\n    }\n    return resultPolyList\n  }\n  placeFreeHoles(shellList, freeHoleList) {\n    for (let it = freeHoleList.iterator(); it.hasNext(); ) {\n      const hole = it.next()\n      if (hole.getShell() === null) {\n        const shell = PolygonBuilder.findEdgeRingContaining(hole, shellList)\n        if (shell === null) throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0))\n        hole.setShell(shell)\n      }\n    }\n  }\n  buildMinimalEdgeRings(maxEdgeRings, shellList, freeHoleList) {\n    const edgeRings = new ArrayList()\n    for (let it = maxEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.getMaxNodeDegree() > 2) {\n        er.linkDirectedEdgesForMinimalEdgeRings()\n        const minEdgeRings = er.buildMinimalRings()\n        const shell = this.findShell(minEdgeRings)\n        if (shell !== null) {\n          this.placePolygonHoles(shell, minEdgeRings)\n          shellList.add(shell)\n        } else {\n          freeHoleList.addAll(minEdgeRings)\n        }\n      } else {\n        edgeRings.add(er)\n      }\n    }\n    return edgeRings\n  }\n  buildMaximalEdgeRings(dirEdges) {\n    const maxEdgeRings = new ArrayList()\n    for (let it = dirEdges.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.isInResult() && de.getLabel().isArea()) \n        if (de.getEdgeRing() === null) {\n          const er = new MaximalEdgeRing(de, this._geometryFactory)\n          maxEdgeRings.add(er)\n          er.setInResult()\n        }\n      \n    }\n    return maxEdgeRings\n  }\n  placePolygonHoles(shell, minEdgeRings) {\n    for (let it = minEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (er.isHole()) \n        er.setShell(shell)\n      \n    }\n  }\n  getPolygons() {\n    const resultPolyList = this.computePolygons(this._shellList)\n    return resultPolyList\n  }\n  findShell(minEdgeRings) {\n    let shellCount = 0\n    let shell = null\n    for (let it = minEdgeRings.iterator(); it.hasNext(); ) {\n      const er = it.next()\n      if (!er.isHole()) {\n        shell = er\n        shellCount++\n      }\n    }\n    Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list')\n    return shell\n  }\n  add() {\n    if (arguments.length === 1) {\n      const graph = arguments[0]\n      this.add(graph.getEdgeEnds(), graph.getNodes())\n    } else if (arguments.length === 2) {\n      const dirEdges = arguments[0], nodes = arguments[1]\n      PlanarGraph.linkResultDirectedEdges(nodes)\n      const maxEdgeRings = this.buildMaximalEdgeRings(dirEdges)\n      const freeHoleList = new ArrayList()\n      const edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList)\n      this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList)\n      this.placeFreeHoles(this._shellList, freeHoleList)\n    }\n  }\n}\n","import CoordinateList from '../../geom/CoordinateList.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Distance from '../../algorithm/Distance.js'\nexport default class BufferInputLineSimplifier {\n  constructor() {\n    BufferInputLineSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputLine = null\n    this._distanceTol = null\n    this._isDeleted = null\n    this._angleOrientation = Orientation.COUNTERCLOCKWISE\n    const inputLine = arguments[0]\n    this._inputLine = inputLine\n  }\n  static simplify(inputLine, distanceTol) {\n    const simp = new BufferInputLineSimplifier(inputLine)\n    return simp.simplify(distanceTol)\n  }\n  isDeletable(i0, i1, i2, distanceTol) {\n    const p0 = this._inputLine[i0]\n    const p1 = this._inputLine[i1]\n    const p2 = this._inputLine[i2]\n    if (!this.isConcave(p0, p1, p2)) return false\n    if (!this.isShallow(p0, p1, p2, distanceTol)) return false\n    return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n  }\n  deleteShallowConcavities() {\n    let index = 1\n    let midIndex = this.findNextNonDeletedIndex(index)\n    let lastIndex = this.findNextNonDeletedIndex(midIndex)\n    let isChanged = false\n    while (lastIndex < this._inputLine.length) {\n      let isMiddleVertexDeleted = false\n      if (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n        this._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE\n        isMiddleVertexDeleted = true\n        isChanged = true\n      }\n      if (isMiddleVertexDeleted) index = lastIndex; else index = midIndex\n      midIndex = this.findNextNonDeletedIndex(index)\n      lastIndex = this.findNextNonDeletedIndex(midIndex)\n    }\n    return isChanged\n  }\n  isShallowConcavity(p0, p1, p2, distanceTol) {\n    const orientation = Orientation.index(p0, p1, p2)\n    const isAngleToSimplify = orientation === this._angleOrientation\n    if (!isAngleToSimplify) return false\n    const dist = Distance.pointToSegment(p1, p0, p2)\n    return dist < distanceTol\n  }\n  isShallowSampled(p0, p2, i0, i2, distanceTol) {\n    let inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK)\n    if (inc <= 0) inc = 1\n    for (let i = i0; i < i2; i += inc) \n      if (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false\n    \n    return true\n  }\n  isConcave(p0, p1, p2) {\n    const orientation = Orientation.index(p0, p1, p2)\n    const isConcave = orientation === this._angleOrientation\n    return isConcave\n  }\n  simplify(distanceTol) {\n    this._distanceTol = Math.abs(distanceTol)\n    if (distanceTol < 0) this._angleOrientation = Orientation.CLOCKWISE\n    this._isDeleted = new Array(this._inputLine.length).fill(null)\n    let isChanged = false\n    do \n      isChanged = this.deleteShallowConcavities()\n    while (isChanged)\n    return this.collapseLine()\n  }\n  findNextNonDeletedIndex(index) {\n    let next = index + 1\n    while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) next++\n    return next\n  }\n  isShallow(p0, p1, p2, distanceTol) {\n    const dist = Distance.pointToSegment(p1, p0, p2)\n    return dist < distanceTol\n  }\n  collapseLine() {\n    const coordList = new CoordinateList()\n    for (let i = 0; i < this._inputLine.length; i++) \n      if (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i])\n    \n    return coordList.toCoordinateArray()\n  }\n}\nBufferInputLineSimplifier.INIT = 0\nBufferInputLineSimplifier.DELETE = 1\nBufferInputLineSimplifier.KEEP = 1\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10\n","import GeometryFactory from '../../geom/GeometryFactory.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class OffsetSegmentString {\n  constructor() {\n    OffsetSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._ptList = null\n    this._precisionModel = null\n    this._minimimVertexDistance = 0.0\n    this._ptList = new ArrayList()\n  }\n  getCoordinates() {\n    const coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE)\n    return coord\n  }\n  setPrecisionModel(precisionModel) {\n    this._precisionModel = precisionModel\n  }\n  addPt(pt) {\n    const bufPt = new Coordinate(pt)\n    this._precisionModel.makePrecise(bufPt)\n    if (this.isRedundant(bufPt)) return null\n    this._ptList.add(bufPt)\n  }\n  reverse() {}\n  addPts(pt, isForward) {\n    if (isForward) \n      for (let i = 0; i < pt.length; i++) \n        this.addPt(pt[i])\n      \n    else \n      for (let i = pt.length - 1; i >= 0; i--) \n        this.addPt(pt[i])\n      \n    \n  }\n  isRedundant(pt) {\n    if (this._ptList.size() < 1) return false\n    const lastPt = this._ptList.get(this._ptList.size() - 1)\n    const ptDist = pt.distance(lastPt)\n    if (ptDist < this._minimimVertexDistance) return true\n    return false\n  }\n  toString() {\n    const fact = new GeometryFactory()\n    const line = fact.createLineString(this.getCoordinates())\n    return line.toString()\n  }\n  closeRing() {\n    if (this._ptList.size() < 1) return null\n    const startPt = new Coordinate(this._ptList.get(0))\n    const lastPt = this._ptList.get(this._ptList.size() - 1)\n    if (startPt.equals(lastPt)) return null\n    this._ptList.add(startPt)\n  }\n  setMinimumVertexDistance(minimimVertexDistance) {\n    this._minimimVertexDistance = minimimVertexDistance\n  }\n}\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null)\n","import BufferParameters from './BufferParameters.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Intersection from '../../algorithm/Intersection.js'\nimport OffsetSegmentString from './OffsetSegmentString.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport Angle from '../../algorithm/Angle.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nexport default class OffsetSegmentGenerator {\n  constructor() {\n    OffsetSegmentGenerator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._maxCurveSegmentError = 0.0\n    this._filletAngleQuantum = null\n    this._closingSegLengthFactor = 1\n    this._segList = null\n    this._distance = 0.0\n    this._precisionModel = null\n    this._bufParams = null\n    this._li = null\n    this._s0 = null\n    this._s1 = null\n    this._s2 = null\n    this._seg0 = new LineSegment()\n    this._seg1 = new LineSegment()\n    this._offset0 = new LineSegment()\n    this._offset1 = new LineSegment()\n    this._side = 0\n    this._hasNarrowConcaveAngle = false\n    const precisionModel = arguments[0], bufParams = arguments[1], distance = arguments[2]\n    this._precisionModel = precisionModel\n    this._bufParams = bufParams\n    this._li = new RobustLineIntersector()\n    this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments()\n    if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR\n    this.init(distance)\n  }\n  addNextSegment(p, addStartPoint) {\n    this._s0 = this._s1\n    this._s1 = this._s2\n    this._s2 = p\n    this._seg0.setCoordinates(this._s0, this._s1)\n    this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0)\n    this._seg1.setCoordinates(this._s1, this._s2)\n    this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1)\n    if (this._s1.equals(this._s2)) return null\n    const orientation = Orientation.index(this._s0, this._s1, this._s2)\n    const outsideTurn = orientation === Orientation.CLOCKWISE && this._side === Position.LEFT || orientation === Orientation.COUNTERCLOCKWISE && this._side === Position.RIGHT\n    if (orientation === 0) \n      this.addCollinear(addStartPoint)\n    else if (outsideTurn) \n      this.addOutsideTurn(orientation, addStartPoint)\n    else \n      this.addInsideTurn(orientation, addStartPoint)\n    \n  }\n  addLineEndCap(p0, p1) {\n    const seg = new LineSegment(p0, p1)\n    const offsetL = new LineSegment()\n    this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL)\n    const offsetR = new LineSegment()\n    this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR)\n    const dx = p1.x - p0.x\n    const dy = p1.y - p0.y\n    const angle = Math.atan2(dy, dx)\n    switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1)\n      this.addDirectedFillet(p1, angle + Math.PI / 2, angle - Math.PI / 2, Orientation.CLOCKWISE, this._distance)\n      this._segList.addPt(offsetR.p1)\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1)\n      this._segList.addPt(offsetR.p1)\n      break\n    case BufferParameters.CAP_SQUARE:\n      const squareCapSideOffset = new Coordinate()\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle)\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle)\n      const squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y)\n      const squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y)\n      this._segList.addPt(squareCapLOffset)\n      this._segList.addPt(squareCapROffset)\n      break\n    }\n  }\n  getCoordinates() {\n    const pts = this._segList.getCoordinates()\n    return pts\n  }\n  addMitreJoin(p, offset0, offset1, distance) {\n    const intPt = Intersection.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1)\n    if (intPt !== null) {\n      const mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance)\n      if (mitreRatio <= this._bufParams.getMitreLimit()) {\n        this._segList.addPt(intPt)\n        return null\n      }\n    }\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit())\n  }\n  addOutsideTurn(orientation, addStartPoint) {\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n      this._segList.addPt(this._offset0.p1)\n      return null\n    }\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance)\n    } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n      this.addBevelJoin(this._offset0, this._offset1)\n    } else {\n      if (addStartPoint) this._segList.addPt(this._offset0.p1)\n      this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance)\n      this._segList.addPt(this._offset1.p0)\n    }\n  }\n  createSquare(p) {\n    this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance))\n    this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance))\n    this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance))\n    this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance))\n    this._segList.closeRing()\n  }\n  addSegments(pt, isForward) {\n    this._segList.addPts(pt, isForward)\n  }\n  addFirstSegment() {\n    this._segList.addPt(this._offset1.p0)\n  }\n  addCornerFillet(p, p0, p1, direction, radius) {\n    const dx0 = p0.x - p.x\n    const dy0 = p0.y - p.y\n    let startAngle = Math.atan2(dy0, dx0)\n    const dx1 = p1.x - p.x\n    const dy1 = p1.y - p.y\n    const endAngle = Math.atan2(dy1, dx1)\n    if (direction === Orientation.CLOCKWISE) {\n      if (startAngle <= endAngle) startAngle += 2.0 * Math.PI\n    } else {\n      if (startAngle >= endAngle) startAngle -= 2.0 * Math.PI\n    }\n    this._segList.addPt(p0)\n    this.addDirectedFillet(p, startAngle, endAngle, direction, radius)\n    this._segList.addPt(p1)\n  }\n  addLastSegment() {\n    this._segList.addPt(this._offset1.p1)\n  }\n  initSideSegments(s1, s2, side) {\n    this._s1 = s1\n    this._s2 = s2\n    this._side = side\n    this._seg1.setCoordinates(s1, s2)\n    this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1)\n  }\n  addLimitedMitreJoin(offset0, offset1, distance, mitreLimit) {\n    const basePt = this._seg0.p1\n    const ang0 = Angle.angle(basePt, this._seg0.p0)\n    const angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1)\n    const angDiffHalf = angDiff / 2\n    const midAng = Angle.normalize(ang0 + angDiffHalf)\n    const mitreMidAng = Angle.normalize(midAng + Math.PI)\n    const mitreDist = mitreLimit * distance\n    const bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf))\n    const bevelHalfLen = distance - bevelDelta\n    const bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng)\n    const bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng)\n    const bevelMidPt = new Coordinate(bevelMidX, bevelMidY)\n    const mitreMidLine = new LineSegment(basePt, bevelMidPt)\n    const bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen)\n    const bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen)\n    if (this._side === Position.LEFT) {\n      this._segList.addPt(bevelEndLeft)\n      this._segList.addPt(bevelEndRight)\n    } else {\n      this._segList.addPt(bevelEndRight)\n      this._segList.addPt(bevelEndLeft)\n    }\n  }\n  addDirectedFillet(p, startAngle, endAngle, direction, radius) {\n    const directionFactor = direction === Orientation.CLOCKWISE ? -1 : 1\n    const totalAngle = Math.abs(startAngle - endAngle)\n    const nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5)\n    if (nSegs < 1) return null\n    const angleInc = totalAngle / nSegs\n    const pt = new Coordinate()\n    for (let i = 0; i < nSegs; i++) {\n      const angle = startAngle + directionFactor * i * angleInc\n      pt.x = p.x + radius * Math.cos(angle)\n      pt.y = p.y + radius * Math.sin(angle)\n      this._segList.addPt(pt)\n    }\n  }\n  computeOffsetSegment(seg, side, distance, offset) {\n    const sideSign = side === Position.LEFT ? 1 : -1\n    const dx = seg.p1.x - seg.p0.x\n    const dy = seg.p1.y - seg.p0.y\n    const len = Math.sqrt(dx * dx + dy * dy)\n    const ux = sideSign * distance * dx / len\n    const uy = sideSign * distance * dy / len\n    offset.p0.x = seg.p0.x - uy\n    offset.p0.y = seg.p0.y + ux\n    offset.p1.x = seg.p1.x - uy\n    offset.p1.y = seg.p1.y + ux\n  }\n  addInsideTurn(orientation, addStartPoint) {\n    this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1)\n    if (this._li.hasIntersection()) {\n      this._segList.addPt(this._li.getIntersection(0))\n    } else {\n      this._hasNarrowConcaveAngle = true\n      if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n        this._segList.addPt(this._offset0.p1)\n      } else {\n        this._segList.addPt(this._offset0.p1)\n        if (this._closingSegLengthFactor > 0) {\n          const mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1))\n          this._segList.addPt(mid0)\n          const mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1))\n          this._segList.addPt(mid1)\n        } else {\n          this._segList.addPt(this._s1)\n        }\n        this._segList.addPt(this._offset1.p0)\n      }\n    }\n  }\n  createCircle(p) {\n    const pt = new Coordinate(p.x + this._distance, p.y)\n    this._segList.addPt(pt)\n    this.addDirectedFillet(p, 0.0, 2.0 * Math.PI, -1, this._distance)\n    this._segList.closeRing()\n  }\n  addBevelJoin(offset0, offset1) {\n    this._segList.addPt(offset0.p1)\n    this._segList.addPt(offset1.p0)\n  }\n  init(distance) {\n    this._distance = distance\n    this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0))\n    this._segList = new OffsetSegmentString()\n    this._segList.setPrecisionModel(this._precisionModel)\n    this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)\n  }\n  addCollinear(addStartPoint) {\n    this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2)\n    const numInt = this._li.getIntersectionNum()\n    if (numInt >= 2) \n      if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n        if (addStartPoint) this._segList.addPt(this._offset0.p1)\n        this._segList.addPt(this._offset1.p0)\n      } else {\n        this.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, Orientation.CLOCKWISE, this._distance)\n      }\n    \n  }\n  closeRing() {\n    this._segList.closeRing()\n  }\n  hasNarrowConcaveAngle() {\n    return this._hasNarrowConcaveAngle\n  }\n}\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80\n","import BufferParameters from './BufferParameters.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator.js'\nexport default class OffsetCurveBuilder {\n  constructor() {\n    OffsetCurveBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._distance = 0.0\n    this._precisionModel = null\n    this._bufParams = null\n    const precisionModel = arguments[0], bufParams = arguments[1]\n    this._precisionModel = precisionModel\n    this._bufParams = bufParams\n  }\n  static copyCoordinates(pts) {\n    const copy = new Array(pts.length).fill(null)\n    for (let i = 0; i < copy.length; i++) \n      copy[i] = new Coordinate(pts[i])\n    \n    return copy\n  }\n  getOffsetCurve(inputPts, distance) {\n    this._distance = distance\n    if (distance === 0.0) return null\n    const isRightSide = distance < 0.0\n    const posDistance = Math.abs(distance)\n    const segGen = this.getSegGen(posDistance)\n    if (inputPts.length <= 1) \n      this.computePointCurve(inputPts[0], segGen)\n    else \n      this.computeOffsetCurve(inputPts, isRightSide, segGen)\n    \n    const curvePts = segGen.getCoordinates()\n    if (isRightSide) CoordinateArrays.reverse(curvePts)\n    return curvePts\n  }\n  computeSingleSidedBufferCurve(inputPts, isRightSide, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    if (isRightSide) {\n      segGen.addSegments(inputPts, true)\n      const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n      const n2 = simp2.length - 1\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = n2 - 2; i >= 0; i--) \n        segGen.addNextSegment(simp2[i], true)\n      \n    } else {\n      segGen.addSegments(inputPts, false)\n      const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n      const n1 = simp1.length - 1\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = 2; i <= n1; i++) \n        segGen.addNextSegment(simp1[i], true)\n      \n    }\n    segGen.addLastSegment()\n    segGen.closeRing()\n  }\n  computeRingBufferCurve(inputPts, side, segGen) {\n    let distTol = this.simplifyTolerance(this._distance)\n    if (side === Position.RIGHT) distTol = -distTol\n    const simp = BufferInputLineSimplifier.simplify(inputPts, distTol)\n    const n = simp.length - 1\n    segGen.initSideSegments(simp[n - 1], simp[0], side)\n    for (let i = 1; i <= n; i++) {\n      const addStartPoint = i !== 1\n      segGen.addNextSegment(simp[i], addStartPoint)\n    }\n    segGen.closeRing()\n  }\n  computeLineBufferCurve(inputPts, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n    const n1 = simp1.length - 1\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n    for (let i = 2; i <= n1; i++) \n      segGen.addNextSegment(simp1[i], true)\n    \n    segGen.addLastSegment()\n    segGen.addLineEndCap(simp1[n1 - 1], simp1[n1])\n    const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n    const n2 = simp2.length - 1\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n    for (let i = n2 - 2; i >= 0; i--) \n      segGen.addNextSegment(simp2[i], true)\n    \n    segGen.addLastSegment()\n    segGen.addLineEndCap(simp2[1], simp2[0])\n    segGen.closeRing()\n  }\n  computePointCurve(pt, segGen) {\n    switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt)\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt)\n      break\n    }\n  }\n  getLineCurve(inputPts, distance) {\n    this._distance = distance\n    if (this.isLineOffsetEmpty(distance)) return null\n    const posDistance = Math.abs(distance)\n    const segGen = this.getSegGen(posDistance)\n    if (inputPts.length <= 1) {\n      this.computePointCurve(inputPts[0], segGen)\n    } else \n    if (this._bufParams.isSingleSided()) {\n      const isRightSide = distance < 0.0\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen)\n    } else {\n      this.computeLineBufferCurve(inputPts, segGen)\n    }\n    \n    const lineCoord = segGen.getCoordinates()\n    return lineCoord\n  }\n  getBufferParameters() {\n    return this._bufParams\n  }\n  simplifyTolerance(bufDistance) {\n    return bufDistance * this._bufParams.getSimplifyFactor()\n  }\n  getRingCurve(inputPts, side, distance) {\n    this._distance = distance\n    if (inputPts.length <= 2) return this.getLineCurve(inputPts, distance)\n    if (distance === 0.0) \n      return OffsetCurveBuilder.copyCoordinates(inputPts)\n    \n    const segGen = this.getSegGen(distance)\n    this.computeRingBufferCurve(inputPts, side, segGen)\n    return segGen.getCoordinates()\n  }\n  computeOffsetCurve(inputPts, isRightSide, segGen) {\n    const distTol = this.simplifyTolerance(this._distance)\n    if (isRightSide) {\n      const simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol)\n      const n2 = simp2.length - 1\n      segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = n2 - 2; i >= 0; i--) \n        segGen.addNextSegment(simp2[i], true)\n      \n    } else {\n      const simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol)\n      const n1 = simp1.length - 1\n      segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT)\n      segGen.addFirstSegment()\n      for (let i = 2; i <= n1; i++) \n        segGen.addNextSegment(simp1[i], true)\n      \n    }\n    segGen.addLastSegment()\n  }\n  isLineOffsetEmpty(distance) {\n    if (distance === 0.0) return true\n    if (distance < 0.0 && !this._bufParams.isSingleSided()) return true\n    return false\n  }\n  getSegGen(distance) {\n    return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n  }\n}\n","import hasInterface from '../../../../../hasInterface.js'\nimport Position from '../../geomgraph/Position.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport DirectedEdge from '../../geomgraph/DirectedEdge.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport Comparable from '../../../../../java/lang/Comparable.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport List from '../../../../../java/util/List.js'\nexport default class SubgraphDepthLocater {\n  constructor() {\n    SubgraphDepthLocater.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._subgraphs = null\n    this._seg = new LineSegment()\n    const subgraphs = arguments[0]\n    this._subgraphs = subgraphs\n  }\n  findStabbedSegments() {\n    if (arguments.length === 1) {\n      const stabbingRayLeftPt = arguments[0]\n      const stabbedSegments = new ArrayList()\n      for (let i = this._subgraphs.iterator(); i.hasNext(); ) {\n        const bsg = i.next()\n        const env = bsg.getEnvelope()\n        if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue\n        this.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments)\n      }\n      return stabbedSegments\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n        const stabbingRayLeftPt = arguments[0], dirEdge = arguments[1], stabbedSegments = arguments[2]\n        const pts = dirEdge.getEdge().getCoordinates()\n        for (let i = 0; i < pts.length - 1; i++) {\n          this._seg.p0 = pts[i]\n          this._seg.p1 = pts[i + 1]\n          if (this._seg.p0.y > this._seg.p1.y) this._seg.reverse()\n          const maxx = Math.max(this._seg.p0.x, this._seg.p1.x)\n          if (maxx < stabbingRayLeftPt.x) continue\n          if (this._seg.isHorizontal()) continue\n          if (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue\n          if (Orientation.index(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === Orientation.RIGHT) continue\n          let depth = dirEdge.getDepth(Position.LEFT)\n          if (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT)\n          const ds = new DepthSegment(this._seg, depth)\n          stabbedSegments.add(ds)\n        }\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n        const stabbingRayLeftPt = arguments[0], dirEdges = arguments[1], stabbedSegments = arguments[2]\n        for (let i = dirEdges.iterator(); i.hasNext(); ) {\n          const de = i.next()\n          if (!de.isForward()) continue\n          this.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments)\n        }\n      }\n    }\n  }\n  getDepth(p) {\n    const stabbedSegments = this.findStabbedSegments(p)\n    if (stabbedSegments.size() === 0) return 0\n    const ds = Collections.min(stabbedSegments)\n    return ds._leftDepth\n  }\n}\nclass DepthSegment {\n  constructor() {\n    DepthSegment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._upwardSeg = null\n    this._leftDepth = null\n    const seg = arguments[0], depth = arguments[1]\n    this._upwardSeg = new LineSegment(seg)\n    this._leftDepth = depth\n  }\n  compareTo(obj) {\n    const other = obj\n    if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1\n    if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1\n    let orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg)\n    if (orientIndex !== 0) return orientIndex\n    orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg)\n    if (orientIndex !== 0) return orientIndex\n    return this._upwardSeg.compareTo(other._upwardSeg)\n  }\n  compareX(seg0, seg1) {\n    const compare0 = seg0.p0.compareTo(seg1.p0)\n    if (compare0 !== 0) return compare0\n    return seg0.p1.compareTo(seg1.p1)\n  }\n  toString() {\n    return this._upwardSeg.toString()\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\nSubgraphDepthLocater.DepthSegment = DepthSegment\n","import Location from '../../geom/Location.js'\nimport LineString from '../../geom/LineString.js'\nimport Position from '../../geomgraph/Position.js'\nimport Point from '../../geom/Point.js'\nimport NodedSegmentString from '../../noding/NodedSegmentString.js'\nimport Polygon from '../../geom/Polygon.js'\nimport MultiPoint from '../../geom/MultiPoint.js'\nimport LinearRing from '../../geom/LinearRing.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport MultiPolygon from '../../geom/MultiPolygon.js'\nimport Label from '../../geomgraph/Label.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../../java/lang/UnsupportedOperationException.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Distance from '../../algorithm/Distance.js'\nimport MultiLineString from '../../geom/MultiLineString.js'\nimport Triangle from '../../geom/Triangle.js'\nexport default class OffsetCurveSetBuilder {\n  constructor() {\n    OffsetCurveSetBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._distance = null\n    this._curveBuilder = null\n    this._curveList = new ArrayList()\n    const inputGeom = arguments[0], distance = arguments[1], curveBuilder = arguments[2]\n    this._inputGeom = inputGeom\n    this._distance = distance\n    this._curveBuilder = curveBuilder\n  }\n  addRingSide(coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n    if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null\n    let leftLoc = cwLeftLoc\n    let rightLoc = cwRightLoc\n    if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && Orientation.isCCW(coord)) {\n      leftLoc = cwRightLoc\n      rightLoc = cwLeftLoc\n      side = Position.opposite(side)\n    }\n    const curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance)\n    this.addCurve(curve, leftLoc, rightLoc)\n  }\n  addRingBothSides(coord, distance) {\n    this.addRingSide(coord, distance, Position.LEFT, Location.EXTERIOR, Location.INTERIOR)\n    this.addRingSide(coord, distance, Position.RIGHT, Location.INTERIOR, Location.EXTERIOR)\n  }\n  addPoint(p) {\n    if (this._distance <= 0.0) return null\n    const coord = p.getCoordinates()\n    const curve = this._curveBuilder.getLineCurve(coord, this._distance)\n    this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR)\n  }\n  addPolygon(p) {\n    let offsetDistance = this._distance\n    let offsetSide = Position.LEFT\n    if (this._distance < 0.0) {\n      offsetDistance = -this._distance\n      offsetSide = Position.RIGHT\n    }\n    const shell = p.getExteriorRing()\n    const shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates())\n    if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null\n    if (this._distance <= 0.0 && shellCoord.length < 3) return null\n    this.addRingSide(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      const holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates())\n      if (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue\n      this.addRingSide(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR)\n    }\n  }\n  isTriangleErodedCompletely(triangleCoord, bufferDistance) {\n    const tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2])\n    const inCentre = tri.inCentre()\n    const distToCentre = Distance.pointToSegment(inCentre, tri.p0, tri.p1)\n    return distToCentre < Math.abs(bufferDistance)\n  }\n  addLineString(line) {\n    if (this._curveBuilder.isLineOffsetEmpty(this._distance)) return null\n    const coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (CoordinateArrays.isRing(coord) && !this._curveBuilder.getBufferParameters().isSingleSided()) {\n      this.addRingBothSides(coord, this._distance)\n    } else {\n      const curve = this._curveBuilder.getLineCurve(coord, this._distance)\n      this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR)\n    }\n  }\n  addCurve(coord, leftLoc, rightLoc) {\n    if (coord === null || coord.length < 2) return null\n    const e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc))\n    this._curveList.add(e)\n  }\n  getCurves() {\n    this.add(this._inputGeom)\n    return this._curveList\n  }\n  add(g) {\n    if (g.isEmpty()) return null\n    if (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getGeometryType())\n  }\n  isErodedCompletely(ring, bufferDistance) {\n    const ringCoord = ring.getCoordinates()\n    if (ringCoord.length < 4) return bufferDistance < 0\n    if (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance)\n    const env = ring.getEnvelopeInternal()\n    const envMinDimension = Math.min(env.getHeight(), env.getWidth())\n    if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true\n    return false\n  }\n  addCollection(gc) {\n    for (let i = 0; i < gc.getNumGeometries(); i++) {\n      const g = gc.getGeometryN(i)\n      this.add(g)\n    }\n  }\n}\n","import StringBuffer from '../../../../java/lang/StringBuffer.js'\nimport Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport System from '../../../../java/lang/System.js'\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Assert from '../util/Assert.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeEndStar {\n  constructor() {\n    EdgeEndStar.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edgeMap = new TreeMap()\n    this._edgeList = null\n    this._ptInAreaLocation = [Location.NONE, Location.NONE]\n  }\n  getNextCW(ee) {\n    this.getEdges()\n    const i = this._edgeList.indexOf(ee)\n    let iNextCW = i - 1\n    if (i === 0) iNextCW = this._edgeList.size() - 1\n    return this._edgeList.get(iNextCW)\n  }\n  propagateSideLabels(geomIndex) {\n    let startLoc = Location.NONE\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT)\n    }\n    if (startLoc === Location.NONE) return null\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc)\n      if (label.isArea(geomIndex)) {\n        const leftLoc = label.getLocation(geomIndex, Position.LEFT)\n        const rightLoc = label.getLocation(geomIndex, Position.RIGHT)\n        if (rightLoc !== Location.NONE) {\n          if (rightLoc !== currLoc) throw new TopologyException('side location conflict', e.getCoordinate())\n          if (leftLoc === Location.NONE) \n            Assert.shouldNeverReachHere('found single null side (at ' + e.getCoordinate() + ')')\n          \n          currLoc = leftLoc\n        } else {\n          Assert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side')\n          label.setLocation(geomIndex, Position.RIGHT, currLoc)\n          label.setLocation(geomIndex, Position.LEFT, currLoc)\n        }\n      }\n    }\n  }\n  getCoordinate() {\n    const it = this.iterator()\n    if (!it.hasNext()) return null\n    const e = it.next()\n    return e.getCoordinate()\n  }\n  print(out) {\n    System.out.println('EdgeEndStar:   ' + this.getCoordinate())\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      e.print(out)\n    }\n  }\n  isAreaLabelsConsistent(geomGraph) {\n    this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule())\n    return this.checkAreaLabelsConsistent(0)\n  }\n  checkAreaLabelsConsistent(geomIndex) {\n    const edges = this.getEdges()\n    if (edges.size() <= 0) return true\n    const lastEdgeIndex = edges.size() - 1\n    const startLabel = edges.get(lastEdgeIndex).getLabel()\n    const startLoc = startLabel.getLocation(geomIndex, Position.LEFT)\n    Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge')\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge')\n      const leftLoc = label.getLocation(geomIndex, Position.LEFT)\n      const rightLoc = label.getLocation(geomIndex, Position.RIGHT)\n      if (leftLoc === rightLoc) \n        return false\n      \n      if (rightLoc !== currLoc) \n        return false\n      \n      currLoc = leftLoc\n    }\n    return true\n  }\n  findIndex(eSearch) {\n    this.iterator()\n    for (let i = 0; i < this._edgeList.size(); i++) {\n      const e = this._edgeList.get(i)\n      if (e === eSearch) return i\n    }\n    return -1\n  }\n  iterator() {\n    return this.getEdges().iterator()\n  }\n  getEdges() {\n    if (this._edgeList === null) \n      this._edgeList = new ArrayList(this._edgeMap.values())\n    \n    return this._edgeList\n  }\n  getLocation(geomIndex, p, geom) {\n    if (this._ptInAreaLocation[geomIndex] === Location.NONE) \n      this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry())\n    \n    return this._ptInAreaLocation[geomIndex]\n  }\n  toString() {\n    const buf = new StringBuffer()\n    buf.append('EdgeEndStar:   ' + this.getCoordinate())\n    buf.append('\\n')\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      buf.append(e)\n      buf.append('\\n')\n    }\n    return buf.toString()\n  }\n  computeEdgeEndLabels(boundaryNodeRule) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      ee.computeLabel(boundaryNodeRule)\n    }\n  }\n  computeLabelling(geomGraph) {\n    this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule())\n    this.propagateSideLabels(0)\n    this.propagateSideLabels(1)\n    const hasDimensionalCollapseEdge = [false, false]\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      for (let geomi = 0; geomi < 2; geomi++) \n        if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true\n      \n    }\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      for (let geomi = 0; geomi < 2; geomi++) \n        if (label.isAnyNull(geomi)) {\n          let loc = Location.NONE\n          if (hasDimensionalCollapseEdge[geomi]) {\n            loc = Location.EXTERIOR\n          } else {\n            const p = e.getCoordinate()\n            loc = this.getLocation(geomi, p, geomGraph)\n          }\n          label.setAllLocationsIfNull(geomi, loc)\n        }\n      \n    }\n  }\n  getDegree() {\n    return this._edgeMap.size()\n  }\n  insertEdgeEnd(e, obj) {\n    this._edgeMap.put(e, obj)\n    this._edgeList = null\n  }\n}\n","import Location from '../geom/Location.js'\nimport Position from './Position.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport EdgeEndStar from './EdgeEndStar.js'\nimport System from '../../../../java/lang/System.js'\nimport Label from './Label.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Quadrant from './Quadrant.js'\nimport Assert from '../util/Assert.js'\nexport default class DirectedEdgeStar extends EdgeEndStar {\n  constructor() {\n    super()\n    DirectedEdgeStar.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._resultAreaEdgeList = null\n    this._label = null\n    this._SCANNING_FOR_INCOMING = 1\n    this._LINKING_TO_OUTGOING = 2\n  }\n  linkResultDirectedEdges() {\n    this.getResultAreaEdges()\n    let firstOut = null\n    let incoming = null\n    let state = this._SCANNING_FOR_INCOMING\n    for (let i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      const nextOut = this._resultAreaEdgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (!nextOut.getLabel().isArea()) continue\n      if (firstOut === null && nextOut.isInResult()) firstOut = nextOut\n      switch (state) {\n      case this._SCANNING_FOR_INCOMING:\n        if (!nextIn.isInResult()) continue\n        incoming = nextIn\n        state = this._LINKING_TO_OUTGOING\n        break\n      case this._LINKING_TO_OUTGOING:\n        if (!nextOut.isInResult()) continue\n        incoming.setNext(nextOut)\n        state = this._SCANNING_FOR_INCOMING\n        break\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) throw new TopologyException('no outgoing dirEdge found', this.getCoordinate())\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge')\n      incoming.setNext(firstOut)\n    }\n  }\n  insert(ee) {\n    const de = ee\n    this.insertEdgeEnd(de, de)\n  }\n  getRightmostEdge() {\n    const edges = this.getEdges()\n    const size = edges.size()\n    if (size < 1) return null\n    const de0 = edges.get(0)\n    if (size === 1) return de0\n    const deLast = edges.get(size - 1)\n    const quad0 = de0.getQuadrant()\n    const quad1 = deLast.getQuadrant()\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) {\n      return de0\n    } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) {\n      return deLast\n    } else {\n      const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node')\n    return null\n  }\n  print(out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate())\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      out.print('out ')\n      de.print(out)\n      out.println()\n      out.print('in ')\n      de.getSym().print(out)\n      out.println()\n    }\n  }\n  getResultAreaEdges() {\n    if (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList\n    this._resultAreaEdgeList = new ArrayList()\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de)\n    }\n    return this._resultAreaEdgeList\n  }\n  updateLabelling(nodeLabel) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0))\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1))\n    }\n  }\n  linkAllDirectedEdges() {\n    this.getEdges()\n    let prevOut = null\n    let firstIn = null\n    for (let i = this._edgeList.size() - 1; i >= 0; i--) {\n      const nextOut = this._edgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (firstIn === null) firstIn = nextIn\n      if (prevOut !== null) nextIn.setNext(prevOut)\n      prevOut = nextOut\n    }\n    firstIn.setNext(prevOut)\n  }\n  computeDepths() {\n    if (arguments.length === 1) {\n      const de = arguments[0]\n      const edgeIndex = this.findIndex(de)\n      const startDepth = de.getDepth(Position.LEFT)\n      const targetLastDepth = de.getDepth(Position.RIGHT)\n      const nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth)\n      const lastDepth = this.computeDepths(0, edgeIndex, nextDepth)\n      if (lastDepth !== targetLastDepth) throw new TopologyException('depth mismatch at ' + de.getCoordinate())\n    } else if (arguments.length === 3) {\n      const startIndex = arguments[0], endIndex = arguments[1], startDepth = arguments[2]\n      let currDepth = startDepth\n      for (let i = startIndex; i < endIndex; i++) {\n        const nextDe = this._edgeList.get(i)\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth)\n        currDepth = nextDe.getDepth(Position.LEFT)\n      }\n      return currDepth\n    }\n  }\n  mergeSymLabels() {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      label.merge(de.getSym().getLabel())\n    }\n  }\n  linkMinimalDirectedEdges(er) {\n    let firstOut = null\n    let incoming = null\n    let state = this._SCANNING_FOR_INCOMING\n    for (let i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      const nextOut = this._resultAreaEdgeList.get(i)\n      const nextIn = nextOut.getSym()\n      if (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut\n      switch (state) {\n      case this._SCANNING_FOR_INCOMING:\n        if (nextIn.getEdgeRing() !== er) continue\n        incoming = nextIn\n        state = this._LINKING_TO_OUTGOING\n        break\n      case this._LINKING_TO_OUTGOING:\n        if (nextOut.getEdgeRing() !== er) continue\n        incoming.setNextMin(nextOut)\n        state = this._SCANNING_FOR_INCOMING\n        break\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge')\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge')\n      incoming.setNextMin(firstOut)\n    }\n  }\n  getOutgoingDegree() {\n    if (arguments.length === 0) {\n      let degree = 0\n      for (let it = this.iterator(); it.hasNext(); ) {\n        const de = it.next()\n        if (de.isInResult()) degree++\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      const er = arguments[0]\n      let degree = 0\n      for (let it = this.iterator(); it.hasNext(); ) {\n        const de = it.next()\n        if (de.getEdgeRing() === er) degree++\n      }\n      return degree\n    }\n  }\n  getLabel() {\n    return this._label\n  }\n  findCoveredLineEdges() {\n    let startLoc = Location.NONE\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const nextOut = it.next()\n      const nextIn = nextOut.getSym()\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) return null\n    let currLoc = startLoc\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const nextOut = it.next()\n      const nextIn = nextOut.getSym()\n      if (nextOut.isLineEdge()) {\n        nextOut.getEdge().setCovered(currLoc === Location.INTERIOR)\n      } else {\n        if (nextOut.isInResult()) currLoc = Location.EXTERIOR\n        if (nextIn.isInResult()) currLoc = Location.INTERIOR\n      }\n    }\n  }\n  computeLabelling(geom) {\n    super.computeLabelling.call(this, geom)\n    this._label = new Label(Location.NONE)\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      const e = ee.getEdge()\n      const eLabel = e.getLabel()\n      for (let i = 0; i < 2; i++) {\n        const eLoc = eLabel.getLocation(i)\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR)\n      }\n    }\n  }\n}\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar.js'\nimport Node from '../../geomgraph/Node.js'\nimport NodeFactory from '../../geomgraph/NodeFactory.js'\nexport default class OverlayNodeFactory extends NodeFactory {\n  constructor() {\n    super()\n  }\n  createNode(coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  }\n}\n","import Comparable from '../../../../java/lang/Comparable.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nexport default class OrientedCoordinateArray {\n  constructor() {\n    OrientedCoordinateArray.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._orientation = null\n    const pts = arguments[0]\n    this._pts = pts\n    this._orientation = OrientedCoordinateArray.orientation(pts)\n  }\n  static orientation(pts) {\n    return CoordinateArrays.increasingDirection(pts) === 1\n  }\n  static compareOriented(pts1, orientation1, pts2, orientation2) {\n    const dir1 = orientation1 ? 1 : -1\n    const dir2 = orientation2 ? 1 : -1\n    const limit1 = orientation1 ? pts1.length : -1\n    const limit2 = orientation2 ? pts2.length : -1\n    let i1 = orientation1 ? 0 : pts1.length - 1\n    let i2 = orientation2 ? 0 : pts2.length - 1\n    while (true) {\n      const compPt = pts1[i1].compareTo(pts2[i2])\n      if (compPt !== 0) return compPt\n      i1 += dir1\n      i2 += dir2\n      const done1 = i1 === limit1\n      const done2 = i2 === limit2\n      if (done1 && !done2) return -1\n      if (!done1 && done2) return 1\n      if (done1 && done2) return 0\n    }\n  }\n  compareTo(o1) {\n    const oca = o1\n    const comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation)\n    return comp\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class EdgeList {\n  constructor() {\n    EdgeList.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edges = new ArrayList()\n    this._ocaMap = new TreeMap()\n  }\n  print(out) {\n    out.print('MULTILINESTRING ( ')\n    for (let j = 0; j < this._edges.size(); j++) {\n      const e = this._edges.get(j)\n      if (j > 0) out.print(',')\n      out.print('(')\n      const pts = e.getCoordinates()\n      for (let i = 0; i < pts.length; i++) {\n        if (i > 0) out.print(',')\n        out.print(pts[i].x + ' ' + pts[i].y)\n      }\n      out.println(')')\n    }\n    out.print(')  ')\n  }\n  addAll(edgeColl) {\n    for (let i = edgeColl.iterator(); i.hasNext(); ) \n      this.add(i.next())\n    \n  }\n  findEdgeIndex(e) {\n    for (let i = 0; i < this._edges.size(); i++) \n      if (this._edges.get(i).equals(e)) return i\n    \n    return -1\n  }\n  iterator() {\n    return this._edges.iterator()\n  }\n  getEdges() {\n    return this._edges\n  }\n  get(i) {\n    return this._edges.get(i)\n  }\n  findEqualEdge(e) {\n    const oca = new OrientedCoordinateArray(e.getCoordinates())\n    const matchEdge = this._ocaMap.get(oca)\n    return matchEdge\n  }\n  add(e) {\n    this._edges.add(e)\n    const oca = new OrientedCoordinateArray(e.getCoordinates())\n    this._ocaMap.put(oca, e)\n  }\n}\n","export default class SegmentIntersector {\n  processIntersections(e0, segIndex0, e1, segIndex1) {}\n  isDone() {}\n}\n","import SegmentIntersector from './SegmentIntersector.js'\nexport default class IntersectionAdder {\n  constructor() {\n    IntersectionAdder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hasIntersection = false\n    this._hasProper = false\n    this._hasProperInterior = false\n    this._hasInterior = false\n    this._properIntersectionPoint = null\n    this._li = null\n    this._isSelfIntersection = null\n    this.numIntersections = 0\n    this.numInteriorIntersections = 0\n    this.numProperIntersections = 0\n    this.numTests = 0\n    const li = arguments[0]\n    this._li = li\n  }\n  static isAdjacentSegments(i1, i2) {\n    return Math.abs(i1 - i2) === 1\n  }\n  isTrivialIntersection(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1) \n      if (this._li.getIntersectionNum() === 1) {\n        if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true\n        if (e0.isClosed()) {\n          const maxSegIndex = e0.size() - 1\n          if (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) \n            return true\n          \n        }\n      }\n    \n    return false\n  }\n  getProperIntersectionPoint() {\n    return this._properIntersectionPoint\n  }\n  hasProperInteriorIntersection() {\n    return this._hasProperInterior\n  }\n  getLineIntersector() {\n    return this._li\n  }\n  hasProperIntersection() {\n    return this._hasProper\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    this.numTests++\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) {\n      this.numIntersections++\n      if (this._li.isInteriorIntersection()) {\n        this.numInteriorIntersections++\n        this._hasInterior = true\n      }\n      if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n        this._hasIntersection = true\n        e0.addIntersections(this._li, segIndex0, 0)\n        e1.addIntersections(this._li, segIndex1, 1)\n        if (this._li.isProper()) {\n          this.numProperIntersections++\n          this._hasProper = true\n          this._hasProperInterior = true\n        }\n      }\n    }\n  }\n  hasIntersection() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return false\n  }\n  hasInteriorIntersection() {\n    return this._hasInterior\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","import Location from '../../geom/Location.js'\nimport BufferSubgraph from './BufferSubgraph.js'\nimport PolygonBuilder from '../overlay/PolygonBuilder.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport Position from '../../geomgraph/Position.js'\nimport MCIndexNoder from '../../noding/MCIndexNoder.js'\nimport OffsetCurveBuilder from './OffsetCurveBuilder.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport SubgraphDepthLocater from './SubgraphDepthLocater.js'\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder.js'\nimport Label from '../../geomgraph/Label.js'\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory.js'\nimport EdgeList from '../../geomgraph/EdgeList.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport IntersectionAdder from '../../noding/IntersectionAdder.js'\nimport Edge from '../../geomgraph/Edge.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nexport default class BufferBuilder {\n  constructor() {\n    BufferBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._bufParams = null\n    this._workingPrecisionModel = null\n    this._workingNoder = null\n    this._geomFact = null\n    this._graph = null\n    this._edgeList = new EdgeList()\n    const bufParams = arguments[0]\n    this._bufParams = bufParams\n  }\n  static depthDelta(label) {\n    const lLoc = label.getLocation(0, Position.LEFT)\n    const rLoc = label.getLocation(0, Position.RIGHT)\n    if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1\n    return 0\n  }\n  static convertSegStrings(it) {\n    const fact = new GeometryFactory()\n    const lines = new ArrayList()\n    while (it.hasNext()) {\n      const ss = it.next()\n      const line = fact.createLineString(ss.getCoordinates())\n      lines.add(line)\n    }\n    return fact.buildGeometry(lines)\n  }\n  setWorkingPrecisionModel(pm) {\n    this._workingPrecisionModel = pm\n  }\n  insertUniqueEdge(e) {\n    const existingEdge = this._edgeList.findEqualEdge(e)\n    if (existingEdge !== null) {\n      const existingLabel = existingEdge.getLabel()\n      let labelToMerge = e.getLabel()\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel())\n        labelToMerge.flip()\n      }\n      existingLabel.merge(labelToMerge)\n      const mergeDelta = BufferBuilder.depthDelta(labelToMerge)\n      const existingDelta = existingEdge.getDepthDelta()\n      const newDelta = existingDelta + mergeDelta\n      existingEdge.setDepthDelta(newDelta)\n    } else {\n      this._edgeList.add(e)\n      e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()))\n    }\n  }\n  buildSubgraphs(subgraphList, polyBuilder) {\n    const processedGraphs = new ArrayList()\n    for (let i = subgraphList.iterator(); i.hasNext(); ) {\n      const subgraph = i.next()\n      const p = subgraph.getRightmostCoordinate()\n      const locater = new SubgraphDepthLocater(processedGraphs)\n      const outsideDepth = locater.getDepth(p)\n      subgraph.computeDepth(outsideDepth)\n      subgraph.findResultEdges()\n      processedGraphs.add(subgraph)\n      polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes())\n    }\n  }\n  createSubgraphs(graph) {\n    const subgraphList = new ArrayList()\n    for (let i = graph.getNodes().iterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (!node.isVisited()) {\n        const subgraph = new BufferSubgraph()\n        subgraph.create(node)\n        subgraphList.add(subgraph)\n      }\n    }\n    Collections.sort(subgraphList, Collections.reverseOrder())\n    return subgraphList\n  }\n  createEmptyResultGeometry() {\n    const emptyGeom = this._geomFact.createPolygon()\n    return emptyGeom\n  }\n  getNoder(precisionModel) {\n    if (this._workingNoder !== null) return this._workingNoder\n    const noder = new MCIndexNoder()\n    const li = new RobustLineIntersector()\n    li.setPrecisionModel(precisionModel)\n    noder.setSegmentIntersector(new IntersectionAdder(li))\n    return noder\n  }\n  buffer(g, distance) {\n    let precisionModel = this._workingPrecisionModel\n    if (precisionModel === null) precisionModel = g.getPrecisionModel()\n    this._geomFact = g.getFactory()\n    const curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams)\n    const curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder)\n    const bufferSegStrList = curveSetBuilder.getCurves()\n    if (bufferSegStrList.size() <= 0) \n      return this.createEmptyResultGeometry()\n    \n    this.computeNodedEdges(bufferSegStrList, precisionModel)\n    this._graph = new PlanarGraph(new OverlayNodeFactory())\n    this._graph.addEdges(this._edgeList.getEdges())\n    const subgraphList = this.createSubgraphs(this._graph)\n    const polyBuilder = new PolygonBuilder(this._geomFact)\n    this.buildSubgraphs(subgraphList, polyBuilder)\n    const resultPolyList = polyBuilder.getPolygons()\n    if (resultPolyList.size() <= 0) \n      return this.createEmptyResultGeometry()\n    \n    const resultGeom = this._geomFact.buildGeometry(resultPolyList)\n    return resultGeom\n  }\n  computeNodedEdges(bufferSegStrList, precisionModel) {\n    const noder = this.getNoder(precisionModel)\n    noder.computeNodes(bufferSegStrList)\n    const nodedSegStrings = noder.getNodedSubstrings()\n    for (let i = nodedSegStrings.iterator(); i.hasNext(); ) {\n      const segStr = i.next()\n      const pts = segStr.getCoordinates()\n      if (pts.length === 2 && pts[0].equals2D(pts[1])) continue\n      const oldLabel = segStr.getData()\n      const edge = new Edge(segStr.getCoordinates(), new Label(oldLabel))\n      this.insertUniqueEdge(edge)\n    }\n  }\n  setNoder(noder) {\n    this._workingNoder = noder\n  }\n}\n","import GeometryFactory from '../geom/GeometryFactory.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class NodingValidator {\n  constructor() {\n    NodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._segStrings = null\n    const segStrings = arguments[0]\n    this._segStrings = segStrings\n  }\n  checkEndPtVertexIntersections() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        const pts = ss.getCoordinates()\n        this.checkEndPtVertexIntersections(pts[0], this._segStrings)\n        this.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings)\n      }\n    } else if (arguments.length === 2) {\n      const testPt = arguments[0], segStrings = arguments[1]\n      for (let i = segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        const pts = ss.getCoordinates()\n        for (let j = 1; j < pts.length - 1; j++) \n          if (pts[j].equals(testPt)) throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt)\n        \n      }\n    }\n  }\n  checkInteriorIntersections() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss0 = i.next()\n        for (let j = this._segStrings.iterator(); j.hasNext(); ) {\n          const ss1 = j.next()\n          this.checkInteriorIntersections(ss0, ss1)\n        }\n      }\n    } else if (arguments.length === 2) {\n      const ss0 = arguments[0], ss1 = arguments[1]\n      const pts0 = ss0.getCoordinates()\n      const pts1 = ss1.getCoordinates()\n      for (let i0 = 0; i0 < pts0.length - 1; i0++) \n        for (let i1 = 0; i1 < pts1.length - 1; i1++) \n          this.checkInteriorIntersections(ss0, i0, ss1, i1)\n        \n      \n    } else if (arguments.length === 4) {\n      const e0 = arguments[0], segIndex0 = arguments[1], e1 = arguments[2], segIndex1 = arguments[3]\n      if (e0 === e1 && segIndex0 === segIndex1) return null\n      const p00 = e0.getCoordinates()[segIndex0]\n      const p01 = e0.getCoordinates()[segIndex0 + 1]\n      const p10 = e1.getCoordinates()[segIndex1]\n      const p11 = e1.getCoordinates()[segIndex1 + 1]\n      this._li.computeIntersection(p00, p01, p10, p11)\n      if (this._li.hasIntersection()) \n        if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) \n          throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n        \n      \n    }\n  }\n  checkValid() {\n    this.checkEndPtVertexIntersections()\n    this.checkInteriorIntersections()\n    this.checkCollapses()\n  }\n  checkCollapses() {\n    if (arguments.length === 0) {\n      for (let i = this._segStrings.iterator(); i.hasNext(); ) {\n        const ss = i.next()\n        this.checkCollapses(ss)\n      }\n    } else if (arguments.length === 1) {\n      const ss = arguments[0]\n      const pts = ss.getCoordinates()\n      for (let i = 0; i < pts.length - 2; i++) \n        this.checkCollapse(pts[i], pts[i + 1], pts[i + 2])\n      \n    }\n  }\n  hasInteriorIntersection(li, p0, p1) {\n    for (let i = 0; i < li.getIntersectionNum(); i++) {\n      const intPt = li.getIntersection(i)\n      if (!(intPt.equals(p0) || intPt.equals(p1))) return true\n    }\n    return false\n  }\n  checkCollapse(p0, p1, p2) {\n    if (p0.equals(p2)) throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2]))\n  }\n}\nNodingValidator.fact = new GeometryFactory()\n","import Coordinate from '../../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Assert from '../../util/Assert.js'\nexport default class HotPixel {\n  constructor() {\n    HotPixel.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = null\n    this._pt = null\n    this._originalPt = null\n    this._ptScaled = null\n    this._p0Scaled = null\n    this._p1Scaled = null\n    this._scaleFactor = null\n    this._minx = null\n    this._maxx = null\n    this._miny = null\n    this._maxy = null\n    this._corner = new Array(4).fill(null)\n    this._safeEnv = null\n    const pt = arguments[0], scaleFactor = arguments[1], li = arguments[2]\n    this._originalPt = pt\n    this._pt = pt\n    this._scaleFactor = scaleFactor\n    this._li = li\n    if (scaleFactor <= 0) throw new IllegalArgumentException('Scale factor must be non-zero')\n    if (scaleFactor !== 1.0) {\n      this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y))\n      this._p0Scaled = new Coordinate()\n      this._p1Scaled = new Coordinate()\n    }\n    this.initCorners(this._pt)\n  }\n  intersectsScaled(p0, p1) {\n    const segMinx = Math.min(p0.x, p1.x)\n    const segMaxx = Math.max(p0.x, p1.x)\n    const segMiny = Math.min(p0.y, p1.y)\n    const segMaxy = Math.max(p0.y, p1.y)\n    const isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy\n    if (isOutsidePixelEnv) return false\n    const intersects = this.intersectsToleranceSquare(p0, p1)\n    Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test')\n    return intersects\n  }\n  initCorners(pt) {\n    const tolerance = 0.5\n    this._minx = pt.x - tolerance\n    this._maxx = pt.x + tolerance\n    this._miny = pt.y - tolerance\n    this._maxy = pt.y + tolerance\n    this._corner[0] = new Coordinate(this._maxx, this._maxy)\n    this._corner[1] = new Coordinate(this._minx, this._maxy)\n    this._corner[2] = new Coordinate(this._minx, this._miny)\n    this._corner[3] = new Coordinate(this._maxx, this._miny)\n  }\n  intersects(p0, p1) {\n    if (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1)\n    this.copyScaled(p0, this._p0Scaled)\n    this.copyScaled(p1, this._p1Scaled)\n    return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n  }\n  scale(val) {\n    return Math.round(val * this._scaleFactor)\n  }\n  getCoordinate() {\n    return this._originalPt\n  }\n  copyScaled(p, pScaled) {\n    pScaled.x = this.scale(p.x)\n    pScaled.y = this.scale(p.y)\n  }\n  getSafeEnvelope() {\n    if (this._safeEnv === null) {\n      const safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor\n      this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance)\n    }\n    return this._safeEnv\n  }\n  intersectsPixelClosure(p0, p1) {\n    this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3])\n    if (this._li.hasIntersection()) return true\n    this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0])\n    if (this._li.hasIntersection()) return true\n    return false\n  }\n  intersectsToleranceSquare(p0, p1) {\n    let intersectsLeft = false\n    let intersectsBottom = false\n    this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1])\n    if (this._li.isProper()) return true\n    this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2])\n    if (this._li.isProper()) return true\n    if (this._li.hasIntersection()) intersectsLeft = true\n    this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3])\n    if (this._li.isProper()) return true\n    if (this._li.hasIntersection()) intersectsBottom = true\n    this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0])\n    if (this._li.isProper()) return true\n    if (intersectsLeft && intersectsBottom) return true\n    if (p0.equals(this._pt)) return true\n    if (p1.equals(this._pt)) return true\n    return false\n  }\n  addSnappedNode(segStr, segIndex) {\n    const p0 = segStr.getCoordinate(segIndex)\n    const p1 = segStr.getCoordinate(segIndex + 1)\n    if (this.intersects(p0, p1)) {\n      segStr.addIntersection(this.getCoordinate(), segIndex)\n      return true\n    }\n    return false\n  }\n}\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75\n","import LineSegment from '../../geom/LineSegment.js'\nexport default class MonotoneChainSelectAction {\n  constructor() {\n    MonotoneChainSelectAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.selectedSegment = new LineSegment()\n  }\n  select() {\n    if (arguments.length === 1) {\n      const seg = arguments[0]\n    } else if (arguments.length === 2) {\n      const mc = arguments[0], startIndex = arguments[1]\n      mc.getLineSegment(startIndex, this.selectedSegment)\n      this.select(this.selectedSegment)\n    }\n  }\n}\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction.js'\nimport MonotoneChain from '../../index/chain/MonotoneChain.js'\nimport ItemVisitor from '../../index/ItemVisitor.js'\nexport default class MCIndexPointSnapper {\n  constructor() {\n    MCIndexPointSnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._index = null\n    const index = arguments[0]\n    this._index = index\n  }\n  snap() {\n    if (arguments.length === 1) {\n      const hotPixel = arguments[0]\n      return this.snap(hotPixel, null, -1)\n    } else if (arguments.length === 3) {\n      const hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2]\n      const pixelEnv = hotPixel.getSafeEnvelope()\n      const hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex)\n      this._index.query(pixelEnv, new (class {\n        get interfaces_() {\n          return [ItemVisitor]\n        }\n        visitItem(item) {\n          const testChain = item\n          testChain.select(pixelEnv, hotPixelSnapAction)\n        }\n      })())\n      return hotPixelSnapAction.isNodeAdded()\n    }\n  }\n}\nclass HotPixelSnapAction extends MonotoneChainSelectAction {\n  constructor() {\n    super()\n    HotPixelSnapAction.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._hotPixel = null\n    this._parentEdge = null\n    this._hotPixelVertexIndex = null\n    this._isNodeAdded = false\n    const hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2]\n    this._hotPixel = hotPixel\n    this._parentEdge = parentEdge\n    this._hotPixelVertexIndex = hotPixelVertexIndex\n  }\n  isNodeAdded() {\n    return this._isNodeAdded\n  }\n  select() {\n    if (arguments.length === 2 && (Number.isInteger(arguments[1]) && arguments[0] instanceof MonotoneChain)) {\n      const mc = arguments[0], startIndex = arguments[1]\n      const ss = mc.getContext()\n      if (this._parentEdge === ss) \n        if (startIndex === this._hotPixelVertexIndex || startIndex + 1 === this._hotPixelVertexIndex) return null\n      \n      this._isNodeAdded |= this._hotPixel.addSnappedNode(ss, startIndex)\n    } else {\n      return super.select.apply(this, arguments)\n    }\n  }\n}\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction\n","import SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class InteriorIntersectionFinderAdder {\n  constructor() {\n    InteriorIntersectionFinderAdder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = null\n    this._interiorIntersections = null\n    const li = arguments[0]\n    this._li = li\n    this._interiorIntersections = new ArrayList()\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (e0 === e1 && segIndex0 === segIndex1) return null\n    const p00 = e0.getCoordinates()[segIndex0]\n    const p01 = e0.getCoordinates()[segIndex0 + 1]\n    const p10 = e1.getCoordinates()[segIndex1]\n    const p11 = e1.getCoordinates()[segIndex1 + 1]\n    this._li.computeIntersection(p00, p01, p10, p11)\n    if (this._li.hasIntersection()) \n      if (this._li.isInteriorIntersection()) {\n        for (let intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) \n          this._interiorIntersections.add(this._li.getIntersection(intIndex))\n        \n        e0.addIntersections(this._li, segIndex0, 0)\n        e1.addIntersections(this._li, segIndex1, 1)\n      }\n    \n  }\n  isDone() {\n    return false\n  }\n  getInteriorIntersections() {\n    return this._interiorIntersections\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","import NodingValidator from '../NodingValidator.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport Noder from '../Noder.js'\nimport MCIndexNoder from '../MCIndexNoder.js'\nimport NodedSegmentString from '../NodedSegmentString.js'\nimport HotPixel from './HotPixel.js'\nimport Exception from '../../../../../java/lang/Exception.js'\nimport MCIndexPointSnapper from './MCIndexPointSnapper.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder.js'\nexport default class MCIndexSnapRounder {\n  constructor() {\n    MCIndexSnapRounder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pm = null\n    this._li = null\n    this._scaleFactor = null\n    this._noder = null\n    this._pointSnapper = null\n    this._nodedSegStrings = null\n    const pm = arguments[0]\n    this._pm = pm\n    this._li = new RobustLineIntersector()\n    this._li.setPrecisionModel(pm)\n    this._scaleFactor = pm.getScale()\n  }\n  checkCorrectness(inputSegmentStrings) {\n    const resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings)\n    const nv = new NodingValidator(resultSegStrings)\n    try {\n      nv.checkValid()\n    } catch (ex) {\n      if (ex instanceof Exception) \n        ex.printStackTrace()\n      else throw ex\n    } finally {}\n  }\n  getNodedSubstrings() {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  }\n  snapRound(segStrings, li) {\n    const intersections = this.findInteriorIntersections(segStrings, li)\n    this.computeIntersectionSnaps(intersections)\n    this.computeVertexSnaps(segStrings)\n  }\n  findInteriorIntersections(segStrings, li) {\n    const intFinderAdder = new InteriorIntersectionFinderAdder(li)\n    this._noder.setSegmentIntersector(intFinderAdder)\n    this._noder.computeNodes(segStrings)\n    return intFinderAdder.getInteriorIntersections()\n  }\n  computeVertexSnaps() {\n    if (hasInterface(arguments[0], Collection)) {\n      const edges = arguments[0]\n      for (let i0 = edges.iterator(); i0.hasNext(); ) {\n        const edge0 = i0.next()\n        this.computeVertexSnaps(edge0)\n      }\n    } else if (arguments[0] instanceof NodedSegmentString) {\n      const e = arguments[0]\n      const pts0 = e.getCoordinates()\n      for (let i = 0; i < pts0.length; i++) {\n        const hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li)\n        const isNodeAdded = this._pointSnapper.snap(hotPixel, e, i)\n        if (isNodeAdded) \n          e.addIntersection(pts0[i], i)\n        \n      }\n    }\n  }\n  computeNodes(inputSegmentStrings) {\n    this._nodedSegStrings = inputSegmentStrings\n    this._noder = new MCIndexNoder()\n    this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex())\n    this.snapRound(inputSegmentStrings, this._li)\n  }\n  computeIntersectionSnaps(snapPts) {\n    for (let it = snapPts.iterator(); it.hasNext(); ) {\n      const snapPt = it.next()\n      const hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li)\n      this._pointSnapper.snap(hotPixel)\n    }\n  }\n  get interfaces_() {\n    return [Noder]\n  }\n}\n","import BufferParameters from './BufferParameters.js'\nimport Geometry from '../../geom/Geometry.js'\nimport BufferBuilder from './BufferBuilder.js'\nimport ScaledNoder from '../../noding/ScaledNoder.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport MathUtil from '../../math/MathUtil.js'\nimport PrecisionModel from '../../geom/PrecisionModel.js'\nimport RuntimeException from '../../../../../java/lang/RuntimeException.js'\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder.js'\nexport default class BufferOp {\n  constructor() {\n    BufferOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._argGeom = null\n    this._distance = null\n    this._bufParams = new BufferParameters()\n    this._resultGeometry = null\n    this._saveException = null\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      this._argGeom = g\n    } else if (arguments.length === 2) {\n      const g = arguments[0], bufParams = arguments[1]\n      this._argGeom = g\n      this._bufParams = bufParams\n    }\n  }\n  static bufferOp() {\n    if (arguments.length === 2) {\n      const g = arguments[0], distance = arguments[1]\n      const gBuf = new BufferOp(g)\n      const geomBuf = gBuf.getResultGeometry(distance)\n      return geomBuf\n    } else if (arguments.length === 3) {\n      if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n        const g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2]\n        const bufOp = new BufferOp(g)\n        bufOp.setQuadrantSegments(quadrantSegments)\n        const geomBuf = bufOp.getResultGeometry(distance)\n        return geomBuf\n      } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n        const g = arguments[0], distance = arguments[1], params = arguments[2]\n        const bufOp = new BufferOp(g, params)\n        const geomBuf = bufOp.getResultGeometry(distance)\n        return geomBuf\n      }\n    } else if (arguments.length === 4) {\n      const g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2], endCapStyle = arguments[3]\n      const bufOp = new BufferOp(g)\n      bufOp.setQuadrantSegments(quadrantSegments)\n      bufOp.setEndCapStyle(endCapStyle)\n      const geomBuf = bufOp.getResultGeometry(distance)\n      return geomBuf\n    }\n  }\n  static precisionScaleFactor(g, distance, maxPrecisionDigits) {\n    const env = g.getEnvelopeInternal()\n    const envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()))\n    const expandByDistance = distance > 0.0 ? distance : 0.0\n    const bufEnvMax = envMax + 2 * expandByDistance\n    const bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0)\n    const minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits\n    const scaleFactor = Math.pow(10.0, minUnitLog10)\n    return scaleFactor\n  }\n  bufferFixedPrecision(fixedPM) {\n    const noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale())\n    const bufBuilder = new BufferBuilder(this._bufParams)\n    bufBuilder.setWorkingPrecisionModel(fixedPM)\n    bufBuilder.setNoder(noder)\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance)\n  }\n  bufferReducedPrecision() {\n    if (arguments.length === 0) {\n      for (let precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n        try {\n          this.bufferReducedPrecision(precDigits)\n        } catch (ex) {\n          if (ex instanceof TopologyException) \n            this._saveException = ex\n          else throw ex\n        } finally {}\n        if (this._resultGeometry !== null) return null\n      }\n      throw this._saveException\n    } else if (arguments.length === 1) {\n      const precisionDigits = arguments[0]\n      const sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits)\n      const fixedPM = new PrecisionModel(sizeBasedScaleFactor)\n      this.bufferFixedPrecision(fixedPM)\n    }\n  }\n  computeGeometry() {\n    this.bufferOriginalPrecision()\n    if (this._resultGeometry !== null) return null\n    const argPM = this._argGeom.getFactory().getPrecisionModel()\n    if (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision()\n  }\n  setQuadrantSegments(quadrantSegments) {\n    this._bufParams.setQuadrantSegments(quadrantSegments)\n  }\n  bufferOriginalPrecision() {\n    try {\n      const bufBuilder = new BufferBuilder(this._bufParams)\n      this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance)\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        this._saveException = ex\n      else throw ex\n    } finally {}\n  }\n  getResultGeometry(distance) {\n    this._distance = distance\n    this.computeGeometry()\n    return this._resultGeometry\n  }\n  setEndCapStyle(endCapStyle) {\n    this._bufParams.setEndCapStyle(endCapStyle)\n  }\n}\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE\nBufferOp.MAX_PRECISION_DIGITS = 12\n","import WKTWriter from '../../io/WKTWriter.js'\nexport default class GeometryLocation {\n  constructor() {\n    GeometryLocation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._component = null\n    this._segIndex = null\n    this._pt = null\n    if (arguments.length === 2) {\n      const component = arguments[0], pt = arguments[1]\n      GeometryLocation.constructor_.call(this, component, GeometryLocation.INSIDE_AREA, pt)\n    } else if (arguments.length === 3) {\n      const component = arguments[0], segIndex = arguments[1], pt = arguments[2]\n      this._component = component\n      this._segIndex = segIndex\n      this._pt = pt\n    }\n  }\n  getSegmentIndex() {\n    return this._segIndex\n  }\n  getCoordinate() {\n    return this._pt\n  }\n  isInsideArea() {\n    return this._segIndex === GeometryLocation.INSIDE_AREA\n  }\n  toString() {\n    return this._component.getGeometryType() + '[' + this._segIndex + ']' + '-' + WKTWriter.toPoint(this._pt)\n  }\n  getGeometryComponent() {\n    return this._component\n  }\n}\nGeometryLocation.INSIDE_AREA = -1\n","import LineString from '../../geom/LineString.js'\nimport Point from '../../geom/Point.js'\nimport Polygon from '../../geom/Polygon.js'\nimport GeometryLocation from './GeometryLocation.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GeometryFilter from '../../geom/GeometryFilter.js'\nexport default class ConnectedElementLocationFilter {\n  constructor() {\n    ConnectedElementLocationFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._locations = null\n    const locations = arguments[0]\n    this._locations = locations\n  }\n  static getLocations(geom) {\n    const locations = new ArrayList()\n    geom.apply(new ConnectedElementLocationFilter(locations))\n    return locations\n  }\n  filter(geom) {\n    if (geom.isEmpty()) return null\n    if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()))\n  }\n  get interfaces_() {\n    return [GeometryFilter]\n  }\n}\n","import PointLocator from '../../algorithm/PointLocator.js'\nimport PolygonExtracter from '../../geom/util/PolygonExtracter.js'\nimport Location from '../../geom/Location.js'\nimport LineString from '../../geom/LineString.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Point from '../../geom/Point.js'\nimport Polygon from '../../geom/Polygon.js'\nimport GeometryLocation from './GeometryLocation.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport PointExtracter from '../../geom/util/PointExtracter.js'\nimport ConnectedElementLocationFilter from './ConnectedElementLocationFilter.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter.js'\nimport Envelope from '../../geom/Envelope.js'\nimport List from '../../../../../java/util/List.js'\nimport Distance from '../../algorithm/Distance.js'\nexport default class DistanceOp {\n  constructor() {\n    DistanceOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    this._terminateDistance = 0.0\n    this._ptLocator = new PointLocator()\n    this._minDistanceLocation = null\n    this._minDistance = Double.MAX_VALUE\n    if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      DistanceOp.constructor_.call(this, g0, g1, 0.0)\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], terminateDistance = arguments[2]\n      this._geom = new Array(2).fill(null)\n      this._geom[0] = g0\n      this._geom[1] = g1\n      this._terminateDistance = terminateDistance\n    }\n  }\n  static distance(g0, g1) {\n    const distOp = new DistanceOp(g0, g1)\n    return distOp.distance()\n  }\n  static isWithinDistance(g0, g1, distance) {\n    const envDist = g0.getEnvelopeInternal().distance(g1.getEnvelopeInternal())\n    if (envDist > distance) return false\n    const distOp = new DistanceOp(g0, g1, distance)\n    return distOp.distance() <= distance\n  }\n  static nearestPoints(g0, g1) {\n    const distOp = new DistanceOp(g0, g1)\n    return distOp.nearestPoints()\n  }\n  computeContainmentDistance() {\n    if (arguments.length === 0) {\n      const locPtPoly = new Array(2).fill(null)\n      this.computeContainmentDistance(0, locPtPoly)\n      if (this._minDistance <= this._terminateDistance) return null\n      this.computeContainmentDistance(1, locPtPoly)\n    } else if (arguments.length === 2) {\n      const polyGeomIndex = arguments[0], locPtPoly = arguments[1]\n      const polyGeom = this._geom[polyGeomIndex]\n      if (polyGeom.getDimension() < 2) return null\n      const locationsIndex = 1 - polyGeomIndex\n      const polys = PolygonExtracter.getPolygons(polyGeom)\n      if (polys.size() > 0) {\n        const insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex])\n        this.computeContainmentDistance(insideLocs, polys, locPtPoly)\n        if (this._minDistance <= this._terminateDistance) {\n          this._minDistanceLocation[locationsIndex] = locPtPoly[0]\n          this._minDistanceLocation[polyGeomIndex] = locPtPoly[1]\n          return null\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        const locs = arguments[0], polys = arguments[1], locPtPoly = arguments[2]\n        for (let i = 0; i < locs.size(); i++) {\n          const loc = locs.get(i)\n          for (let j = 0; j < polys.size(); j++) {\n            this.computeContainmentDistance(loc, polys.get(j), locPtPoly)\n            if (this._minDistance <= this._terminateDistance) return null\n          }\n        }\n      } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n        const ptLoc = arguments[0], poly = arguments[1], locPtPoly = arguments[2]\n        const pt = ptLoc.getCoordinate()\n        if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n          this._minDistance = 0.0\n          locPtPoly[0] = ptLoc\n          locPtPoly[1] = new GeometryLocation(poly, pt)\n          \n          return null\n        }\n      }\n    }\n  }\n  computeMinDistanceLinesPoints(lines, points, locGeom) {\n    for (let i = 0; i < lines.size(); i++) {\n      const line = lines.get(i)\n      for (let j = 0; j < points.size(); j++) {\n        const pt = points.get(j)\n        this.computeMinDistance(line, pt, locGeom)\n        if (this._minDistance <= this._terminateDistance) return null\n      }\n    }\n  }\n  computeFacetDistance() {\n    const locGeom = new Array(2).fill(null)\n    const lines0 = LinearComponentExtracter.getLines(this._geom[0])\n    const lines1 = LinearComponentExtracter.getLines(this._geom[1])\n    const pts0 = PointExtracter.getPoints(this._geom[0])\n    const pts1 = PointExtracter.getPoints(this._geom[1])\n    this.computeMinDistanceLines(lines0, lines1, locGeom)\n    this.updateMinDistance(locGeom, false)\n    if (this._minDistance <= this._terminateDistance) return null\n    locGeom[0] = null\n    locGeom[1] = null\n    this.computeMinDistanceLinesPoints(lines0, pts1, locGeom)\n    this.updateMinDistance(locGeom, false)\n    if (this._minDistance <= this._terminateDistance) return null\n    locGeom[0] = null\n    locGeom[1] = null\n    this.computeMinDistanceLinesPoints(lines1, pts0, locGeom)\n    this.updateMinDistance(locGeom, true)\n    if (this._minDistance <= this._terminateDistance) return null\n    locGeom[0] = null\n    locGeom[1] = null\n    this.computeMinDistancePoints(pts0, pts1, locGeom)\n    this.updateMinDistance(locGeom, false)\n  }\n  nearestLocations() {\n    this.computeMinDistance()\n    return this._minDistanceLocation\n  }\n  updateMinDistance(locGeom, flip) {\n    if (locGeom[0] === null) return null\n    if (flip) {\n      this._minDistanceLocation[0] = locGeom[1]\n      this._minDistanceLocation[1] = locGeom[0]\n    } else {\n      this._minDistanceLocation[0] = locGeom[0]\n      this._minDistanceLocation[1] = locGeom[1]\n    }\n  }\n  nearestPoints() {\n    this.computeMinDistance()\n    const nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()]\n    return nearestPts\n  }\n  computeMinDistance() {\n    if (arguments.length === 0) {\n      if (this._minDistanceLocation !== null) return null\n      this._minDistanceLocation = new Array(2).fill(null)\n      this.computeContainmentDistance()\n      if (this._minDistance <= this._terminateDistance) return null\n      this.computeFacetDistance()\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n        const line = arguments[0], pt = arguments[1], locGeom = arguments[2]\n        if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) return null\n        const coord0 = line.getCoordinates()\n        const coord = pt.getCoordinate()\n        for (let i = 0; i < coord0.length - 1; i++) {\n          const dist = Distance.pointToSegment(coord, coord0[i], coord0[i + 1])\n          if (dist < this._minDistance) {\n            this._minDistance = dist\n            const seg = new LineSegment(coord0[i], coord0[i + 1])\n            const segClosestPoint = seg.closestPoint(coord)\n            locGeom[0] = new GeometryLocation(line, i, segClosestPoint)\n            locGeom[1] = new GeometryLocation(pt, 0, coord)\n          }\n          if (this._minDistance <= this._terminateDistance) return null\n        }\n      } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n        const line0 = arguments[0], line1 = arguments[1], locGeom = arguments[2]\n        if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) return null\n        const coord0 = line0.getCoordinates()\n        const coord1 = line1.getCoordinates()\n        for (let i = 0; i < coord0.length - 1; i++) {\n          const segEnv0 = new Envelope(coord0[i], coord0[i + 1])\n          if (segEnv0.distance(line1.getEnvelopeInternal()) > this._minDistance) continue\n          for (let j = 0; j < coord1.length - 1; j++) {\n            const segEnv1 = new Envelope(coord1[j], coord1[j + 1])\n            if (segEnv0.distance(segEnv1) > this._minDistance) continue\n            const dist = Distance.segmentToSegment(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1])\n            if (dist < this._minDistance) {\n              this._minDistance = dist\n              const seg0 = new LineSegment(coord0[i], coord0[i + 1])\n              const seg1 = new LineSegment(coord1[j], coord1[j + 1])\n              const closestPt = seg0.closestPoints(seg1)\n              locGeom[0] = new GeometryLocation(line0, i, closestPt[0])\n              locGeom[1] = new GeometryLocation(line1, j, closestPt[1])\n            }\n            if (this._minDistance <= this._terminateDistance) return null\n          }\n        }\n      }\n    }\n  }\n  computeMinDistancePoints(points0, points1, locGeom) {\n    for (let i = 0; i < points0.size(); i++) {\n      const pt0 = points0.get(i)\n      for (let j = 0; j < points1.size(); j++) {\n        const pt1 = points1.get(j)\n        const dist = pt0.getCoordinate().distance(pt1.getCoordinate())\n        if (dist < this._minDistance) {\n          this._minDistance = dist\n          locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate())\n          locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate())\n        }\n        if (this._minDistance <= this._terminateDistance) return null\n      }\n    }\n  }\n  distance() {\n    if (this._geom[0] === null || this._geom[1] === null) throw new IllegalArgumentException('null geometries are not supported')\n    if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) return 0.0\n    this.computeMinDistance()\n    return this._minDistance\n  }\n  computeMinDistanceLines(lines0, lines1, locGeom) {\n    for (let i = 0; i < lines0.size(); i++) {\n      const line0 = lines0.get(i)\n      for (let j = 0; j < lines1.size(); j++) {\n        const line1 = lines1.get(j)\n        this.computeMinDistance(line0, line1, locGeom)\n        if (this._minDistance <= this._terminateDistance) return null\n      }\n    }\n  }\n}\n","import CoordinateList from '../../geom/CoordinateList.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class EdgeString {\n  constructor() {\n    EdgeString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._factory = null\n    this._directedEdges = new ArrayList()\n    this._coordinates = null\n    const factory = arguments[0]\n    this._factory = factory\n  }\n  getCoordinates() {\n    if (this._coordinates === null) {\n      let forwardDirectedEdges = 0\n      let reverseDirectedEdges = 0\n      const coordinateList = new CoordinateList()\n      for (let i = this._directedEdges.iterator(); i.hasNext(); ) {\n        const directedEdge = i.next()\n        if (directedEdge.getEdgeDirection()) \n          forwardDirectedEdges++\n        else \n          reverseDirectedEdges++\n        \n        coordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection())\n      }\n      this._coordinates = coordinateList.toCoordinateArray()\n      if (reverseDirectedEdges > forwardDirectedEdges) \n        CoordinateArrays.reverse(this._coordinates)\n      \n    }\n    return this._coordinates\n  }\n  toLineString() {\n    return this._factory.createLineString(this.getCoordinates())\n  }\n  add(directedEdge) {\n    this._directedEdges.add(directedEdge)\n  }\n}\n","export default class GraphComponent {\n  constructor() {\n    GraphComponent.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isMarked = false\n    this._isVisited = false\n    this._data = null\n  }\n  static getComponentWithVisitedState(i, visitedState) {\n    while (i.hasNext()) {\n      const comp = i.next()\n      if (comp.isVisited() === visitedState) return comp\n    }\n    return null\n  }\n  static setVisited(i, visited) {\n    while (i.hasNext()) {\n      const comp = i.next()\n      comp.setVisited(visited)\n    }\n  }\n  static setMarked(i, marked) {\n    while (i.hasNext()) {\n      const comp = i.next()\n      comp.setMarked(marked)\n    }\n  }\n  setVisited(isVisited) {\n    this._isVisited = isVisited\n  }\n  isMarked() {\n    return this._isMarked\n  }\n  setData(data) {\n    this._data = data\n  }\n  getData() {\n    return this._data\n  }\n  setMarked(isMarked) {\n    this._isMarked = isMarked\n  }\n  getContext() {\n    return this._data\n  }\n  isVisited() {\n    return this._isVisited\n  }\n  setContext(data) {\n    this._data = data\n  }\n}\n","import Orientation from '../algorithm/Orientation.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Quadrant from '../geomgraph/Quadrant.js'\nimport GraphComponent from './GraphComponent.js'\nexport default class DirectedEdge extends GraphComponent {\n  constructor() {\n    super()\n    DirectedEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parentEdge = null\n    this._from = null\n    this._to = null\n    this._p0 = null\n    this._p1 = null\n    this._sym = null\n    this._edgeDirection = null\n    this._quadrant = null\n    this._angle = null\n    if (arguments.length === 0) {} else if (arguments.length === 4) {\n      const from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3]\n      this._from = from\n      this._to = to\n      this._edgeDirection = edgeDirection\n      this._p0 = from.getCoordinate()\n      this._p1 = directionPt\n      const dx = this._p1.x - this._p0.x\n      const dy = this._p1.y - this._p0.y\n      this._quadrant = Quadrant.quadrant(dx, dy)\n      this._angle = Math.atan2(dy, dx)\n    }\n  }\n  static toEdges(dirEdges) {\n    const edges = new ArrayList()\n    for (let i = dirEdges.iterator(); i.hasNext(); ) \n      edges.add(i.next()._parentEdge)\n    \n    return edges\n  }\n  isRemoved() {\n    return this._parentEdge === null\n  }\n  compareDirection(e) {\n    if (this._quadrant > e._quadrant) return 1\n    if (this._quadrant < e._quadrant) return -1\n    return Orientation.index(e._p0, e._p1, this._p1)\n  }\n  getCoordinate() {\n    return this._from.getCoordinate()\n  }\n  print(out) {\n    const className = this.getClass().getName()\n    const lastDotPos = className.lastIndexOf('.')\n    const name = className.substring(lastDotPos + 1)\n    out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + this._angle)\n  }\n  getDirectionPt() {\n    return this._p1\n  }\n  getAngle() {\n    return this._angle\n  }\n  compareTo(obj) {\n    const de = obj\n    return this.compareDirection(de)\n  }\n  getFromNode() {\n    return this._from\n  }\n  getSym() {\n    return this._sym\n  }\n  setEdge(parentEdge) {\n    this._parentEdge = parentEdge\n  }\n  remove() {\n    this._sym = null\n    this._parentEdge = null\n  }\n  getEdge() {\n    return this._parentEdge\n  }\n  getQuadrant() {\n    return this._quadrant\n  }\n  setSym(sym) {\n    this._sym = sym\n  }\n  getToNode() {\n    return this._to\n  }\n  getEdgeDirection() {\n    return this._edgeDirection\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import DirectedEdge from '../../planargraph/DirectedEdge.js'\nimport Assert from '../../util/Assert.js'\nexport default class LineMergeDirectedEdge extends DirectedEdge {\n  constructor() {\n    super()\n    LineMergeDirectedEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3]\n    DirectedEdge.constructor_.call(this, from, to, directionPt, edgeDirection)\n  }\n  getNext() {\n    if (this.getToNode().getDegree() !== 2) \n      return null\n    \n    if (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) \n      return this.getToNode().getOutEdges().getEdges().get(1)\n    \n    Assert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym())\n    return this.getToNode().getOutEdges().getEdges().get(0)\n  }\n}\n","import Node from './Node.js'\nimport GraphComponent from './GraphComponent.js'\nexport default class Edge extends GraphComponent {\n  constructor() {\n    super()\n    Edge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._dirEdge = null\n    if (arguments.length === 0) {} else if (arguments.length === 2) {\n      const de0 = arguments[0], de1 = arguments[1]\n      this.setDirectedEdges(de0, de1)\n    }\n  }\n  isRemoved() {\n    return this._dirEdge === null\n  }\n  setDirectedEdges(de0, de1) {\n    this._dirEdge = [de0, de1]\n    de0.setEdge(this)\n    de1.setEdge(this)\n    de0.setSym(de1)\n    de1.setSym(de0)\n    de0.getFromNode().addOutEdge(de0)\n    de1.getFromNode().addOutEdge(de1)\n  }\n  getDirEdge() {\n    if (Number.isInteger(arguments[0])) {\n      const i = arguments[0]\n      return this._dirEdge[i]\n    } else if (arguments[0] instanceof Node) {\n      const fromNode = arguments[0]\n      if (this._dirEdge[0].getFromNode() === fromNode) return this._dirEdge[0]\n      if (this._dirEdge[1].getFromNode() === fromNode) return this._dirEdge[1]\n      return null\n    }\n  }\n  remove() {\n    this._dirEdge = null\n  }\n  getOppositeNode(node) {\n    if (this._dirEdge[0].getFromNode() === node) return this._dirEdge[0].getToNode()\n    if (this._dirEdge[1].getFromNode() === node) return this._dirEdge[1].getToNode()\n    return null\n  }\n}\n","import Collections from '../../../../java/util/Collections.js'\nimport DirectedEdge from './DirectedEdge.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Edge from './Edge.js'\nexport default class DirectedEdgeStar {\n  constructor() {\n    DirectedEdgeStar.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._outEdges = new ArrayList()\n    this._sorted = false\n  }\n  getNextEdge(dirEdge) {\n    const i = this.getIndex(dirEdge)\n    return this._outEdges.get(this.getIndex(i + 1))\n  }\n  getCoordinate() {\n    const it = this.iterator()\n    if (!it.hasNext()) return null\n    const e = it.next()\n    return e.getCoordinate()\n  }\n  iterator() {\n    this.sortEdges()\n    return this._outEdges.iterator()\n  }\n  sortEdges() {\n    if (!this._sorted) {\n      Collections.sort(this._outEdges)\n      this._sorted = true\n    }\n  }\n  remove(de) {\n    this._outEdges.remove(de)\n  }\n  getEdges() {\n    this.sortEdges()\n    return this._outEdges\n  }\n  getNextCWEdge(dirEdge) {\n    const i = this.getIndex(dirEdge)\n    return this._outEdges.get(this.getIndex(i - 1))\n  }\n  getIndex() {\n    if (arguments[0] instanceof Edge) {\n      const edge = arguments[0]\n      this.sortEdges()\n      for (let i = 0; i < this._outEdges.size(); i++) {\n        const de = this._outEdges.get(i)\n        if (de.getEdge() === edge) return i\n      }\n      return -1\n    } else if (arguments[0] instanceof DirectedEdge) {\n      const dirEdge = arguments[0]\n      this.sortEdges()\n      for (let i = 0; i < this._outEdges.size(); i++) {\n        const de = this._outEdges.get(i)\n        if (de === dirEdge) return i\n      }\n      return -1\n    } else if (Number.isInteger(arguments[0])) {\n      const i = arguments[0]\n      let modi = i % this._outEdges.size()\n      if (modi < 0) modi += this._outEdges.size()\n      return modi\n    }\n  }\n  add(de) {\n    this._outEdges.add(de)\n    this._sorted = false\n  }\n  getDegree() {\n    return this._outEdges.size()\n  }\n}\n","import DirectedEdgeStar from './DirectedEdgeStar.js'\nimport HashSet from '../../../../java/util/HashSet.js'\nimport DirectedEdge from './DirectedEdge.js'\nimport GraphComponent from './GraphComponent.js'\nexport default class Node extends GraphComponent {\n  constructor() {\n    super()\n    Node.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pt = null\n    this._deStar = null\n    if (arguments.length === 1) {\n      const pt = arguments[0]\n      Node.constructor_.call(this, pt, new DirectedEdgeStar())\n    } else if (arguments.length === 2) {\n      const pt = arguments[0], deStar = arguments[1]\n      this._pt = pt\n      this._deStar = deStar\n    }\n  }\n  static getEdgesBetween(node0, node1) {\n    const edges0 = DirectedEdge.toEdges(node0.getOutEdges().getEdges())\n    const commonEdges = new HashSet(edges0)\n    const edges1 = DirectedEdge.toEdges(node1.getOutEdges().getEdges())\n    commonEdges.retainAll(edges1)\n    return commonEdges\n  }\n  isRemoved() {\n    return this._pt === null\n  }\n  addOutEdge(de) {\n    this._deStar.add(de)\n  }\n  getCoordinate() {\n    return this._pt\n  }\n  getOutEdges() {\n    return this._deStar\n  }\n  remove() {\n    if (arguments.length === 0) {\n      this._pt = null\n    } else if (arguments.length === 1) {\n      const de = arguments[0]\n      this._deStar.remove(de)\n    }\n  }\n  getIndex(edge) {\n    return this._deStar.getIndex(edge)\n  }\n  getDegree() {\n    return this._deStar.getDegree()\n  }\n}\n","import Edge from '../../planargraph/Edge.js'\nexport default class LineMergeEdge extends Edge {\n  constructor() {\n    super()\n    LineMergeEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._line = null\n    const line = arguments[0]\n    this._line = line\n  }\n  getLine() {\n    return this._line\n  }\n}\n","import TreeMap from '../../../../java/util/TreeMap.js'\nexport default class NodeMap {\n  constructor() {\n    NodeMap.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodeMap = new TreeMap()\n  }\n  find(coord) {\n    return this._nodeMap.get(coord)\n  }\n  iterator() {\n    return this._nodeMap.values().iterator()\n  }\n  remove(pt) {\n    return this._nodeMap.remove(pt)\n  }\n  values() {\n    return this._nodeMap.values()\n  }\n  add(n) {\n    this._nodeMap.put(n.getCoordinate(), n)\n    return n\n  }\n}\n","import HashSet from '../../../../java/util/HashSet.js'\nimport Node from './Node.js'\nimport NodeMap from './NodeMap.js'\nimport DirectedEdge from './DirectedEdge.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Edge from './Edge.js'\nexport default class PlanarGraph {\n  constructor() {\n    PlanarGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edges = new HashSet()\n    this._dirEdges = new HashSet()\n    this._nodeMap = new NodeMap()\n  }\n  findNodesOfDegree(degree) {\n    const nodesFound = new ArrayList()\n    for (let i = this.nodeIterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (node.getDegree() === degree) nodesFound.add(node)\n    }\n    return nodesFound\n  }\n  dirEdgeIterator() {\n    return this._dirEdges.iterator()\n  }\n  edgeIterator() {\n    return this._edges.iterator()\n  }\n  remove() {\n    if (arguments[0] instanceof Edge) {\n      const edge = arguments[0]\n      this.remove(edge.getDirEdge(0))\n      this.remove(edge.getDirEdge(1))\n      this._edges.remove(edge)\n      edge.remove()\n    } else if (arguments[0] instanceof DirectedEdge) {\n      const de = arguments[0]\n      const sym = de.getSym()\n      if (sym !== null) sym.setSym(null)\n      de.getFromNode().remove(de)\n      de.remove()\n      this._dirEdges.remove(de)\n    } else if (arguments[0] instanceof Node) {\n      const node = arguments[0]\n      const outEdges = node.getOutEdges().getEdges()\n      for (let i = outEdges.iterator(); i.hasNext(); ) {\n        const de = i.next()\n        const sym = de.getSym()\n        if (sym !== null) this.remove(sym)\n        this._dirEdges.remove(de)\n        const edge = de.getEdge()\n        if (edge !== null) \n          this._edges.remove(edge)\n        \n      }\n      this._nodeMap.remove(node.getCoordinate())\n      node.remove()\n    }\n  }\n  findNode(pt) {\n    return this._nodeMap.find(pt)\n  }\n  getEdges() {\n    return this._edges\n  }\n  nodeIterator() {\n    return this._nodeMap.iterator()\n  }\n  contains() {\n    if (arguments[0] instanceof Edge) {\n      const e = arguments[0]\n      return this._edges.contains(e)\n    } else if (arguments[0] instanceof DirectedEdge) {\n      const de = arguments[0]\n      return this._dirEdges.contains(de)\n    }\n  }\n  add() {\n    if (arguments[0] instanceof Node) {\n      const node = arguments[0]\n      this._nodeMap.add(node)\n    } else if (arguments[0] instanceof Edge) {\n      const edge = arguments[0]\n      this._edges.add(edge)\n      this.add(edge.getDirEdge(0))\n      this.add(edge.getDirEdge(1))\n    } else if (arguments[0] instanceof DirectedEdge) {\n      const dirEdge = arguments[0]\n      this._dirEdges.add(dirEdge)\n    }\n  }\n  getNodes() {\n    return this._nodeMap.values()\n  }\n}\n","import LineMergeDirectedEdge from './LineMergeDirectedEdge.js'\nimport Node from '../../planargraph/Node.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport LineMergeEdge from './LineMergeEdge.js'\nimport PlanarGraph from '../../planargraph/PlanarGraph.js'\nexport default class LineMergeGraph extends PlanarGraph {\n  constructor() {\n    super()\n  }\n  addEdge(lineString) {\n    if (lineString.isEmpty()) \n      return null\n    \n    const coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates())\n    if (coordinates.length <= 1) return null\n    const startCoordinate = coordinates[0]\n    const endCoordinate = coordinates[coordinates.length - 1]\n    const startNode = this.getNode(startCoordinate)\n    const endNode = this.getNode(endCoordinate)\n    const directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true)\n    const directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false)\n    const edge = new LineMergeEdge(lineString)\n    edge.setDirectedEdges(directedEdge0, directedEdge1)\n    this.add(edge)\n  }\n  getNode(coordinate) {\n    let node = this.findNode(coordinate)\n    if (node === null) {\n      node = new Node(coordinate)\n      this.add(node)\n    }\n    return node\n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport Geometry from '../../geom/Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport EdgeString from './EdgeString.js'\nimport LineMergeGraph from './LineMergeGraph.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport GraphComponent from '../../planargraph/GraphComponent.js'\nexport default class LineMerger {\n  constructor() {\n    LineMerger.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._graph = new LineMergeGraph()\n    this._mergedLineStrings = null\n    this._factory = null\n    this._edgeStrings = null\n  }\n  buildEdgeStringsForUnprocessedNodes() {\n    for (let i = this._graph.getNodes().iterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (!node.isMarked()) {\n        Assert.isTrue(node.getDegree() === 2)\n        this.buildEdgeStringsStartingAt(node)\n        node.setMarked(true)\n      }\n    }\n  }\n  buildEdgeStringsForNonDegree2Nodes() {\n    for (let i = this._graph.getNodes().iterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (node.getDegree() !== 2) {\n        this.buildEdgeStringsStartingAt(node)\n        node.setMarked(true)\n      }\n    }\n  }\n  buildEdgeStringsForObviousStartNodes() {\n    this.buildEdgeStringsForNonDegree2Nodes()\n  }\n  getMergedLineStrings() {\n    this.merge()\n    return this._mergedLineStrings\n  }\n  buildEdgeStringsStartingAt(node) {\n    for (let i = node.getOutEdges().iterator(); i.hasNext(); ) {\n      const directedEdge = i.next()\n      if (directedEdge.getEdge().isMarked()) \n        continue\n      \n      this._edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge))\n    }\n  }\n  merge() {\n    if (this._mergedLineStrings !== null) \n      return null\n    \n    GraphComponent.setMarked(this._graph.nodeIterator(), false)\n    GraphComponent.setMarked(this._graph.edgeIterator(), false)\n    this._edgeStrings = new ArrayList()\n    this.buildEdgeStringsForObviousStartNodes()\n    this.buildEdgeStringsForIsolatedLoops()\n    this._mergedLineStrings = new ArrayList()\n    for (let i = this._edgeStrings.iterator(); i.hasNext(); ) {\n      const edgeString = i.next()\n      this._mergedLineStrings.add(edgeString.toLineString())\n    }\n  }\n  addLineString(lineString) {\n    if (this._factory === null) \n      this._factory = lineString.getFactory()\n    \n    this._graph.addEdge(lineString)\n  }\n  buildEdgeStringStartingWith(start) {\n    const edgeString = new EdgeString(this._factory)\n    let current = start\n    do {\n      edgeString.add(current)\n      current.getEdge().setMarked(true)\n      current = current.getNext()\n    } while (current !== null && current !== start)\n    return edgeString\n  }\n  add() {\n    if (arguments[0] instanceof Geometry) {\n      const geometry = arguments[0]\n      for (let i = 0; i < geometry.getNumGeometries(); i++) {\n        const component = geometry.getGeometryN(i)\n        if (component instanceof LineString) \n          this.addLineString(component)\n        \n      }\n      \n    } else if (hasInterface(arguments[0], Collection)) {\n      const geometries = arguments[0]\n      this._mergedLineStrings = null\n      for (let i = geometries.iterator(); i.hasNext(); ) {\n        const geometry = i.next()\n        this.add(geometry)\n      }\n    }\n  }\n  buildEdgeStringsForIsolatedLoops() {\n    this.buildEdgeStringsForUnprocessedNodes()\n  }\n}\n","import HashSet from '../../../../java/util/HashSet.js'\nimport NodeMap from './NodeMap.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class Subgraph {\n  constructor() {\n    Subgraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parentGraph = null\n    this._edges = new HashSet()\n    this._dirEdges = new ArrayList()\n    this._nodeMap = new NodeMap()\n    const parentGraph = arguments[0]\n    this._parentGraph = parentGraph\n  }\n  dirEdgeIterator() {\n    return this._dirEdges.iterator()\n  }\n  edgeIterator() {\n    return this._edges.iterator()\n  }\n  getParent() {\n    return this._parentGraph\n  }\n  nodeIterator() {\n    return this._nodeMap.iterator()\n  }\n  contains(e) {\n    return this._edges.contains(e)\n  }\n  add(e) {\n    if (this._edges.contains(e)) return null\n    this._edges.add(e)\n    this._dirEdges.add(e.getDirEdge(0))\n    this._dirEdges.add(e.getDirEdge(1))\n    this._nodeMap.add(e.getDirEdge(0).getFromNode())\n    this._nodeMap.add(e.getDirEdge(1).getFromNode())\n  }\n}\n","import Stack from '../../../../../java/util/Stack.js'\nimport Subgraph from '../Subgraph.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GraphComponent from '../GraphComponent.js'\nexport default class ConnectedSubgraphFinder {\n  constructor() {\n    ConnectedSubgraphFinder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._graph = null\n    const graph = arguments[0]\n    this._graph = graph\n  }\n  addReachable(startNode, subgraph) {\n    const nodeStack = new Stack()\n    nodeStack.add(startNode)\n    while (!nodeStack.empty()) {\n      const node = nodeStack.pop()\n      this.addEdges(node, nodeStack, subgraph)\n    }\n  }\n  findSubgraph(node) {\n    const subgraph = new Subgraph(this._graph)\n    this.addReachable(node, subgraph)\n    return subgraph\n  }\n  getConnectedSubgraphs() {\n    const subgraphs = new ArrayList()\n    GraphComponent.setVisited(this._graph.nodeIterator(), false)\n    for (let i = this._graph.edgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const node = e.getDirEdge(0).getFromNode()\n      if (!node.isVisited()) \n        subgraphs.add(this.findSubgraph(node))\n      \n    }\n    return subgraphs\n  }\n  addEdges(node, nodeStack, subgraph) {\n    node.setVisited(true)\n    for (let i = node.getOutEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      subgraph.add(de.getEdge())\n      const toNode = de.getToNode()\n      if (!toNode.isVisited()) nodeStack.push(toNode)\n    }\n  }\n}\n","import TreeSet from '../../../../../java/util/TreeSet.js'\nimport LineString from '../../geom/LineString.js'\nimport Geometry from '../../geom/Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Integer from '../../../../../java/lang/Integer.js'\nimport LineMergeGraph from './LineMergeGraph.js'\nimport LinkedList from '../../../../../java/util/LinkedList.js'\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport ConnectedSubgraphFinder from '../../planargraph/algorithm/ConnectedSubgraphFinder.js'\nimport Assert from '../../util/Assert.js'\nimport MultiLineString from '../../geom/MultiLineString.js'\nimport GraphComponent from '../../planargraph/GraphComponent.js'\nexport default class LineSequencer {\n  constructor() {\n    LineSequencer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._graph = new LineMergeGraph()\n    this._factory = new GeometryFactory()\n    this._lineCount = 0\n    this._isRun = false\n    this._sequencedGeometry = null\n    this._isSequenceable = false\n  }\n  static findUnvisitedBestOrientedDE(node) {\n    let wellOrientedDE = null\n    let unvisitedDE = null\n    for (let i = node.getOutEdges().iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (!de.getEdge().isVisited()) {\n        unvisitedDE = de\n        if (de.getEdgeDirection()) wellOrientedDE = de\n      }\n    }\n    if (wellOrientedDE !== null) return wellOrientedDE\n    return unvisitedDE\n  }\n  static findLowestDegreeNode(graph) {\n    let minDegree = Integer.MAX_VALUE\n    let minDegreeNode = null\n    for (let i = graph.nodeIterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (minDegreeNode === null || node.getDegree() < minDegree) {\n        minDegree = node.getDegree()\n        minDegreeNode = node\n      }\n    }\n    return minDegreeNode\n  }\n  static isSequenced(geom) {\n    if (!(geom instanceof MultiLineString)) \n      return true\n    \n    const mls = geom\n    const prevSubgraphNodes = new TreeSet()\n    let lastNode = null\n    const currNodes = new ArrayList()\n    for (let i = 0; i < mls.getNumGeometries(); i++) {\n      const line = mls.getGeometryN(i)\n      const startNode = line.getCoordinateN(0)\n      const endNode = line.getCoordinateN(line.getNumPoints() - 1)\n      if (prevSubgraphNodes.contains(startNode)) return false\n      if (prevSubgraphNodes.contains(endNode)) return false\n      if (lastNode !== null) \n        if (!startNode.equals(lastNode)) {\n          prevSubgraphNodes.addAll(currNodes)\n          currNodes.clear()\n        }\n      \n      currNodes.add(startNode)\n      currNodes.add(endNode)\n      lastNode = endNode\n    }\n    return true\n  }\n  static reverse(line) {\n    const pts = line.getCoordinates()\n    const revPts = new Array(pts.length).fill(null)\n    const len = pts.length\n    for (let i = 0; i < len; i++) \n      revPts[len - 1 - i] = new Coordinate(pts[i])\n    \n    return line.getFactory().createLineString(revPts)\n  }\n  static sequence(geom) {\n    const sequencer = new LineSequencer()\n    sequencer.add(geom)\n    return sequencer.getSequencedLineStrings()\n  }\n  addLine(lineString) {\n    if (this._factory === null) \n      this._factory = lineString.getFactory()\n    \n    this._graph.addEdge(lineString)\n    this._lineCount++\n  }\n  hasSequence(graph) {\n    let oddDegreeCount = 0\n    for (let i = graph.nodeIterator(); i.hasNext(); ) {\n      const node = i.next()\n      if (node.getDegree() % 2 === 1) oddDegreeCount++\n    }\n    return oddDegreeCount <= 2\n  }\n  computeSequence() {\n    if (this._isRun) \n      return null\n    \n    this._isRun = true\n    const sequences = this.findSequences()\n    if (sequences === null) return null\n    this._sequencedGeometry = this.buildSequencedGeometry(sequences)\n    this._isSequenceable = true\n    const finalLineCount = this._sequencedGeometry.getNumGeometries()\n    Assert.isTrue(this._lineCount === finalLineCount, 'Lines were missing from result')\n    Assert.isTrue(this._sequencedGeometry instanceof LineString || this._sequencedGeometry instanceof MultiLineString, 'Result is not lineal')\n  }\n  findSequences() {\n    const sequences = new ArrayList()\n    const csFinder = new ConnectedSubgraphFinder(this._graph)\n    const subgraphs = csFinder.getConnectedSubgraphs()\n    for (let i = subgraphs.iterator(); i.hasNext(); ) {\n      const subgraph = i.next()\n      if (this.hasSequence(subgraph)) {\n        const seq = this.findSequence(subgraph)\n        sequences.add(seq)\n      } else {\n        return null\n      }\n    }\n    return sequences\n  }\n  addReverseSubpath(de, lit, expectedClosed) {\n    const endNode = de.getToNode()\n    let fromNode = null\n    while (true) {\n      lit.add(de.getSym())\n      de.getEdge().setVisited(true)\n      fromNode = de.getFromNode()\n      const unvisitedOutDE = LineSequencer.findUnvisitedBestOrientedDE(fromNode)\n      if (unvisitedOutDE === null) break\n      de = unvisitedOutDE.getSym()\n    }\n    if (expectedClosed) \n      Assert.isTrue(fromNode === endNode, 'path not contiguous')\n    \n  }\n  findSequence(graph) {\n    GraphComponent.setVisited(graph.edgeIterator(), false)\n    const startNode = LineSequencer.findLowestDegreeNode(graph)\n    const startDE = startNode.getOutEdges().iterator().next()\n    const startDESym = startDE.getSym()\n    const seq = new LinkedList()\n    const lit = seq.listIterator()\n    this.addReverseSubpath(startDESym, lit, false)\n    while (lit.hasPrevious()) {\n      const prev = lit.previous()\n      const unvisitedOutDE = LineSequencer.findUnvisitedBestOrientedDE(prev.getFromNode())\n      if (unvisitedOutDE !== null) this.addReverseSubpath(unvisitedOutDE.getSym(), lit, true)\n    }\n    const orientedSeq = this.orient(seq)\n    return orientedSeq\n  }\n  reverse(seq) {\n    const newSeq = new LinkedList()\n    for (let i = seq.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      newSeq.addFirst(de.getSym())\n    }\n    return newSeq\n  }\n  orient(seq) {\n    const startEdge = seq.get(0)\n    const endEdge = seq.get(seq.size() - 1)\n    const startNode = startEdge.getFromNode()\n    const endNode = endEdge.getToNode()\n    let flipSeq = false\n    const hasDegree1Node = startNode.getDegree() === 1 || endNode.getDegree() === 1\n    if (hasDegree1Node) {\n      let hasObviousStartNode = false\n      if (endEdge.getToNode().getDegree() === 1 && endEdge.getEdgeDirection() === false) {\n        hasObviousStartNode = true\n        flipSeq = true\n      }\n      if (startEdge.getFromNode().getDegree() === 1 && startEdge.getEdgeDirection() === true) {\n        hasObviousStartNode = true\n        flipSeq = false\n      }\n      if (!hasObviousStartNode) \n        if (startEdge.getFromNode().getDegree() === 1) flipSeq = true\n      \n    }\n    if (flipSeq) return this.reverse(seq)\n    return seq\n  }\n  buildSequencedGeometry(sequences) {\n    const lines = new ArrayList()\n    for (let i1 = sequences.iterator(); i1.hasNext(); ) {\n      const seq = i1.next()\n      for (let i2 = seq.iterator(); i2.hasNext(); ) {\n        const de = i2.next()\n        const e = de.getEdge()\n        const line = e.getLine()\n        let lineToAdd = line\n        if (!de.getEdgeDirection() && !line.isClosed()) lineToAdd = LineSequencer.reverse(line)\n        lines.add(lineToAdd)\n      }\n    }\n    if (lines.size() === 0) return this._factory.createMultiLineString(new Array(0).fill(null))\n    return this._factory.buildGeometry(lines)\n  }\n  getSequencedLineStrings() {\n    this.computeSequence()\n    return this._sequencedGeometry\n  }\n  isSequenceable() {\n    this.computeSequence()\n    return this._isSequenceable\n  }\n  add() {\n    if (hasInterface(arguments[0], Collection)) {\n      const geometries = arguments[0]\n      for (let i = geometries.iterator(); i.hasNext(); ) {\n        const geometry = i.next()\n        this.add(geometry)\n      }\n    } else if (arguments[0] instanceof Geometry) {\n      const geometry = arguments[0]\n      geometry.apply(new (class {\n        get interfaces_() {\n          return [GeometryComponentFilter]\n        }\n        filter(component) {\n          if (component instanceof LineString) \n            this.addLine(component)\n          \n        }\n      })())\n    }\n  }\n}\n","import LineString from '../../../geom/LineString.js'\nimport CoordinateList from '../../../geom/CoordinateList.js'\nimport Coordinate from '../../../geom/Coordinate.js'\nimport Double from '../../../../../../java/lang/Double.js'\nimport LineSegment from '../../../geom/LineSegment.js'\nexport default class LineStringSnapper {\n  constructor() {\n    LineStringSnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._snapTolerance = 0.0\n    this._srcPts = null\n    this._seg = new LineSegment()\n    this._allowSnappingToSourceVertices = false\n    this._isClosed = false\n    if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n      const srcLine = arguments[0], snapTolerance = arguments[1]\n      LineStringSnapper.constructor_.call(this, srcLine.getCoordinates(), snapTolerance)\n    } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n      const srcPts = arguments[0], snapTolerance = arguments[1]\n      this._srcPts = srcPts\n      this._isClosed = LineStringSnapper.isClosed(srcPts)\n      this._snapTolerance = snapTolerance\n    }\n  }\n  static isClosed(pts) {\n    if (pts.length <= 1) return false\n    return pts[0].equals2D(pts[pts.length - 1])\n  }\n  snapVertices(srcCoords, snapPts) {\n    const end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size()\n    for (let i = 0; i < end; i++) {\n      const srcPt = srcCoords.get(i)\n      const snapVert = this.findSnapForVertex(srcPt, snapPts)\n      if (snapVert !== null) {\n        srcCoords.set(i, new Coordinate(snapVert))\n        if (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert))\n      }\n    }\n  }\n  findSnapForVertex(pt, snapPts) {\n    for (let i = 0; i < snapPts.length; i++) {\n      if (pt.equals2D(snapPts[i])) return null\n      if (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i]\n    }\n    return null\n  }\n  snapTo(snapPts) {\n    const coordList = new CoordinateList(this._srcPts)\n    this.snapVertices(coordList, snapPts)\n    this.snapSegments(coordList, snapPts)\n    const newPts = coordList.toCoordinateArray()\n    return newPts\n  }\n  snapSegments(srcCoords, snapPts) {\n    if (snapPts.length === 0) return null\n    let distinctPtCount = snapPts.length\n    if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1\n    for (let i = 0; i < distinctPtCount; i++) {\n      const snapPt = snapPts[i]\n      const index = this.findSegmentIndexToSnap(snapPt, srcCoords)\n      if (index >= 0) \n        srcCoords.add(index + 1, new Coordinate(snapPt), false)\n      \n    }\n  }\n  findSegmentIndexToSnap(snapPt, srcCoords) {\n    let minDist = Double.MAX_VALUE\n    let snapIndex = -1\n    for (let i = 0; i < srcCoords.size() - 1; i++) {\n      this._seg.p0 = srcCoords.get(i)\n      this._seg.p1 = srcCoords.get(i + 1)\n      if (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) \n        if (this._allowSnappingToSourceVertices) continue; else return -1\n      \n      const dist = this._seg.distance(snapPt)\n      if (dist < this._snapTolerance && dist < minDist) {\n        minDist = dist\n        snapIndex = i\n      }\n    }\n    return snapIndex\n  }\n  setAllowSnappingToSourceVertices(allowSnappingToSourceVertices) {\n    this._allowSnappingToSourceVertices = allowSnappingToSourceVertices\n  }\n}\n","import TreeSet from '../../../../../../java/util/TreeSet.js'\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer.js'\nimport hasInterface from '../../../../../../hasInterface.js'\nimport Double from '../../../../../../java/lang/Double.js'\nimport LineStringSnapper from './LineStringSnapper.js'\nimport PrecisionModel from '../../../geom/PrecisionModel.js'\nimport Polygonal from '../../../geom/Polygonal.js'\nexport default class GeometrySnapper {\n  constructor() {\n    GeometrySnapper.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._srcGeom = null\n    const srcGeom = arguments[0]\n    this._srcGeom = srcGeom\n  }\n  static snap(g0, g1, snapTolerance) {\n    const snapGeom = new Array(2).fill(null)\n    const snapper0 = new GeometrySnapper(g0)\n    snapGeom[0] = snapper0.snapTo(g1, snapTolerance)\n    const snapper1 = new GeometrySnapper(g1)\n    snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance)\n    return snapGeom\n  }\n  static computeOverlaySnapTolerance() {\n    if (arguments.length === 1) {\n      const g = arguments[0]\n      let snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g)\n      const pm = g.getPrecisionModel()\n      if (pm.getType() === PrecisionModel.FIXED) {\n        const fixedSnapTol = 1 / pm.getScale() * 2 / 1.415\n        if (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol\n      }\n      return snapTolerance\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n    }\n  }\n  static computeSizeBasedSnapTolerance(g) {\n    const env = g.getEnvelopeInternal()\n    const minDimension = Math.min(env.getHeight(), env.getWidth())\n    const snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR\n    return snapTol\n  }\n  static snapToSelf(geom, snapTolerance, cleanResult) {\n    const snapper0 = new GeometrySnapper(geom)\n    return snapper0.snapToSelf(snapTolerance, cleanResult)\n  }\n  snapTo(snapGeom, snapTolerance) {\n    const snapPts = this.extractTargetCoordinates(snapGeom)\n    const snapTrans = new SnapTransformer(snapTolerance, snapPts)\n    return snapTrans.transform(this._srcGeom)\n  }\n  snapToSelf(snapTolerance, cleanResult) {\n    const snapPts = this.extractTargetCoordinates(this._srcGeom)\n    const snapTrans = new SnapTransformer(snapTolerance, snapPts, true)\n    const snappedGeom = snapTrans.transform(this._srcGeom)\n    let result = snappedGeom\n    if (cleanResult && hasInterface(result, Polygonal)) \n      result = snappedGeom.buffer(0)\n    \n    return result\n  }\n  computeSnapTolerance(ringPts) {\n    const minSegLen = this.computeMinimumSegmentLength(ringPts)\n    const snapTol = minSegLen / 10\n    return snapTol\n  }\n  extractTargetCoordinates(g) {\n    const ptSet = new TreeSet()\n    const pts = g.getCoordinates()\n    for (let i = 0; i < pts.length; i++) \n      ptSet.add(pts[i])\n    \n    return ptSet.toArray(new Array(0).fill(null))\n  }\n  computeMinimumSegmentLength(pts) {\n    let minSegLen = Double.MAX_VALUE\n    for (let i = 0; i < pts.length - 1; i++) {\n      const segLen = pts[i].distance(pts[i + 1])\n      if (segLen < minSegLen) minSegLen = segLen\n    }\n    return minSegLen\n  }\n}\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9\nclass SnapTransformer extends GeometryTransformer {\n  constructor() {\n    super()\n    SnapTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._snapTolerance = null\n    this._snapPts = null\n    this._isSelfSnap = false\n    if (arguments.length === 2) {\n      const snapTolerance = arguments[0], snapPts = arguments[1]\n      this._snapTolerance = snapTolerance\n      this._snapPts = snapPts\n    } else if (arguments.length === 3) {\n      const snapTolerance = arguments[0], snapPts = arguments[1], isSelfSnap = arguments[2]\n      this._snapTolerance = snapTolerance\n      this._snapPts = snapPts\n      this._isSelfSnap = isSelfSnap\n    }\n  }\n  snapLine(srcPts, snapPts) {\n    const snapper = new LineStringSnapper(srcPts, this._snapTolerance)\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap)\n    return snapper.snapTo(snapPts)\n  }\n  transformCoordinates(coords, parent) {\n    const srcPts = coords.toCoordinateArray()\n    const newPts = this.snapLine(srcPts, this._snapPts)\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence.js'\nimport Octant from './Octant.js'\nimport SegmentString from './SegmentString.js'\nexport default class BasicSegmentString {\n  constructor() {\n    BasicSegmentString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._data = null\n    const pts = arguments[0], data = arguments[1]\n    this._pts = pts\n    this._data = data\n  }\n  getCoordinates() {\n    return this._pts\n  }\n  size() {\n    return this._pts.length\n  }\n  getCoordinate(i) {\n    return this._pts[i]\n  }\n  isClosed() {\n    return this._pts[0].equals(this._pts[this._pts.length - 1])\n  }\n  getSegmentOctant(index) {\n    if (index === this._pts.length - 1) return -1\n    return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n  }\n  setData(data) {\n    this._data = data\n  }\n  getData() {\n    return this._data\n  }\n  toString() {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n  }\n  get interfaces_() {\n    return [SegmentString]\n  }\n}\n","import SegmentIntersector from './SegmentIntersector.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class NodingIntersectionFinder {\n  constructor() {\n    NodingIntersectionFinder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._findAllIntersections = false\n    this._isCheckEndSegmentsOnly = false\n    this._keepIntersections = true\n    this._isInteriorIntersectionsOnly = false\n    this._li = null\n    this._interiorIntersection = null\n    this._intSegments = null\n    this._intersections = new ArrayList()\n    this._intersectionCount = 0\n    const li = arguments[0]\n    this._li = li\n    this._interiorIntersection = null\n  }\n  static createAllIntersectionsFinder(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    return finder\n  }\n  static isInteriorVertexIntersection() {\n    if (arguments.length === 4) {\n      const p0 = arguments[0], p1 = arguments[1], isEnd0 = arguments[2], isEnd1 = arguments[3]\n      if (isEnd0 && isEnd1) return false\n      if (p0.equals2D(p1)) \n        return true\n      \n      return false\n    } else if (arguments.length === 8) {\n      const p00 = arguments[0], p01 = arguments[1], p10 = arguments[2], p11 = arguments[3], isEnd00 = arguments[4], isEnd01 = arguments[5], isEnd10 = arguments[6], isEnd11 = arguments[7]\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p00, p10, isEnd00, isEnd10)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p00, p11, isEnd00, isEnd11)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p01, p10, isEnd01, isEnd10)) return true\n      if (NodingIntersectionFinder.isInteriorVertexIntersection(p01, p11, isEnd01, isEnd11)) return true\n      return false\n    }\n  }\n  static createInteriorIntersectionCounter(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setInteriorIntersectionsOnly(true)\n    finder.setFindAllIntersections(true)\n    finder.setKeepIntersections(false)\n    return finder\n  }\n  static createIntersectionCounter(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    finder.setKeepIntersections(false)\n    return finder\n  }\n  static isEndSegment(segStr, index) {\n    if (index === 0) return true\n    if (index >= segStr.size() - 2) return true\n    return false\n  }\n  static createAnyIntersectionFinder(li) {\n    return new NodingIntersectionFinder(li)\n  }\n  static createInteriorIntersectionsFinder(li) {\n    const finder = new NodingIntersectionFinder(li)\n    finder.setFindAllIntersections(true)\n    finder.setInteriorIntersectionsOnly(true)\n    return finder\n  }\n  setCheckEndSegmentsOnly(isCheckEndSegmentsOnly) {\n    this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly\n  }\n  getIntersectionSegments() {\n    return this._intSegments\n  }\n  count() {\n    return this._intersectionCount\n  }\n  getIntersections() {\n    return this._intersections\n  }\n  setFindAllIntersections(findAllIntersections) {\n    this._findAllIntersections = findAllIntersections\n  }\n  setKeepIntersections(keepIntersections) {\n    this._keepIntersections = keepIntersections\n  }\n  getIntersection() {\n    return this._interiorIntersection\n  }\n  processIntersections(e0, segIndex0, e1, segIndex1) {\n    if (!this._findAllIntersections && this.hasIntersection()) return null\n    const isSameSegString = e0 === e1\n    const isSameSegment = isSameSegString && segIndex0 === segIndex1\n    if (isSameSegment) return null\n    if (this._isCheckEndSegmentsOnly) {\n      const isEndSegPresent = NodingIntersectionFinder.isEndSegment(e0, segIndex0) || NodingIntersectionFinder.isEndSegment(e1, segIndex1)\n      if (!isEndSegPresent) return null\n    }\n    const p00 = e0.getCoordinate(segIndex0)\n    const p01 = e0.getCoordinate(segIndex0 + 1)\n    const p10 = e1.getCoordinate(segIndex1)\n    const p11 = e1.getCoordinate(segIndex1 + 1)\n    const isEnd00 = segIndex0 === 0\n    const isEnd01 = segIndex0 + 2 === e0.size()\n    const isEnd10 = segIndex1 === 0\n    const isEnd11 = segIndex1 + 2 === e1.size()\n    this._li.computeIntersection(p00, p01, p10, p11)\n    const isInteriorInt = this._li.hasIntersection() && this._li.isInteriorIntersection()\n    let isInteriorVertexInt = false\n    if (!this._isInteriorIntersectionsOnly) {\n      const isAdjacentSegment = isSameSegString && Math.abs(segIndex1 - segIndex0) <= 1\n      isInteriorVertexInt = !isAdjacentSegment && NodingIntersectionFinder.isInteriorVertexIntersection(p00, p01, p10, p11, isEnd00, isEnd01, isEnd10, isEnd11)\n    }\n    if (isInteriorInt || isInteriorVertexInt) {\n      this._intSegments = new Array(4).fill(null)\n      this._intSegments[0] = p00\n      this._intSegments[1] = p01\n      this._intSegments[2] = p10\n      this._intSegments[3] = p11\n      this._interiorIntersection = this._li.getIntersection(0)\n      if (this._keepIntersections) this._intersections.add(this._interiorIntersection)\n      this._intersectionCount++\n    }\n  }\n  hasIntersection() {\n    return this._interiorIntersection !== null\n  }\n  isDone() {\n    if (this._findAllIntersections) return false\n    return this._interiorIntersection !== null\n  }\n  setInteriorIntersectionsOnly(isInteriorIntersectionsOnly) {\n    this._isInteriorIntersectionsOnly = isInteriorIntersectionsOnly\n  }\n  get interfaces_() {\n    return [SegmentIntersector]\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport MCIndexNoder from './MCIndexNoder.js'\nimport TopologyException from '../geom/TopologyException.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nimport NodingIntersectionFinder from './NodingIntersectionFinder.js'\nexport default class FastNodingValidator {\n  constructor() {\n    FastNodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._segStrings = null\n    this._findAllIntersections = false\n    this._segInt = null\n    this._isValid = true\n    const segStrings = arguments[0]\n    this._segStrings = segStrings\n  }\n  static computeIntersections(segStrings) {\n    const nv = new FastNodingValidator(segStrings)\n    nv.setFindAllIntersections(true)\n    nv.isValid()\n    return nv.getIntersections()\n  }\n  execute() {\n    if (this._segInt !== null) return null\n    this.checkInteriorIntersections()\n  }\n  getIntersections() {\n    return this._segInt.getIntersections()\n  }\n  isValid() {\n    this.execute()\n    return this._isValid\n  }\n  setFindAllIntersections(findAllIntersections) {\n    this._findAllIntersections = findAllIntersections\n  }\n  checkInteriorIntersections() {\n    this._isValid = true\n    this._segInt = new NodingIntersectionFinder(this._li)\n    this._segInt.setFindAllIntersections(this._findAllIntersections)\n    const noder = new MCIndexNoder()\n    noder.setSegmentIntersector(this._segInt)\n    noder.computeNodes(this._segStrings)\n    if (this._segInt.hasIntersection()) {\n      this._isValid = false\n      return null\n    }\n  }\n  checkValid() {\n    this.execute()\n    if (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getIntersection())\n  }\n  getErrorMessage() {\n    if (this._isValid) return 'no intersections found'\n    const intSegs = this._segInt.getIntersectionSegments()\n    return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n  }\n}\n","import BasicSegmentString from '../noding/BasicSegmentString.js'\nimport FastNodingValidator from '../noding/FastNodingValidator.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class EdgeNodingValidator {\n  constructor() {\n    EdgeNodingValidator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nv = null\n    const edges = arguments[0]\n    this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges))\n  }\n  static toSegmentStrings(edges) {\n    const segStrings = new ArrayList()\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      segStrings.add(new BasicSegmentString(e.getCoordinates(), e))\n    }\n    return segStrings\n  }\n  static checkValid(edges) {\n    const validator = new EdgeNodingValidator(edges)\n    validator.checkValid()\n  }\n  checkValid() {\n    this._nv.checkValid()\n  }\n}\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport OverlayOp from './OverlayOp.js'\nexport default class LineBuilder {\n  constructor() {\n    LineBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._op = null\n    this._geometryFactory = null\n    this._ptLocator = null\n    this._lineEdgesList = new ArrayList()\n    this._resultLineList = new ArrayList()\n    const op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2]\n    this._op = op\n    this._geometryFactory = geometryFactory\n    this._ptLocator = ptLocator\n  }\n  collectLines(opCode) {\n    for (let it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      this.collectLineEdge(de, opCode, this._lineEdgesList)\n      this.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList)\n    }\n  }\n  labelIsolatedLine(e, targetIndex) {\n    const loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex))\n    e.getLabel().setLocation(targetIndex, loc)\n  }\n  build(opCode) {\n    this.findCoveredLineEdges()\n    this.collectLines(opCode)\n    this.buildLines(opCode)\n    return this._resultLineList\n  }\n  collectLineEdge(de, opCode, edges) {\n    const label = de.getLabel()\n    const e = de.getEdge()\n    if (de.isLineEdge()) \n      if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n        edges.add(e)\n        de.setVisitedEdge(true)\n      }\n    \n  }\n  findCoveredLineEdges() {\n    for (let nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().findCoveredLineEdges()\n    }\n    for (let it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const e = de.getEdge()\n      if (de.isLineEdge() && !e.isCoveredSet()) {\n        const isCovered = this._op.isCoveredByA(de.getCoordinate())\n        e.setCovered(isCovered)\n      }\n    }\n  }\n  labelIsolatedLines(edgesList) {\n    for (let it = edgesList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const label = e.getLabel()\n      if (e.isIsolated()) \n        if (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1)\n      \n    }\n  }\n  buildLines(opCode) {\n    for (let it = this._lineEdgesList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const line = this._geometryFactory.createLineString(e.getCoordinates())\n      this._resultLineList.add(line)\n      e.setInResult(true)\n    }\n  }\n  collectBoundaryTouchEdge(de, opCode, edges) {\n    const label = de.getLabel()\n    if (de.isLineEdge()) return null\n    if (de.isVisited()) return null\n    if (de.isInteriorAreaEdge()) return null\n    if (de.getEdge().isInResult()) return null\n    Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult())\n    if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n      edges.add(de.getEdge())\n      de.setVisitedEdge(true)\n    }\n  }\n}\n","import ArrayList from '../../../../../java/util/ArrayList.js'\nimport OverlayOp from './OverlayOp.js'\nexport default class PointBuilder {\n  constructor() {\n    PointBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._op = null\n    this._geometryFactory = null\n    this._resultPointList = new ArrayList()\n    const op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2]\n    this._op = op\n    this._geometryFactory = geometryFactory\n  }\n  filterCoveredNodeToPoint(n) {\n    const coord = n.getCoordinate()\n    if (!this._op.isCoveredByLA(coord)) {\n      const pt = this._geometryFactory.createPoint(coord)\n      this._resultPointList.add(pt)\n    }\n  }\n  extractNonCoveredResultNodes(opCode) {\n    for (let nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n      const n = nodeit.next()\n      if (n.isInResult()) continue\n      if (n.isIncidentEdgeInResult()) continue\n      if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n        const label = n.getLabel()\n        if (OverlayOp.isResultOfOp(label, opCode)) \n          this.filterCoveredNodeToPoint(n)\n        \n      }\n    }\n  }\n  build(opCode) {\n    this.extractNonCoveredResultNodes(opCode)\n    return this._resultPointList\n  }\n}\n","import Double from '../../../../java/lang/Double.js'\nimport Long from '../../../../java/lang/Long.js'\nexport default class CommonBits {\n  constructor() {\n    this._isFirst = true\n    this._commonMantissaBitsCount = 53\n    this._commonBits = new Long()\n    this._commonSignExp = null\n  }\n\n  getCommon() {\n    return Double.longBitsToDouble(this._commonBits)\n  }\n\n  add(num) {\n    const numBits = Double.doubleToLongBits(num)\n    if (this._isFirst) {\n      this._commonBits = numBits\n      this._commonSignExp = CommonBits.signExpBits(this._commonBits)\n      this._isFirst = false\n      return null\n    }\n    const numSignExp = CommonBits.signExpBits(numBits)\n    if (numSignExp !== this._commonSignExp) {\n      this._commonBits.high = 0 | 0\n      this._commonBits.low = 0 | 0\n      return null\n    }\n    this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits)\n    this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount))\n  }\n\n  toString() {\n    if (arguments.length === 1) {\n      const bits = arguments[0]\n      const x = Double.longBitsToDouble(bits)\n      const numStr = Long.toBinaryString(bits)\n      const padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr\n      const bitStr = padStr.substring(padStr.length - 64)\n      const str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]'\n      return str\n    }\n  }\n\n  getClass() {\n    return CommonBits\n  }\n\n  get interfaces_() {\n    return []\n  }\n\n  static getBit(bits, i) {\n    const mask = (1 << (i % 32))\n    if (i < 32) return (bits.low & mask) !== 0 ? 1 : 0\n\n    return (bits.high & mask) !== 0 ? 1 : 0\n  }\n\n  static signExpBits(num) {\n    return num.high >>> 20\n  }\n\n  static zeroLowerBits(bits, nBits) {\n    let prop = 'low'\n    if (nBits > 32) {\n      bits.low = 0 | 0\n      nBits %= 32\n      prop = 'high'\n    }\n    if (nBits > 0) {\n      const mask = (nBits < 32) ? (~((1 << nBits) - 1)) : 0\n      bits[prop] &= mask\n    }\n    return bits\n  }\n\n  static numCommonMostSigMantissaBits(num1, num2) {\n    let count = 0\n    for (let i = 52; i >= 0; i--) {\n      if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count\n      count++\n    }\n    return 52\n  }\n}\n","import CommonBits from './CommonBits.js'\nimport CoordinateFilter from '../geom/CoordinateFilter.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter.js'\nexport default class CommonBitsRemover {\n  constructor() {\n    CommonBitsRemover.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._commonCoord = null\n    this._ccFilter = new CommonCoordinateFilter()\n  }\n  addCommonBits(geom) {\n    const trans = new Translater(this._commonCoord)\n    geom.apply(trans)\n    geom.geometryChanged()\n  }\n  removeCommonBits(geom) {\n    if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom\n    const invCoord = new Coordinate(this._commonCoord)\n    invCoord.x = -invCoord.x\n    invCoord.y = -invCoord.y\n    const trans = new Translater(invCoord)\n    geom.apply(trans)\n    geom.geometryChanged()\n    return geom\n  }\n  getCommonCoordinate() {\n    return this._commonCoord\n  }\n  add(geom) {\n    geom.apply(this._ccFilter)\n    this._commonCoord = this._ccFilter.getCommonCoordinate()\n  }\n}\nclass CommonCoordinateFilter {\n  constructor() {\n    CommonCoordinateFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._commonBitsX = new CommonBits()\n    this._commonBitsY = new CommonBits()\n  }\n  filter(coord) {\n    this._commonBitsX.add(coord.x)\n    this._commonBitsY.add(coord.y)\n  }\n  getCommonCoordinate() {\n    return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n  }\n  get interfaces_() {\n    return [CoordinateFilter]\n  }\n}\nclass Translater {\n  constructor() {\n    Translater.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.trans = null\n    const trans = arguments[0]\n    this.trans = trans\n  }\n  filter(seq, i) {\n    const xp = seq.getOrdinate(i, 0) + this.trans.x\n    const yp = seq.getOrdinate(i, 1) + this.trans.y\n    seq.setOrdinate(i, 0, xp)\n    seq.setOrdinate(i, 1, yp)\n  }\n  isDone() {\n    return false\n  }\n  isGeometryChanged() {\n    return true\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFilter]\n  }\n}\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter\nCommonBitsRemover.Translater = Translater\n","import GeometrySnapper from './GeometrySnapper.js'\nimport System from '../../../../../../java/lang/System.js'\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover.js'\nimport OverlayOp from '../OverlayOp.js'\nexport default class SnapOverlayOp {\n  constructor() {\n    SnapOverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = new Array(2).fill(null)\n    this._snapTolerance = null\n    this._cbr = null\n    const g1 = arguments[0], g2 = arguments[1]\n    this._geom[0] = g1\n    this._geom[1] = g2\n    this.computeSnapTolerance()\n  }\n  static overlayOp(g0, g1, opCode) {\n    const op = new SnapOverlayOp(g0, g1)\n    return op.getResultGeometry(opCode)\n  }\n  static union(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n  }\n  static intersection(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n  }\n  static symDifference(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n  }\n  static difference(g0, g1) {\n    return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n  }\n  selfSnap(geom) {\n    const snapper0 = new GeometrySnapper(geom)\n    const snapGeom = snapper0.snapTo(geom, this._snapTolerance)\n    return snapGeom\n  }\n  removeCommonBits(geom) {\n    this._cbr = new CommonBitsRemover()\n    this._cbr.add(geom[0])\n    this._cbr.add(geom[1])\n    const remGeom = new Array(2).fill(null)\n    remGeom[0] = this._cbr.removeCommonBits(geom[0].copy())\n    remGeom[1] = this._cbr.removeCommonBits(geom[1].copy())\n    return remGeom\n  }\n  prepareResult(geom) {\n    this._cbr.addCommonBits(geom)\n    return geom\n  }\n  getResultGeometry(opCode) {\n    const prepGeom = this.snap(this._geom)\n    const result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode)\n    return this.prepareResult(result)\n  }\n  checkValid(g) {\n    if (!g.isValid()) \n      System.out.println('Snapped geometry is invalid')\n    \n  }\n  computeSnapTolerance() {\n    this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1])\n  }\n  snap(geom) {\n    const remGeom = this.removeCommonBits(geom)\n    const snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance)\n    return snapGeom\n  }\n}\n","import SnapOverlayOp from './SnapOverlayOp.js'\nimport RuntimeException from '../../../../../../java/lang/RuntimeException.js'\nimport OverlayOp from '../OverlayOp.js'\nexport default class SnapIfNeededOverlayOp {\n  constructor() {\n    SnapIfNeededOverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = new Array(2).fill(null)\n    const g1 = arguments[0], g2 = arguments[1]\n    this._geom[0] = g1\n    this._geom[1] = g2\n  }\n  static overlayOp(g0, g1, opCode) {\n    const op = new SnapIfNeededOverlayOp(g0, g1)\n    return op.getResultGeometry(opCode)\n  }\n  static union(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n  }\n  static intersection(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n  }\n  static symDifference(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n  }\n  static difference(g0, g1) {\n    return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n  }\n  getResultGeometry(opCode) {\n    let result = null\n    let isSuccess = false\n    let savedException = null\n    try {\n      result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode)\n      const isValid = true\n      if (isValid) isSuccess = true\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        savedException = ex\n      else throw ex\n    } finally {}\n    if (!isSuccess) \n      try {\n        result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode)\n      } catch (ex) {\n        if (ex instanceof RuntimeException) \n          throw savedException\n        else throw ex\n      } finally {}\n    \n    return result\n  }\n}\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule.js'\nimport GeometryGraph from '../geomgraph/GeometryGraph.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nexport default class GeometryGraphOperation {\n  constructor() {\n    GeometryGraphOperation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._resultPrecisionModel = null\n    this._arg = null\n    if (arguments.length === 1) {\n      const g0 = arguments[0]\n      this.setComputationPrecision(g0.getPrecisionModel())\n      this._arg = new Array(1).fill(null)\n      this._arg[0] = new GeometryGraph(0, g0)\n      \n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      GeometryGraphOperation.constructor_.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE)\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2]\n      if (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel())\n      this._arg = new Array(2).fill(null)\n      this._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule)\n      this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule)\n    }\n  }\n  getArgGeometry(i) {\n    return this._arg[i].getGeometry()\n  }\n  setComputationPrecision(pm) {\n    this._resultPrecisionModel = pm\n    this._li.setPrecisionModel(this._resultPrecisionModel)\n  }\n}\n","import PointLocator from '../../algorithm/PointLocator.js'\nimport Location from '../../geom/Location.js'\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator.js'\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper.js'\nimport PolygonBuilder from './PolygonBuilder.js'\nimport Position from '../../geomgraph/Position.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport LineBuilder from './LineBuilder.js'\nimport PointBuilder from './PointBuilder.js'\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp.js'\nimport Label from '../../geomgraph/Label.js'\nimport OverlayNodeFactory from './OverlayNodeFactory.js'\nimport GeometryGraphOperation from '../GeometryGraphOperation.js'\nimport EdgeList from '../../geomgraph/EdgeList.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nexport default class OverlayOp extends GeometryGraphOperation {\n  constructor() {\n    super()\n    OverlayOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._ptLocator = new PointLocator()\n    this._geomFact = null\n    this._resultGeom = null\n    this._graph = null\n    this._edgeList = new EdgeList()\n    this._resultPolyList = new ArrayList()\n    this._resultLineList = new ArrayList()\n    this._resultPointList = new ArrayList()\n    const g0 = arguments[0], g1 = arguments[1]\n    GeometryGraphOperation.constructor_.call(this, g0, g1)\n    this._graph = new PlanarGraph(new OverlayNodeFactory())\n    this._geomFact = g0.getFactory()\n  }\n  static overlayOp(geom0, geom1, opCode) {\n    const gov = new OverlayOp(geom0, geom1)\n    const geomOv = gov.getResultGeometry(opCode)\n    return geomOv\n  }\n  static union(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) {\n      if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, geom, other, geom.getFactory())\n      if (geom.isEmpty()) return other.copy()\n      if (other.isEmpty()) return geom.copy()\n    }\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.UNION)\n  }\n  static intersection(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, geom, other, geom.getFactory())\n    if (geom.isGeometryCollection()) {\n      const g2 = other\n      return GeometryCollectionMapper.map(geom, new (class {\n        get interfaces_() {\n          return [MapOp]\n        }\n        map(g) {\n          return OverlayOp.intersection(g, g2)\n        }\n      })())\n    }\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.INTERSECTION)\n  }\n  static symDifference(geom, other) {\n    if (geom.isEmpty() || other.isEmpty()) {\n      if (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, geom, other, geom.getFactory())\n      if (geom.isEmpty()) return other.copy()\n      if (other.isEmpty()) return geom.copy()\n    }\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.SYMDIFFERENCE)\n  }\n  static resultDimension(opCode, g0, g1) {\n    const dim0 = g0.getDimension()\n    const dim1 = g1.getDimension()\n    let resultDimension = -1\n    switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1)\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1)\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1)\n      break\n    }\n    return resultDimension\n  }\n  static createEmptyResult(overlayOpCode, a, b, geomFact) {\n    let result = null\n    const resultDim = OverlayOp.resultDimension(overlayOpCode, a, b)\n    return result = geomFact.createEmpty(resultDim)\n  }\n  static difference(geom, other) {\n    if (geom.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, geom, other, geom.getFactory())\n    if (other.isEmpty()) return geom.copy()\n    if (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n    return SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.DIFFERENCE)\n  }\n  static isResultOfOp() {\n    if (arguments.length === 2) {\n      const label = arguments[0], opCode = arguments[1]\n      const loc0 = label.getLocation(0)\n      const loc1 = label.getLocation(1)\n      return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n    } else if (arguments.length === 3) {\n      let loc0 = arguments[0], loc1 = arguments[1], overlayOpCode = arguments[2]\n      if (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR\n      if (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR\n      switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0 === Location.INTERIOR && loc1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0 === Location.INTERIOR || loc1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR\n      }\n      return false\n    }\n  }\n  insertUniqueEdge(e) {\n    const existingEdge = this._edgeList.findEqualEdge(e)\n    if (existingEdge !== null) {\n      const existingLabel = existingEdge.getLabel()\n      let labelToMerge = e.getLabel()\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel())\n        labelToMerge.flip()\n      }\n      const depth = existingEdge.getDepth()\n      if (depth.isNull()) \n        depth.add(existingLabel)\n      \n      depth.add(labelToMerge)\n      existingLabel.merge(labelToMerge)\n    } else {\n      this._edgeList.add(e)\n    }\n  }\n  getGraph() {\n    return this._graph\n  }\n  cancelDuplicateResultEdges() {\n    for (let it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const sym = de.getSym()\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false)\n        sym.setInResult(false)\n      }\n    }\n  }\n  isCoveredByLA(coord) {\n    if (this.isCovered(coord, this._resultLineList)) return true\n    if (this.isCovered(coord, this._resultPolyList)) return true\n    return false\n  }\n  computeGeometry(resultPointList, resultLineList, resultPolyList, opcode) {\n    const geomList = new ArrayList()\n    geomList.addAll(resultPointList)\n    geomList.addAll(resultLineList)\n    geomList.addAll(resultPolyList)\n    if (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact)\n    return this._geomFact.buildGeometry(geomList)\n  }\n  mergeSymLabels() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().mergeSymLabels()\n    }\n  }\n  isCovered(coord, geomList) {\n    for (let it = geomList.iterator(); it.hasNext(); ) {\n      const geom = it.next()\n      const loc = this._ptLocator.locate(coord, geom)\n      if (loc !== Location.EXTERIOR) return true\n    }\n    return false\n  }\n  replaceCollapsedEdges() {\n    const newEdges = new ArrayList()\n    for (let it = this._edgeList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.isCollapsed()) {\n        it.remove()\n        newEdges.add(e.getCollapsedEdge())\n      }\n    }\n    this._edgeList.addAll(newEdges)\n  }\n  updateNodeLabelling() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      const lbl = node.getEdges().getLabel()\n      node.getLabel().merge(lbl)\n    }\n  }\n  getResultGeometry(overlayOpCode) {\n    this.computeOverlay(overlayOpCode)\n    return this._resultGeom\n  }\n  insertUniqueEdges(edges) {\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      this.insertUniqueEdge(e)\n    }\n  }\n  computeOverlay(opCode) {\n    this.copyPoints(0)\n    this.copyPoints(1)\n    this._arg[0].computeSelfNodes(this._li, false)\n    this._arg[1].computeSelfNodes(this._li, false)\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true)\n    const baseSplitEdges = new ArrayList()\n    this._arg[0].computeSplitEdges(baseSplitEdges)\n    this._arg[1].computeSplitEdges(baseSplitEdges)\n    const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges)\n    this.computeLabelsFromDepths()\n    this.replaceCollapsedEdges()\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges())\n    this._graph.addEdges(this._edgeList.getEdges())\n    this.computeLabelling()\n    this.labelIncompleteNodes()\n    this.findResultAreaEdges(opCode)\n    this.cancelDuplicateResultEdges()\n    const polyBuilder = new PolygonBuilder(this._geomFact)\n    polyBuilder.add(this._graph)\n    this._resultPolyList = polyBuilder.getPolygons()\n    const lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator)\n    this._resultLineList = lineBuilder.build(opCode)\n    const pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator)\n    this._resultPointList = pointBuilder.build(opCode)\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode)\n  }\n  labelIncompleteNode(n, targetIndex) {\n    const loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry())\n    n.getLabel().setLocation(targetIndex, loc)\n  }\n  copyPoints(argIndex) {\n    for (let i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n      const graphNode = i.next()\n      const newNode = this._graph.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n  findResultAreaEdges(opCode) {\n    for (let it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      const label = de.getLabel()\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) \n        de.setInResult(true)\n      \n    }\n  }\n  computeLabelsFromDepths() {\n    for (let it = this._edgeList.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const lbl = e.getLabel()\n      const depth = e.getDepth()\n      if (!depth.isNull()) {\n        depth.normalize()\n        for (let i = 0; i < 2; i++) \n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) \n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i)\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized')\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT))\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized')\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT))\n            }\n          \n        \n      }\n    }\n  }\n  computeLabelling() {\n    for (let nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n      const node = nodeit.next()\n      node.getEdges().computeLabelling(this._arg)\n    }\n    this.mergeSymLabels()\n    this.updateNodeLabelling()\n  }\n  labelIncompleteNodes() {\n    for (let ni = this._graph.getNodes().iterator(); ni.hasNext(); ) {\n      const n = ni.next()\n      const label = n.getLabel()\n      if (n.isIsolated()) \n        if (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1)\n      \n      n.getEdges().updateLabelling(label)\n    }\n  }\n  isCoveredByA(coord) {\n    if (this.isCovered(coord, this._resultPolyList)) return true\n    return false\n  }\n}\nOverlayOp.INTERSECTION = 1\nOverlayOp.UNION = 2\nOverlayOp.DIFFERENCE = 3\nOverlayOp.SYMDIFFERENCE = 4\n","import DirectedEdge from '../../planargraph/DirectedEdge.js'\nexport default class PolygonizeDirectedEdge extends DirectedEdge {\n  constructor() {\n    super()\n    PolygonizeDirectedEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edgeRing = null\n    this._next = null\n    this._label = -1\n    const from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3]\n    DirectedEdge.constructor_.call(this, from, to, directionPt, edgeDirection)\n  }\n  getNext() {\n    return this._next\n  }\n  isInRing() {\n    return this._edgeRing !== null\n  }\n  setRing(edgeRing) {\n    this._edgeRing = edgeRing\n  }\n  setLabel(label) {\n    this._label = label\n  }\n  getLabel() {\n    return this._label\n  }\n  setNext(next) {\n    this._next = next\n  }\n  getRing() {\n    return this._edgeRing\n  }\n}\n","import Edge from '../../planargraph/Edge.js'\nexport default class PolygonizeEdge extends Edge {\n  constructor() {\n    super()\n    PolygonizeEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._line = null\n    const line = arguments[0]\n    this._line = line\n  }\n  getLine() {\n    return this._line\n  }\n}\n","import Location from '../../geom/Location.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport Position from '../../geomgraph/Position.js'\nimport Polygon from '../../geom/Polygon.js'\nimport MultiPolygon from '../../geom/MultiPolygon.js'\nimport MaximalEdgeRing from '../overlay/MaximalEdgeRing.js'\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport PlanarGraph from '../../geomgraph/PlanarGraph.js'\nexport default class ConnectedInteriorTester {\n  constructor() {\n    ConnectedInteriorTester.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geometryFactory = new GeometryFactory()\n    this._geomGraph = null\n    this._disconnectedRingcoord = null\n    const geomGraph = arguments[0]\n    this._geomGraph = geomGraph\n  }\n  static findDifferentPoint(coord, pt) {\n    for (let i = 0; i < coord.length; i++) \n      if (!coord[i].equals(pt)) return coord[i]\n    \n    return null\n  }\n  visitInteriorRing(ring, graph) {\n    if (ring.isEmpty()) return null\n    const pts = ring.getCoordinates()\n    const pt0 = pts[0]\n    const pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0)\n    const e = graph.findEdgeInSameDirection(pt0, pt1)\n    const de = graph.findEdgeEnd(e)\n    let intDe = null\n    if (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) \n      intDe = de\n    else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) \n      intDe = de.getSym()\n    \n    Assert.isTrue(intDe !== null, 'unable to find dirEdge with Interior on RHS')\n    this.visitLinkedDirectedEdges(intDe)\n  }\n  visitShellInteriors(g, graph) {\n    if (g instanceof Polygon) {\n      const p = g\n      this.visitInteriorRing(p.getExteriorRing(), graph)\n    }\n    if (g instanceof MultiPolygon) {\n      const mp = g\n      for (let i = 0; i < mp.getNumGeometries(); i++) {\n        const p = mp.getGeometryN(i)\n        this.visitInteriorRing(p.getExteriorRing(), graph)\n      }\n    }\n  }\n  getCoordinate() {\n    return this._disconnectedRingcoord\n  }\n  setInteriorEdgesInResult(graph) {\n    for (let it = graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) \n        de.setInResult(true)\n      \n    }\n  }\n  visitLinkedDirectedEdges(start) {\n    const startDe = start\n    let de = start\n    do {\n      Assert.isTrue(de !== null, 'found null Directed Edge')\n      de.setVisited(true)\n      de = de.getNext()\n    } while (de !== startDe)\n  }\n  buildEdgeRings(dirEdges) {\n    const edgeRings = new ArrayList()\n    for (let it = dirEdges.iterator(); it.hasNext(); ) {\n      const de = it.next()\n      if (de.isInResult() && de.getEdgeRing() === null) {\n        const er = new MaximalEdgeRing(de, this._geometryFactory)\n        er.linkDirectedEdgesForMinimalEdgeRings()\n        const minEdgeRings = er.buildMinimalRings()\n        edgeRings.addAll(minEdgeRings)\n      }\n    }\n    return edgeRings\n  }\n  hasUnvisitedShellEdge(edgeRings) {\n    for (let i = 0; i < edgeRings.size(); i++) {\n      const er = edgeRings.get(i)\n      if (er.isHole()) continue\n      const edges = er.getEdges()\n      let de = edges.get(0)\n      if (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue\n      for (let j = 0; j < edges.size(); j++) {\n        de = edges.get(j)\n        if (!de.isVisited()) {\n          this._disconnectedRingcoord = de.getCoordinate()\n          return true\n        }\n      }\n    }\n    return false\n  }\n  isInteriorsConnected() {\n    const splitEdges = new ArrayList()\n    this._geomGraph.computeSplitEdges(splitEdges)\n    const graph = new PlanarGraph(new OverlayNodeFactory())\n    graph.addEdges(splitEdges)\n    this.setInteriorEdgesInResult(graph)\n    graph.linkResultDirectedEdges()\n    const edgeRings = this.buildEdgeRings(graph.getEdgeEnds())\n    this.visitShellInteriors(this._geomGraph.getGeometry(), graph)\n    return !this.hasUnvisitedShellEdge(edgeRings)\n  }\n}\n","import EdgeEnd from '../../geomgraph/EdgeEnd.js'\nimport Label from '../../geomgraph/Label.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class EdgeEndBuilder {\n  createEdgeEndForNext(edge, l, eiCurr, eiNext) {\n    const iNext = eiCurr.segmentIndex + 1\n    if (iNext >= edge.getNumPoints() && eiNext === null) return null\n    let pNext = edge.getCoordinate(iNext)\n    if (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord\n    const e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()))\n    l.add(e)\n  }\n  createEdgeEndForPrev(edge, l, eiCurr, eiPrev) {\n    let iPrev = eiCurr.segmentIndex\n    if (eiCurr.dist === 0.0) {\n      if (iPrev === 0) return null\n      iPrev--\n    }\n    let pPrev = edge.getCoordinate(iPrev)\n    if (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord\n    const label = new Label(edge.getLabel())\n    label.flip()\n    const e = new EdgeEnd(edge, eiCurr.coord, pPrev, label)\n    l.add(e)\n  }\n  computeEdgeEnds() {\n    if (arguments.length === 1) {\n      const edges = arguments[0]\n      const l = new ArrayList()\n      for (let i = edges; i.hasNext(); ) {\n        const e = i.next()\n        this.computeEdgeEnds(e, l)\n      }\n      return l\n    } else if (arguments.length === 2) {\n      const edge = arguments[0], l = arguments[1]\n      const eiList = edge.getEdgeIntersectionList()\n      eiList.addEndpoints()\n      const it = eiList.iterator()\n      let eiPrev = null\n      let eiCurr = null\n      if (!it.hasNext()) return null\n      let eiNext = it.next()\n      do {\n        eiPrev = eiCurr\n        eiCurr = eiNext\n        eiNext = null\n        if (it.hasNext()) eiNext = it.next()\n        if (eiCurr !== null) {\n          this.createEdgeEndForPrev(edge, l, eiCurr, eiPrev)\n          this.createEdgeEndForNext(edge, l, eiCurr, eiNext)\n        }\n      } while (eiCurr !== null)\n    }\n  }\n}\n","import Location from '../../geom/Location.js'\nimport EdgeEnd from '../../geomgraph/EdgeEnd.js'\nimport Position from '../../geomgraph/Position.js'\nimport GeometryGraph from '../../geomgraph/GeometryGraph.js'\nimport Label from '../../geomgraph/Label.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Edge from '../../geomgraph/Edge.js'\nexport default class EdgeEndBundle extends EdgeEnd {\n  constructor() {\n    super()\n    EdgeEndBundle.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._edgeEnds = new ArrayList()\n    if (arguments.length === 1) {\n      const e = arguments[0]\n      EdgeEndBundle.constructor_.call(this, null, e)\n    } else if (arguments.length === 2) {\n      const boundaryNodeRule = arguments[0], e = arguments[1]\n      EdgeEnd.constructor_.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()))\n      this.insert(e)\n    }\n  }\n  insert(e) {\n    this._edgeEnds.add(e)\n  }\n  print(out) {\n    out.println('EdgeEndBundle--> Label: ' + this._label)\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const ee = it.next()\n      ee.print(out)\n      out.println()\n    }\n  }\n  iterator() {\n    return this._edgeEnds.iterator()\n  }\n  getEdgeEnds() {\n    return this._edgeEnds\n  }\n  computeLabelOn(geomIndex, boundaryNodeRule) {\n    let boundaryCount = 0\n    let foundInterior = false\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      const loc = e.getLabel().getLocation(geomIndex)\n      if (loc === Location.BOUNDARY) boundaryCount++\n      if (loc === Location.INTERIOR) foundInterior = true\n    }\n    let loc = Location.NONE\n    if (foundInterior) loc = Location.INTERIOR\n    if (boundaryCount > 0) \n      loc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount)\n    \n    this._label.setLocation(geomIndex, loc)\n  }\n  computeLabelSide(geomIndex, side) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.getLabel().isArea()) {\n        const loc = e.getLabel().getLocation(geomIndex, side)\n        if (loc === Location.INTERIOR) {\n          this._label.setLocation(geomIndex, side, Location.INTERIOR)\n          return null\n        } else if (loc === Location.EXTERIOR) {\n          this._label.setLocation(geomIndex, side, Location.EXTERIOR)\n        }\n      }\n    }\n  }\n  getLabel() {\n    return this._label\n  }\n  computeLabelSides(geomIndex) {\n    this.computeLabelSide(geomIndex, Position.LEFT)\n    this.computeLabelSide(geomIndex, Position.RIGHT)\n  }\n  updateIM(im) {\n    Edge.updateIM(this._label, im)\n  }\n  computeLabel(boundaryNodeRule) {\n    let isArea = false\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const e = it.next()\n      if (e.getLabel().isArea()) isArea = true\n    }\n    if (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE); else this._label = new Label(Location.NONE)\n    for (let i = 0; i < 2; i++) {\n      this.computeLabelOn(i, boundaryNodeRule)\n      if (isArea) this.computeLabelSides(i)\n    }\n  }\n}\n","import EdgeEndStar from '../../geomgraph/EdgeEndStar.js'\nimport EdgeEndBundle from './EdgeEndBundle.js'\nexport default class EdgeEndBundleStar extends EdgeEndStar {\n  constructor() {\n    super()\n  }\n  updateIM(im) {\n    for (let it = this.iterator(); it.hasNext(); ) {\n      const esb = it.next()\n      esb.updateIM(im)\n    }\n  }\n  insert(e) {\n    let eb = this._edgeMap.get(e)\n    if (eb === null) {\n      eb = new EdgeEndBundle(e)\n      this.insertEdgeEnd(e, eb)\n    } else {\n      eb.insert(e)\n    }\n  }\n}\n","import Node from '../../geomgraph/Node.js'\nexport default class RelateNode extends Node {\n  constructor() {\n    super()\n    RelateNode.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    const coord = arguments[0], edges = arguments[1]\n    Node.constructor_.call(this, coord, edges)\n  }\n  updateIMFromEdges(im) {\n    this._edges.updateIM(im)\n  }\n  computeIM(im) {\n    im.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0)\n  }\n}\n","import EdgeEndBundleStar from './EdgeEndBundleStar.js'\nimport RelateNode from './RelateNode.js'\nimport NodeFactory from '../../geomgraph/NodeFactory.js'\nexport default class RelateNodeFactory extends NodeFactory {\n  constructor() {\n    super()\n  }\n  createNode(coord) {\n    return new RelateNode(coord, new EdgeEndBundleStar())\n  }\n}\n","import Location from '../../geom/Location.js'\nimport EdgeEndBuilder from './EdgeEndBuilder.js'\nimport NodeMap from '../../geomgraph/NodeMap.js'\nimport RelateNodeFactory from './RelateNodeFactory.js'\nexport default class RelateNodeGraph {\n  constructor() {\n    RelateNodeGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._nodes = new NodeMap(new RelateNodeFactory())\n  }\n  insertEdgeEnds(ee) {\n    for (let i = ee.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      this._nodes.add(e)\n    }\n  }\n  getNodeIterator() {\n    return this._nodes.iterator()\n  }\n  copyNodesAndLabels(geomGraph, argIndex) {\n    for (let nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n      const graphNode = nodeIt.next()\n      const newNode = this._nodes.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n  build(geomGraph) {\n    this.computeIntersectionNodes(geomGraph, 0)\n    this.copyNodesAndLabels(geomGraph, 0)\n    const eeBuilder = new EdgeEndBuilder()\n    const eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator())\n    this.insertEdgeEnds(eeList)\n  }\n  computeIntersectionNodes(geomGraph, argIndex) {\n    for (let edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext(); ) {\n      const e = edgeIt.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        const n = this._nodes.addNode(ei.coord)\n        if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else \n        if (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR)\n        \n      }\n    }\n  }\n}\n","import RelateNodeGraph from '../relate/RelateNodeGraph.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nexport default class ConsistentAreaTester {\n  constructor() {\n    ConsistentAreaTester.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._geomGraph = null\n    this._nodeGraph = new RelateNodeGraph()\n    this._invalidPoint = null\n    const geomGraph = arguments[0]\n    this._geomGraph = geomGraph\n  }\n  isNodeEdgeAreaLabelsConsistent() {\n    for (let nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n      const node = nodeIt.next()\n      if (!node.getEdges().isAreaLabelsConsistent(this._geomGraph)) {\n        this._invalidPoint = node.getCoordinate().copy()\n        return false\n      }\n    }\n    return true\n  }\n  getInvalidPoint() {\n    return this._invalidPoint\n  }\n  hasDuplicateRings() {\n    for (let nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n      const node = nodeIt.next()\n      for (let i = node.getEdges().iterator(); i.hasNext(); ) {\n        const eeb = i.next()\n        if (eeb.getEdgeEnds().size() > 1) {\n          this._invalidPoint = eeb.getEdge().getCoordinate(0)\n          return true\n        }\n      }\n    }\n    return false\n  }\n  isNodeConsistentArea() {\n    const intersector = this._geomGraph.computeSelfNodes(this._li, true, true)\n    if (intersector.hasProperIntersection()) {\n      this._invalidPoint = intersector.getProperIntersectionPoint()\n      return false\n    }\n    this._nodeGraph.build(this._geomGraph)\n    return this.isNodeEdgeAreaLabelsConsistent()\n  }\n}\n","import STRtree from '../../index/strtree/STRtree.js'\nimport IsValidOp from './IsValidOp.js'\nimport PointLocation from '../../algorithm/PointLocation.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Envelope from '../../geom/Envelope.js'\nexport default class IndexedNestedRingTester {\n  constructor() {\n    IndexedNestedRingTester.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._graph = null\n    this._rings = new ArrayList()\n    this._totalEnv = new Envelope()\n    this._index = null\n    this._nestedPt = null\n    const graph = arguments[0]\n    this._graph = graph\n  }\n  buildIndex() {\n    this._index = new STRtree()\n    for (let i = 0; i < this._rings.size(); i++) {\n      const ring = this._rings.get(i)\n      const env = ring.getEnvelopeInternal()\n      this._index.insert(env, ring)\n    }\n  }\n  getNestedPoint() {\n    return this._nestedPt\n  }\n  isNonNested() {\n    this.buildIndex()\n    for (let i = 0; i < this._rings.size(); i++) {\n      const innerRing = this._rings.get(i)\n      const innerRingPts = innerRing.getCoordinates()\n      const results = this._index.query(innerRing.getEnvelopeInternal())\n      for (let j = 0; j < results.size(); j++) {\n        const searchRing = results.get(j)\n        const searchRingPts = searchRing.getCoordinates()\n        if (innerRing === searchRing) continue\n        if (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue\n        const innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this._graph)\n        if (innerRingPt === null) continue\n        const isInside = PointLocation.isInRing(innerRingPt, searchRingPts)\n        if (isInside) {\n          this._nestedPt = innerRingPt\n          return false\n        }\n      }\n    }\n    return true\n  }\n  add(ring) {\n    this._rings.add(ring)\n    this._totalEnv.expandToInclude(ring.getEnvelopeInternal())\n  }\n}\n","export default class TopologyValidationError {\n  constructor() {\n    TopologyValidationError.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._errorType = null\n    this._pt = null\n    if (arguments.length === 1) {\n      const errorType = arguments[0]\n      TopologyValidationError.constructor_.call(this, errorType, null)\n    } else if (arguments.length === 2) {\n      const errorType = arguments[0], pt = arguments[1]\n      this._errorType = errorType\n      if (pt !== null) this._pt = pt.copy()\n    }\n  }\n  getErrorType() {\n    return this._errorType\n  }\n  getMessage() {\n    return TopologyValidationError.errMsg[this._errorType]\n  }\n  getCoordinate() {\n    return this._pt\n  }\n  toString() {\n    let locStr = ''\n    if (this._pt !== null) locStr = ' at or near point ' + this._pt\n    return this.getMessage() + locStr\n  }\n}\nTopologyValidationError.ERROR = 0\nTopologyValidationError.REPEATED_POINT = 1\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2\nTopologyValidationError.NESTED_HOLES = 3\nTopologyValidationError.DISCONNECTED_INTERIOR = 4\nTopologyValidationError.SELF_INTERSECTION = 5\nTopologyValidationError.RING_SELF_INTERSECTION = 6\nTopologyValidationError.NESTED_SHELLS = 7\nTopologyValidationError.DUPLICATE_RINGS = 8\nTopologyValidationError.TOO_FEW_POINTS = 9\nTopologyValidationError.INVALID_COORDINATE = 10\nTopologyValidationError.RING_NOT_CLOSED = 11\nTopologyValidationError.errMsg = ['Topology Validation Error', 'Repeated Point', 'Hole lies outside shell', 'Holes are nested', 'Interior is disconnected', 'Self-intersection', 'Ring Self-intersection', 'Nested shells', 'Duplicate Rings', 'Too few distinct points in geometry component', 'Invalid Coordinate', 'Ring is not closed']\n","import Location from '../../geom/Location.js'\nimport TreeSet from '../../../../../java/util/TreeSet.js'\nimport LineString from '../../geom/LineString.js'\nimport Geometry from '../../geom/Geometry.js'\nimport ConnectedInteriorTester from './ConnectedInteriorTester.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Point from '../../geom/Point.js'\nimport Polygon from '../../geom/Polygon.js'\nimport MultiPoint from '../../geom/MultiPoint.js'\nimport PointLocation from '../../algorithm/PointLocation.js'\nimport LinearRing from '../../geom/LinearRing.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport GeometryGraph from '../../geomgraph/GeometryGraph.js'\nimport MultiPolygon from '../../geom/MultiPolygon.js'\nimport ConsistentAreaTester from './ConsistentAreaTester.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nimport UnsupportedOperationException from '../../../../../java/lang/UnsupportedOperationException.js'\nimport IndexedNestedRingTester from './IndexedNestedRingTester.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport TopologyValidationError from './TopologyValidationError.js'\nimport IndexedPointInAreaLocator from '../../algorithm/locate/IndexedPointInAreaLocator.js'\nimport Assert from '../../util/Assert.js'\nexport default class IsValidOp {\n  constructor() {\n    IsValidOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parentGeometry = null\n    this._isSelfTouchingRingFormingHoleValid = false\n    this._validErr = null\n    const parentGeometry = arguments[0]\n    this._parentGeometry = parentGeometry\n  }\n  static findPtNotNode(testCoords, searchRing, graph) {\n    const searchEdge = graph.findEdge(searchRing)\n    const eiList = searchEdge.getEdgeIntersectionList()\n    for (let i = 0; i < testCoords.length; i++) {\n      const pt = testCoords[i]\n      if (!eiList.isIntersection(pt)) return pt\n    }\n    return null\n  }\n  static isValid() {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      const isValidOp = new IsValidOp(geom)\n      return isValidOp.isValid()\n    } else if (arguments[0] instanceof Coordinate) {\n      const coord = arguments[0]\n      if (Double.isNaN(coord.x)) return false\n      if (Double.isInfinite(coord.x)) return false\n      if (Double.isNaN(coord.y)) return false\n      if (Double.isInfinite(coord.y)) return false\n      return true\n    }\n  }\n  checkInvalidCoordinates() {\n    if (arguments[0] instanceof Array) {\n      const coords = arguments[0]\n      for (let i = 0; i < coords.length; i++) \n        if (!IsValidOp.isValid(coords[i])) {\n          this._validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i])\n          return null\n        }\n      \n    } else if (arguments[0] instanceof Polygon) {\n      const poly = arguments[0]\n      this.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates())\n      if (this._validErr !== null) return null\n      for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n        this.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates())\n        if (this._validErr !== null) return null\n      }\n    }\n  }\n  checkHolesNotNested(p, graph) {\n    if (p.getNumInteriorRing() <= 0) return null\n    const nestedTester = new IndexedNestedRingTester(graph)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const innerHole = p.getInteriorRingN(i)\n      if (innerHole.isEmpty()) continue\n      nestedTester.add(innerHole)\n    }\n    const isNonNested = nestedTester.isNonNested()\n    if (!isNonNested) \n      this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint())\n    \n  }\n  checkConsistentArea(graph) {\n    const cat = new ConsistentAreaTester(graph)\n    const isValidArea = cat.isNodeConsistentArea()\n    if (!isValidArea) {\n      this._validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint())\n      return null\n    }\n    if (cat.hasDuplicateRings()) \n      this._validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint())\n    \n  }\n  isValid() {\n    this.checkValid(this._parentGeometry)\n    return this._validErr === null\n  }\n  checkShellInsideHole(shell, hole, graph) {\n    const shellPts = shell.getCoordinates()\n    const holePts = hole.getCoordinates()\n    const shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph)\n    if (shellPt !== null) {\n      const insideHole = PointLocation.isInRing(shellPt, holePts)\n      if (!insideHole) \n        return shellPt\n      \n    }\n    const holePt = IsValidOp.findPtNotNode(holePts, shell, graph)\n    if (holePt !== null) {\n      const insideShell = PointLocation.isInRing(holePt, shellPts)\n      if (insideShell) \n        return holePt\n      \n      return null\n    }\n    Assert.shouldNeverReachHere('points in shell and hole appear to be equal')\n    return null\n  }\n  checkNoSelfIntersectingRings(graph) {\n    for (let i = graph.getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      this.checkNoSelfIntersectingRing(e.getEdgeIntersectionList())\n      if (this._validErr !== null) return null\n    }\n  }\n  checkConnectedInteriors(graph) {\n    const cit = new ConnectedInteriorTester(graph)\n    if (!cit.isInteriorsConnected()) this._validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate())\n  }\n  checkNoSelfIntersectingRing(eiList) {\n    const nodeSet = new TreeSet()\n    let isFirst = true\n    for (let i = eiList.iterator(); i.hasNext(); ) {\n      const ei = i.next()\n      if (isFirst) {\n        isFirst = false\n        continue\n      }\n      if (nodeSet.contains(ei.coord)) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord)\n        return null\n      } else {\n        nodeSet.add(ei.coord)\n      }\n    }\n  }\n  checkHolesInShell(p, graph) {\n    if (p.getNumInteriorRing() <= 0) return null\n    const shell = p.getExteriorRing()\n    const isShellEmpty = shell.isEmpty()\n    const pir = new IndexedPointInAreaLocator(shell)\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      let holePt = null\n      if (hole.isEmpty()) continue\n      holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph)\n      if (holePt === null) return null\n      const outside = isShellEmpty || Location.EXTERIOR === pir.locate(holePt)\n      if (outside) {\n        this._validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt)\n        return null\n      }\n    }\n  }\n  checkTooFewPoints(graph) {\n    if (graph.hasTooFewPoints()) {\n      this._validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint())\n      return null\n    }\n  }\n  getValidationError() {\n    this.checkValid(this._parentGeometry)\n    return this._validErr\n  }\n  checkValid() {\n    if (arguments[0] instanceof Point) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g.getCoordinates())\n    } else if (arguments[0] instanceof MultiPoint) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g.getCoordinates())\n    } else if (arguments[0] instanceof LinearRing) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g.getCoordinates())\n      if (this._validErr !== null) return null\n      this.checkClosedRing(g)\n      if (this._validErr !== null) return null\n      const graph = new GeometryGraph(0, g)\n      this.checkTooFewPoints(graph)\n      if (this._validErr !== null) return null\n      const li = new RobustLineIntersector()\n      graph.computeSelfNodes(li, true, true)\n      this.checkNoSelfIntersectingRings(graph)\n    } else if (arguments[0] instanceof LineString) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g.getCoordinates())\n      if (this._validErr !== null) return null\n      const graph = new GeometryGraph(0, g)\n      this.checkTooFewPoints(graph)\n    } else if (arguments[0] instanceof Polygon) {\n      const g = arguments[0]\n      this.checkInvalidCoordinates(g)\n      if (this._validErr !== null) return null\n      this.checkClosedRings(g)\n      if (this._validErr !== null) return null\n      const graph = new GeometryGraph(0, g)\n      this.checkTooFewPoints(graph)\n      if (this._validErr !== null) return null\n      this.checkConsistentArea(graph)\n      if (this._validErr !== null) return null\n      if (!this._isSelfTouchingRingFormingHoleValid) {\n        this.checkNoSelfIntersectingRings(graph)\n        if (this._validErr !== null) return null\n      }\n      this.checkHolesInShell(g, graph)\n      if (this._validErr !== null) return null\n      this.checkHolesNotNested(g, graph)\n      if (this._validErr !== null) return null\n      this.checkConnectedInteriors(graph)\n    } else if (arguments[0] instanceof MultiPolygon) {\n      const g = arguments[0]\n      for (let i = 0; i < g.getNumGeometries(); i++) {\n        const p = g.getGeometryN(i)\n        this.checkInvalidCoordinates(p)\n        if (this._validErr !== null) return null\n        this.checkClosedRings(p)\n        if (this._validErr !== null) return null\n      }\n      const graph = new GeometryGraph(0, g)\n      this.checkTooFewPoints(graph)\n      if (this._validErr !== null) return null\n      this.checkConsistentArea(graph)\n      if (this._validErr !== null) return null\n      if (!this._isSelfTouchingRingFormingHoleValid) {\n        this.checkNoSelfIntersectingRings(graph)\n        if (this._validErr !== null) return null\n      }\n      for (let i = 0; i < g.getNumGeometries(); i++) {\n        const p = g.getGeometryN(i)\n        this.checkHolesInShell(p, graph)\n        if (this._validErr !== null) return null\n      }\n      for (let i = 0; i < g.getNumGeometries(); i++) {\n        const p = g.getGeometryN(i)\n        this.checkHolesNotNested(p, graph)\n        if (this._validErr !== null) return null\n      }\n      this.checkShellsNotNested(g, graph)\n      if (this._validErr !== null) return null\n      this.checkConnectedInteriors(graph)\n    } else if (arguments[0] instanceof GeometryCollection) {\n      const gc = arguments[0]\n      for (let i = 0; i < gc.getNumGeometries(); i++) {\n        const g = gc.getGeometryN(i)\n        this.checkValid(g)\n        if (this._validErr !== null) return null\n      }\n    } else if (arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      this._validErr = null\n      if (g.isEmpty()) return null\n      if (g instanceof Point) this.checkValid(g); else if (g instanceof MultiPoint) this.checkValid(g); else if (g instanceof LinearRing) this.checkValid(g); else if (g instanceof LineString) this.checkValid(g); else if (g instanceof Polygon) this.checkValid(g); else if (g instanceof MultiPolygon) this.checkValid(g); else if (g instanceof GeometryCollection) this.checkValid(g); else throw new UnsupportedOperationException(g.getGeometryType())\n    }\n  }\n  setSelfTouchingRingFormingHoleValid(isValid) {\n    this._isSelfTouchingRingFormingHoleValid = isValid\n  }\n  checkShellNotNested(shell, p, graph) {\n    const shellPts = shell.getCoordinates()\n    const polyShell = p.getExteriorRing()\n    if (polyShell.isEmpty()) return null\n    const polyPts = polyShell.getCoordinates()\n    const shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph)\n    if (shellPt === null) return null\n    const insidePolyShell = PointLocation.isInRing(shellPt, polyPts)\n    if (!insidePolyShell) return null\n    if (p.getNumInteriorRing() <= 0) {\n      this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt)\n      return null\n    }\n    let badNestedPt = null\n    for (let i = 0; i < p.getNumInteriorRing(); i++) {\n      const hole = p.getInteriorRingN(i)\n      badNestedPt = this.checkShellInsideHole(shell, hole, graph)\n      if (badNestedPt === null) return null\n    }\n    this._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt)\n  }\n  checkClosedRings(poly) {\n    this.checkClosedRing(poly.getExteriorRing())\n    if (this._validErr !== null) return null\n    for (let i = 0; i < poly.getNumInteriorRing(); i++) {\n      this.checkClosedRing(poly.getInteriorRingN(i))\n      if (this._validErr !== null) return null\n    }\n  }\n  checkClosedRing(ring) {\n    if (ring.isEmpty()) return null\n    if (!ring.isClosed()) {\n      let pt = null\n      if (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0)\n      this._validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt)\n    }\n  }\n  checkShellsNotNested(mp, graph) {\n    for (let i = 0; i < mp.getNumGeometries(); i++) {\n      const p = mp.getGeometryN(i)\n      const shell = p.getExteriorRing()\n      for (let j = 0; j < mp.getNumGeometries(); j++) {\n        if (i === j) continue\n        const p2 = mp.getGeometryN(j)\n        this.checkShellNotNested(shell, p2, graph)\n        if (this._validErr !== null) return null\n      }\n    }\n  }\n}\n","import Location from '../../geom/Location.js'\nimport CoordinateList from '../../geom/CoordinateList.js'\nimport WKTWriter from '../../io/WKTWriter.js'\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence.js'\nimport IsValidOp from '../valid/IsValidOp.js'\nimport LinearRing from '../../geom/LinearRing.js'\nimport Exception from '../../../../../java/lang/Exception.js'\nimport Orientation from '../../algorithm/Orientation.js'\nimport System from '../../../../../java/lang/System.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Comparator from '../../../../../java/util/Comparator.js'\nimport IndexedPointInAreaLocator from '../../algorithm/locate/IndexedPointInAreaLocator.js'\nimport Assert from '../../util/Assert.js'\nexport default class EdgeRing {\n  constructor() {\n    EdgeRing.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._factory = null\n    this._deList = new ArrayList()\n    this._lowestEdge = null\n    this._ring = null\n    this._locator = null\n    this._ringPts = null\n    this._holes = null\n    this._shell = null\n    this._isHole = null\n    this._isProcessed = false\n    this._isIncludedSet = false\n    this._isIncluded = false\n    const factory = arguments[0]\n    this._factory = factory\n  }\n  static findDirEdgesInRing(startDE) {\n    let de = startDE\n    const edges = new ArrayList()\n    do {\n      edges.add(de)\n      de = de.getNext()\n      Assert.isTrue(de !== null, 'found null DE in ring')\n      Assert.isTrue(de === startDE || !de.isInRing(), 'found DE already in ring')\n    } while (de !== startDE)\n    return edges\n  }\n  static addEdge(coords, isForward, coordList) {\n    if (isForward) \n      for (let i = 0; i < coords.length; i++) \n        coordList.add(coords[i], false)\n      \n    else \n      for (let i = coords.length - 1; i >= 0; i--) \n        coordList.add(coords[i], false)\n      \n    \n  }\n  static findEdgeRingContaining(testEr, erList) {\n    const testRing = testEr.getRing()\n    const testEnv = testRing.getEnvelopeInternal()\n    let testPt = testRing.getCoordinateN(0)\n    let minRing = null\n    let minRingEnv = null\n    for (let it = erList.iterator(); it.hasNext(); ) {\n      const tryEdgeRing = it.next()\n      const tryRing = tryEdgeRing.getRing()\n      const tryShellEnv = tryRing.getEnvelopeInternal()\n      if (tryShellEnv.equals(testEnv)) continue\n      if (!tryShellEnv.contains(testEnv)) continue\n      testPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryEdgeRing.getCoordinates())\n      const isContained = tryEdgeRing.isInRing(testPt)\n      if (isContained) \n        if (minRing === null || minRingEnv.contains(tryShellEnv)) {\n          minRing = tryEdgeRing\n          minRingEnv = minRing.getRing().getEnvelopeInternal()\n        }\n      \n    }\n    return minRing\n  }\n  isIncluded() {\n    return this._isIncluded\n  }\n  getCoordinates() {\n    if (this._ringPts === null) {\n      const coordList = new CoordinateList()\n      for (let i = this._deList.iterator(); i.hasNext(); ) {\n        const de = i.next()\n        const edge = de.getEdge()\n        EdgeRing.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList)\n      }\n      this._ringPts = coordList.toCoordinateArray()\n    }\n    return this._ringPts\n  }\n  isIncludedSet() {\n    return this._isIncludedSet\n  }\n  isValid() {\n    this.getCoordinates()\n    if (this._ringPts.length <= 3) return false\n    this.getRing()\n    return IsValidOp.isValid(this._ring)\n  }\n  build(startDE) {\n    let de = startDE\n    do {\n      this.add(de)\n      de.setRing(this)\n      de = de.getNext()\n      Assert.isTrue(de !== null, 'found null DE in ring')\n      Assert.isTrue(de === startDE || !de.isInRing(), 'found DE already in ring')\n    } while (de !== startDE)\n  }\n  isInRing(pt) {\n    return Location.EXTERIOR !== this.getLocator().locate(pt)\n  }\n  isOuterHole() {\n    if (!this._isHole) return false\n    return !this.hasShell()\n  }\n  getPolygon() {\n    let holeLR = null\n    if (this._holes !== null) {\n      holeLR = new Array(this._holes.size()).fill(null)\n      for (let i = 0; i < this._holes.size(); i++) \n        holeLR[i] = this._holes.get(i)\n      \n    }\n    const poly = this._factory.createPolygon(this._ring, holeLR)\n    return poly\n  }\n  isHole() {\n    return this._isHole\n  }\n  isProcessed() {\n    return this._isProcessed\n  }\n  addHole() {\n    if (arguments[0] instanceof LinearRing) {\n      const hole = arguments[0]\n      if (this._holes === null) this._holes = new ArrayList()\n      this._holes.add(hole)\n    } else if (arguments[0] instanceof EdgeRing) {\n      const holeER = arguments[0]\n      holeER.setShell(this)\n      const hole = holeER.getRing()\n      if (this._holes === null) this._holes = new ArrayList()\n      this._holes.add(hole)\n    }\n  }\n  setIncluded(isIncluded) {\n    this._isIncluded = isIncluded\n    this._isIncludedSet = true\n  }\n  getOuterHole() {\n    if (this.isHole()) return null\n    for (let i = 0; i < this._deList.size(); i++) {\n      const de = this._deList.get(i)\n      const adjRing = de.getSym().getRing()\n      if (adjRing.isOuterHole()) return adjRing\n    }\n    return null\n  }\n  computeHole() {\n    const ring = this.getRing()\n    this._isHole = Orientation.isCCW(ring.getCoordinates())\n  }\n  hasShell() {\n    return this._shell !== null\n  }\n  isOuterShell() {\n    return this.getOuterHole() !== null\n  }\n  getLineString() {\n    this.getCoordinates()\n    return this._factory.createLineString(this._ringPts)\n  }\n  toString() {\n    return WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()))\n  }\n  getLocator() {\n    if (this._locator === null) \n      this._locator = new IndexedPointInAreaLocator(this.getRing())\n    \n    return this._locator\n  }\n  getShell() {\n    if (this.isHole()) return this._shell\n    return this\n  }\n  add(de) {\n    this._deList.add(de)\n  }\n  getRing() {\n    if (this._ring !== null) return this._ring\n    this.getCoordinates()\n    if (this._ringPts.length < 3) System.out.println(this._ringPts)\n    try {\n      this._ring = this._factory.createLinearRing(this._ringPts)\n    } catch (ex) {\n      if (ex instanceof Exception) \n        System.out.println(this._ringPts)\n      else throw ex\n    } finally {}\n    return this._ring\n  }\n  updateIncluded() {\n    if (this.isHole()) return null\n    for (let i = 0; i < this._deList.size(); i++) {\n      const de = this._deList.get(i)\n      const adjShell = de.getSym().getRing().getShell()\n      if (adjShell !== null && adjShell.isIncludedSet()) {\n        this.setIncluded(!adjShell.isIncluded())\n        return null\n      }\n    }\n  }\n  setShell(shell) {\n    this._shell = shell\n  }\n  setProcessed(isProcessed) {\n    this._isProcessed = isProcessed\n  }\n}\nclass EnvelopeComparator {\n  compare(obj0, obj1) {\n    const r0 = obj0\n    const r1 = obj1\n    return r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope())\n  }\n  get interfaces_() {\n    return [Comparator]\n  }\n}\nEdgeRing.EnvelopeComparator = EnvelopeComparator\n","import PolygonizeDirectedEdge from './PolygonizeDirectedEdge.js'\nimport HashSet from '../../../../../java/util/HashSet.js'\nimport Stack from '../../../../../java/util/Stack.js'\nimport Node from '../../planargraph/Node.js'\nimport PolygonizeEdge from './PolygonizeEdge.js'\nimport EdgeRing from './EdgeRing.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Assert from '../../util/Assert.js'\nimport PlanarGraph from '../../planargraph/PlanarGraph.js'\nexport default class PolygonizeGraph extends PlanarGraph {\n  constructor() {\n    super()\n    PolygonizeGraph.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._factory = null\n    const factory = arguments[0]\n    this._factory = factory\n  }\n  static findLabeledEdgeRings(dirEdges) {\n    const edgeRingStarts = new ArrayList()\n    let currLabel = 1\n    for (let i = dirEdges.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (de.isMarked()) continue\n      if (de.getLabel() >= 0) continue\n      edgeRingStarts.add(de)\n      const edges = EdgeRing.findDirEdgesInRing(de)\n      PolygonizeGraph.label(edges, currLabel)\n      currLabel++\n    }\n    return edgeRingStarts\n  }\n  static getDegreeNonDeleted(node) {\n    const edges = node.getOutEdges().getEdges()\n    let degree = 0\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (!de.isMarked()) degree++\n    }\n    return degree\n  }\n  static deleteAllEdges(node) {\n    const edges = node.getOutEdges().getEdges()\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      de.setMarked(true)\n      const sym = de.getSym()\n      if (sym !== null) sym.setMarked(true)\n    }\n  }\n  static label(dirEdges, label) {\n    for (let i = dirEdges.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      de.setLabel(label)\n    }\n  }\n  static computeNextCWEdges(node) {\n    const deStar = node.getOutEdges()\n    let startDE = null\n    let prevDE = null\n    for (let i = deStar.getEdges().iterator(); i.hasNext(); ) {\n      const outDE = i.next()\n      if (outDE.isMarked()) continue\n      if (startDE === null) startDE = outDE\n      if (prevDE !== null) {\n        const sym = prevDE.getSym()\n        sym.setNext(outDE)\n      }\n      prevDE = outDE\n    }\n    if (prevDE !== null) {\n      const sym = prevDE.getSym()\n      sym.setNext(startDE)\n    }\n  }\n  static computeNextCCWEdges(node, label) {\n    const deStar = node.getOutEdges()\n    let firstOutDE = null\n    let prevInDE = null\n    const edges = deStar.getEdges()\n    for (let i = edges.size() - 1; i >= 0; i--) {\n      const de = edges.get(i)\n      const sym = de.getSym()\n      let outDE = null\n      if (de.getLabel() === label) outDE = de\n      let inDE = null\n      if (sym.getLabel() === label) inDE = sym\n      if (outDE === null && inDE === null) continue\n      if (inDE !== null) \n        prevInDE = inDE\n      \n      if (outDE !== null) {\n        if (prevInDE !== null) {\n          prevInDE.setNext(outDE)\n          prevInDE = null\n        }\n        if (firstOutDE === null) firstOutDE = outDE\n      }\n    }\n    if (prevInDE !== null) {\n      Assert.isTrue(firstOutDE !== null)\n      prevInDE.setNext(firstOutDE)\n    }\n  }\n  static getDegree(node, label) {\n    const edges = node.getOutEdges().getEdges()\n    let degree = 0\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (de.getLabel() === label) degree++\n    }\n    return degree\n  }\n  static findIntersectionNodes(startDE, label) {\n    let de = startDE\n    let intNodes = null\n    do {\n      const node = de.getFromNode()\n      if (PolygonizeGraph.getDegree(node, label) > 1) {\n        if (intNodes === null) intNodes = new ArrayList()\n        intNodes.add(node)\n      }\n      de = de.getNext()\n      Assert.isTrue(de !== null, 'found null DE in ring')\n      Assert.isTrue(de === startDE || !de.isInRing(), 'found DE already in ring')\n    } while (de !== startDE)\n    return intNodes\n  }\n  findEdgeRing(startDE) {\n    const er = new EdgeRing(this._factory)\n    er.build(startDE)\n    return er\n  }\n  computeDepthParity() {\n    if (arguments.length === 0) {\n      while (true) {\n        const de = null\n        if (de === null) return null\n        this.computeDepthParity(de)\n      }\n    } else if (arguments.length === 1) {\n      const de = arguments[0]\n    }\n  }\n  computeNextCWEdges() {\n    for (let iNode = this.nodeIterator(); iNode.hasNext(); ) {\n      const node = iNode.next()\n      PolygonizeGraph.computeNextCWEdges(node)\n    }\n  }\n  addEdge(line) {\n    if (line.isEmpty()) \n      return null\n    \n    const linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates())\n    if (linePts.length < 2) \n      return null\n    \n    const startPt = linePts[0]\n    const endPt = linePts[linePts.length - 1]\n    const nStart = this.getNode(startPt)\n    const nEnd = this.getNode(endPt)\n    const de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true)\n    const de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false)\n    const edge = new PolygonizeEdge(line)\n    edge.setDirectedEdges(de0, de1)\n    this.add(edge)\n  }\n  deleteCutEdges() {\n    this.computeNextCWEdges()\n    PolygonizeGraph.findLabeledEdgeRings(this._dirEdges)\n    const cutLines = new ArrayList()\n    for (let i = this._dirEdges.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (de.isMarked()) continue\n      const sym = de.getSym()\n      if (de.getLabel() === sym.getLabel()) {\n        de.setMarked(true)\n        sym.setMarked(true)\n        const e = de.getEdge()\n        cutLines.add(e.getLine())\n      }\n    }\n    return cutLines\n  }\n  getEdgeRings() {\n    this.computeNextCWEdges()\n    PolygonizeGraph.label(this._dirEdges, -1)\n    const maximalRings = PolygonizeGraph.findLabeledEdgeRings(this._dirEdges)\n    this.convertMaximalToMinimalEdgeRings(maximalRings)\n    const edgeRingList = new ArrayList()\n    for (let i = this._dirEdges.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      if (de.isMarked()) continue\n      if (de.isInRing()) continue\n      const er = this.findEdgeRing(de)\n      edgeRingList.add(er)\n    }\n    return edgeRingList\n  }\n  getNode(pt) {\n    let node = this.findNode(pt)\n    if (node === null) {\n      node = new Node(pt)\n      this.add(node)\n    }\n    return node\n  }\n  convertMaximalToMinimalEdgeRings(ringEdges) {\n    for (let i = ringEdges.iterator(); i.hasNext(); ) {\n      const de = i.next()\n      const label = de.getLabel()\n      const intNodes = PolygonizeGraph.findIntersectionNodes(de, label)\n      if (intNodes === null) continue\n      for (let iNode = intNodes.iterator(); iNode.hasNext(); ) {\n        const node = iNode.next()\n        PolygonizeGraph.computeNextCCWEdges(node, label)\n      }\n    }\n  }\n  deleteDangles() {\n    const nodesToRemove = this.findNodesOfDegree(1)\n    const dangleLines = new HashSet()\n    const nodeStack = new Stack()\n    for (let i = nodesToRemove.iterator(); i.hasNext(); ) \n      nodeStack.push(i.next())\n    \n    while (!nodeStack.isEmpty()) {\n      const node = nodeStack.pop()\n      PolygonizeGraph.deleteAllEdges(node)\n      const nodeOutEdges = node.getOutEdges().getEdges()\n      for (let i = nodeOutEdges.iterator(); i.hasNext(); ) {\n        const de = i.next()\n        de.setMarked(true)\n        const sym = de.getSym()\n        if (sym !== null) sym.setMarked(true)\n        const e = de.getEdge()\n        dangleLines.add(e.getLine())\n        const toNode = de.getToNode()\n        if (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode)\n      }\n    }\n    return dangleLines\n  }\n}\n","import STRtree from '../../index/strtree/STRtree.js'\nimport EdgeRing from './EdgeRing.js'\nexport default class HoleAssigner {\n  constructor() {\n    HoleAssigner.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._shells = null\n    this._shellIndex = null\n    const shells = arguments[0]\n    this._shells = shells\n    this.buildIndex()\n  }\n  static assignHolesToShells(holes, shells) {\n    const assigner = new HoleAssigner(shells)\n    assigner.assignHolesToShells(holes)\n  }\n  assignHolesToShells(holeList) {\n    for (let i = holeList.iterator(); i.hasNext(); ) {\n      const holeER = i.next()\n      this.assignHoleToShell(holeER)\n    }\n  }\n  buildIndex() {\n    this._shellIndex = new STRtree()\n    for (const shell of this._shells) \n      this._shellIndex.insert(shell.getRing().getEnvelopeInternal(), shell)\n    \n  }\n  queryOverlappingShells(ringEnv) {\n    return this._shellIndex.query(ringEnv)\n  }\n  findShellContaining(testEr) {\n    const testEnv = testEr.getRing().getEnvelopeInternal()\n    const candidateShells = this.queryOverlappingShells(testEnv)\n    return EdgeRing.findEdgeRingContaining(testEr, candidateShells)\n  }\n  assignHoleToShell(holeER) {\n    const shell = this.findShellContaining(holeER)\n    if (shell !== null) \n      shell.addHole(holeER)\n    \n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport Geometry from '../../geom/Geometry.js'\nimport PolygonizeGraph from './PolygonizeGraph.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport Collections from '../../../../../java/util/Collections.js'\nimport EdgeRing from './EdgeRing.js'\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport HoleAssigner from './HoleAssigner.js'\nexport default class Polygonizer {\n  constructor() {\n    Polygonizer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._lineStringAdder = new LineStringAdder(this)\n    this._graph = null\n    this._dangles = new ArrayList()\n    this._cutEdges = new ArrayList()\n    this._invalidRingLines = new ArrayList()\n    this._holeList = null\n    this._shellList = null\n    this._polyList = null\n    this._isCheckingRingsValid = true\n    this._extractOnlyPolygonal = null\n    this._geomFactory = null\n    if (arguments.length === 0) {\n      Polygonizer.constructor_.call(this, false)\n    } else if (arguments.length === 1) {\n      const extractOnlyPolygonal = arguments[0]\n      this._extractOnlyPolygonal = extractOnlyPolygonal\n    }\n  }\n  static extractPolygons(shellList, includeAll) {\n    const polyList = new ArrayList()\n    for (let i = shellList.iterator(); i.hasNext(); ) {\n      const er = i.next()\n      if (includeAll || er.isIncluded()) \n        polyList.add(er.getPolygon())\n      \n    }\n    return polyList\n  }\n  static findOuterShells(shellList) {\n    for (let i = shellList.iterator(); i.hasNext(); ) {\n      const er = i.next()\n      const outerHoleER = er.getOuterHole()\n      if (outerHoleER !== null && !outerHoleER.isProcessed()) {\n        er.setIncluded(true)\n        outerHoleER.setProcessed(true)\n      }\n    }\n  }\n  static findDisjointShells(shellList) {\n    Polygonizer.findOuterShells(shellList)\n    let isMoreToScan = null\n    do {\n      isMoreToScan = false\n      for (let i = shellList.iterator(); i.hasNext(); ) {\n        const er = i.next()\n        if (er.isIncludedSet()) continue\n        er.updateIncluded()\n        if (!er.isIncludedSet()) \n          isMoreToScan = true\n        \n      }\n    } while (isMoreToScan)\n  }\n  getGeometry() {\n    if (this._geomFactory === null) this._geomFactory = new GeometryFactory()\n    this.polygonize()\n    if (this._extractOnlyPolygonal) \n      return this._geomFactory.buildGeometry(this._polyList)\n    \n    return this._geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this._polyList))\n  }\n  getInvalidRingLines() {\n    this.polygonize()\n    return this._invalidRingLines\n  }\n  findValidRings(edgeRingList, validEdgeRingList, invalidRingList) {\n    for (let i = edgeRingList.iterator(); i.hasNext(); ) {\n      const er = i.next()\n      if (er.isValid()) validEdgeRingList.add(er); else invalidRingList.add(er.getLineString())\n    }\n  }\n  polygonize() {\n    if (this._polyList !== null) return null\n    this._polyList = new ArrayList()\n    if (this._graph === null) return null\n    this._dangles = this._graph.deleteDangles()\n    this._cutEdges = this._graph.deleteCutEdges()\n    const edgeRingList = this._graph.getEdgeRings()\n    let validEdgeRingList = new ArrayList()\n    this._invalidRingLines = new ArrayList()\n    if (this._isCheckingRingsValid) \n      this.findValidRings(edgeRingList, validEdgeRingList, this._invalidRingLines)\n    else \n      validEdgeRingList = edgeRingList\n    \n    this.findShellsAndHoles(validEdgeRingList)\n    HoleAssigner.assignHolesToShells(this._holeList, this._shellList)\n    Collections.sort(this._shellList, new EdgeRing.EnvelopeComparator())\n    let includeAll = true\n    if (this._extractOnlyPolygonal) {\n      Polygonizer.findDisjointShells(this._shellList)\n      includeAll = false\n    }\n    this._polyList = Polygonizer.extractPolygons(this._shellList, includeAll)\n  }\n  getDangles() {\n    this.polygonize()\n    return this._dangles\n  }\n  getCutEdges() {\n    this.polygonize()\n    return this._cutEdges\n  }\n  getPolygons() {\n    this.polygonize()\n    return this._polyList\n  }\n  add() {\n    if (hasInterface(arguments[0], Collection)) {\n      const geomList = arguments[0]\n      for (let i = geomList.iterator(); i.hasNext(); ) {\n        const geometry = i.next()\n        this.add(geometry)\n      }\n    } else if (arguments[0] instanceof LineString) {\n      const line = arguments[0]\n      this._geomFactory = line.getFactory()\n      if (this._graph === null) this._graph = new PolygonizeGraph(this._geomFactory)\n      this._graph.addEdge(line)\n    } else if (arguments[0] instanceof Geometry) {\n      const g = arguments[0]\n      g.apply(this._lineStringAdder)\n    }\n  }\n  setCheckRingsValid(isCheckingRingsValid) {\n    this._isCheckingRingsValid = isCheckingRingsValid\n  }\n  findShellsAndHoles(edgeRingList) {\n    this._holeList = new ArrayList()\n    this._shellList = new ArrayList()\n    for (let i = edgeRingList.iterator(); i.hasNext(); ) {\n      const er = i.next()\n      er.computeHole()\n      if (er.isHole()) this._holeList.add(er); else this._shellList.add(er)\n    }\n  }\n}\nclass LineStringAdder {\n  constructor() {\n    LineStringAdder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.p = null\n    const p = arguments[0]\n    this.p = p\n  }\n  filter(g) {\n    if (g instanceof LineString) this.p.add(g)\n  }\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  }\n}\nPolygonizer.LineStringAdder = LineStringAdder\n","import PointLocator from '../../algorithm/PointLocator.js'\nimport Location from '../../geom/Location.js'\nimport IntersectionMatrix from '../../geom/IntersectionMatrix.js'\nimport EdgeEndBuilder from './EdgeEndBuilder.js'\nimport NodeMap from '../../geomgraph/NodeMap.js'\nimport RelateNodeFactory from './RelateNodeFactory.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector.js'\nimport Assert from '../../util/Assert.js'\nexport default class RelateComputer {\n  constructor() {\n    RelateComputer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._ptLocator = new PointLocator()\n    this._arg = null\n    this._nodes = new NodeMap(new RelateNodeFactory())\n    this._im = null\n    this._isolatedEdges = new ArrayList()\n    this._invalidPoint = null\n    const arg = arguments[0]\n    this._arg = arg\n  }\n  insertEdgeEnds(ee) {\n    for (let i = ee.iterator(); i.hasNext(); ) {\n      const e = i.next()\n      this._nodes.add(e)\n    }\n  }\n  computeProperIntersectionIM(intersector, im) {\n    const dimA = this._arg[0].getGeometry().getDimension()\n    const dimB = this._arg[1].getGeometry().getDimension()\n    const hasProper = intersector.hasProperIntersection()\n    const hasProperInterior = intersector.hasProperInteriorIntersection()\n    if (dimA === 2 && dimB === 2) {\n      if (hasProper) im.setAtLeast('212101212')\n    } else if (dimA === 2 && dimB === 1) {\n      if (hasProper) im.setAtLeast('FFF0FFFF2')\n      if (hasProperInterior) im.setAtLeast('1FFFFF1FF')\n    } else if (dimA === 1 && dimB === 2) {\n      if (hasProper) im.setAtLeast('F0FFFFFF2')\n      if (hasProperInterior) im.setAtLeast('1F1FFFFFF')\n    } else if (dimA === 1 && dimB === 1) {\n      if (hasProperInterior) im.setAtLeast('0FFFFFFFF')\n    }\n  }\n  labelIsolatedEdges(thisIndex, targetIndex) {\n    for (let ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext(); ) {\n      const e = ei.next()\n      if (e.isIsolated()) {\n        this.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry())\n        this._isolatedEdges.add(e)\n      }\n    }\n  }\n  labelIsolatedEdge(e, targetIndex, target) {\n    if (target.getDimension() > 0) {\n      const loc = this._ptLocator.locate(e.getCoordinate(), target)\n      e.getLabel().setAllLocations(targetIndex, loc)\n    } else {\n      e.getLabel().setAllLocations(targetIndex, Location.EXTERIOR)\n    }\n  }\n  computeIM() {\n    const im = new IntersectionMatrix()\n    im.set(Location.EXTERIOR, Location.EXTERIOR, 2)\n    if (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n      this.computeDisjointIM(im)\n      return im\n    }\n    this._arg[0].computeSelfNodes(this._li, false)\n    this._arg[1].computeSelfNodes(this._li, false)\n    const intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false)\n    this.computeIntersectionNodes(0)\n    this.computeIntersectionNodes(1)\n    this.copyNodesAndLabels(0)\n    this.copyNodesAndLabels(1)\n    this.labelIsolatedNodes()\n    this.computeProperIntersectionIM(intersector, im)\n    const eeBuilder = new EdgeEndBuilder()\n    const ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator())\n    this.insertEdgeEnds(ee0)\n    const ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator())\n    this.insertEdgeEnds(ee1)\n    this.labelNodeEdges()\n    this.labelIsolatedEdges(0, 1)\n    this.labelIsolatedEdges(1, 0)\n    this.updateIM(im)\n    return im\n  }\n  labelNodeEdges() {\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const node = ni.next()\n      node.getEdges().computeLabelling(this._arg)\n    }\n  }\n  copyNodesAndLabels(argIndex) {\n    for (let i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n      const graphNode = i.next()\n      const newNode = this._nodes.addNode(graphNode.getCoordinate())\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex))\n    }\n  }\n  labelIntersectionNodes(argIndex) {\n    for (let i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        const n = this._nodes.find(ei.coord)\n        if (n.getLabel().isNull(argIndex)) \n          if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR)\n        \n      }\n    }\n  }\n  labelIsolatedNode(n, targetIndex) {\n    const loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry())\n    n.getLabel().setAllLocations(targetIndex, loc)\n  }\n  computeIntersectionNodes(argIndex) {\n    for (let i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n      const e = i.next()\n      const eLoc = e.getLabel().getLocation(argIndex)\n      for (let eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n        const ei = eiIt.next()\n        const n = this._nodes.addNode(ei.coord)\n        if (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else \n        if (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR)\n        \n      }\n    }\n  }\n  labelIsolatedNodes() {\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const n = ni.next()\n      const label = n.getLabel()\n      Assert.isTrue(label.getGeometryCount() > 0, 'node with empty label found')\n      if (n.isIsolated()) \n        if (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1)\n      \n    }\n  }\n  updateIM(im) {\n    for (let ei = this._isolatedEdges.iterator(); ei.hasNext(); ) {\n      const e = ei.next()\n      e.updateIM(im)\n    }\n    for (let ni = this._nodes.iterator(); ni.hasNext(); ) {\n      const node = ni.next()\n      node.updateIM(im)\n      node.updateIMFromEdges(im)\n    }\n  }\n  computeDisjointIM(im) {\n    const ga = this._arg[0].getGeometry()\n    if (!ga.isEmpty()) {\n      im.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension())\n      im.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension())\n    }\n    const gb = this._arg[1].getGeometry()\n    if (!gb.isEmpty()) {\n      im.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension())\n      im.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension())\n    }\n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport Point from '../../geom/Point.js'\nimport Polygon from '../../geom/Polygon.js'\nexport default class RectangleContains {\n  constructor() {\n    RectangleContains.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    const rectangle = arguments[0]\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  static contains(rectangle, b) {\n    const rc = new RectangleContains(rectangle)\n    return rc.contains(b)\n  }\n  isContainedInBoundary(geom) {\n    if (geom instanceof Polygon) return false\n    if (geom instanceof Point) return this.isPointContainedInBoundary(geom)\n    if (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom)\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const comp = geom.getGeometryN(i)\n      if (!this.isContainedInBoundary(comp)) return false\n    }\n    return true\n  }\n  isLineSegmentContainedInBoundary(p0, p1) {\n    if (p0.equals(p1)) return this.isPointContainedInBoundary(p0)\n    if (p0.x === p1.x) {\n      if (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true\n    } else if (p0.y === p1.y) {\n      if (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true\n    }\n    return false\n  }\n  isLineStringContainedInBoundary(line) {\n    const seq = line.getCoordinateSequence()\n    const p0 = new Coordinate()\n    const p1 = new Coordinate()\n    for (let i = 0; i < seq.size() - 1; i++) {\n      seq.getCoordinate(i, p0)\n      seq.getCoordinate(i + 1, p1)\n      if (!this.isLineSegmentContainedInBoundary(p0, p1)) return false\n    }\n    return true\n  }\n  isPointContainedInBoundary() {\n    if (arguments[0] instanceof Point) {\n      const point = arguments[0]\n      return this.isPointContainedInBoundary(point.getCoordinate())\n    } else if (arguments[0] instanceof Coordinate) {\n      const pt = arguments[0]\n      return pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY()\n    }\n  }\n  contains(geom) {\n    if (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false\n    if (this.isContainedInBoundary(geom)) return false\n    return true\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport RobustLineIntersector from './RobustLineIntersector.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class RectangleLineIntersector {\n  constructor() {\n    RectangleLineIntersector.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._rectEnv = null\n    this._diagUp0 = null\n    this._diagUp1 = null\n    this._diagDown0 = null\n    this._diagDown1 = null\n    const rectEnv = arguments[0]\n    this._rectEnv = rectEnv\n    this._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY())\n    this._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY())\n    this._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY())\n    this._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY())\n  }\n  intersects(p0, p1) {\n    const segEnv = new Envelope(p0, p1)\n    if (!this._rectEnv.intersects(segEnv)) return false\n    if (this._rectEnv.intersects(p0)) return true\n    if (this._rectEnv.intersects(p1)) return true\n    if (p0.compareTo(p1) > 0) {\n      const tmp = p0\n      p0 = p1\n      p1 = tmp\n    }\n    let isSegUpwards = false\n    if (p1.y > p0.y) isSegUpwards = true\n    if (isSegUpwards) \n      this._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1)\n    else \n      this._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1)\n    \n    if (this._li.hasIntersection()) return true\n    return false\n  }\n}\n","import Coordinate from '../../geom/Coordinate.js'\nimport Polygon from '../../geom/Polygon.js'\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector.js'\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor.js'\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator.js'\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter.js'\nexport default class RectangleIntersects {\n  constructor() {\n    RectangleIntersects.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectangle = null\n    this._rectEnv = null\n    const rectangle = arguments[0]\n    this._rectangle = rectangle\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  static intersects(rectangle, b) {\n    const rp = new RectangleIntersects(rectangle)\n    return rp.intersects(b)\n  }\n  intersects(geom) {\n    if (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false\n    const visitor = new EnvelopeIntersectsVisitor(this._rectEnv)\n    visitor.applyTo(geom)\n    if (visitor.intersects()) return true\n    const ecpVisitor = new GeometryContainsPointVisitor(this._rectangle)\n    ecpVisitor.applyTo(geom)\n    if (ecpVisitor.containsPoint()) return true\n    const riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle)\n    riVisitor.applyTo(geom)\n    if (riVisitor.intersects()) return true\n    return false\n  }\n}\nclass EnvelopeIntersectsVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    EnvelopeIntersectsVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    this._intersects = false\n    const rectEnv = arguments[0]\n    this._rectEnv = rectEnv\n  }\n  isDone() {\n    return this._intersects === true\n  }\n  visit(element) {\n    const elementEnv = element.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) \n      return null\n    \n    if (this._rectEnv.contains(elementEnv)) {\n      this._intersects = true\n      return null\n    }\n    if (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n      this._intersects = true\n      return null\n    }\n    if (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n      this._intersects = true\n      return null\n    }\n  }\n  intersects() {\n    return this._intersects\n  }\n}\nclass GeometryContainsPointVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    GeometryContainsPointVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectSeq = null\n    this._rectEnv = null\n    this._containsPoint = false\n    const rectangle = arguments[0]\n    this._rectSeq = rectangle.getExteriorRing().getCoordinateSequence()\n    this._rectEnv = rectangle.getEnvelopeInternal()\n  }\n  isDone() {\n    return this._containsPoint === true\n  }\n  visit(geom) {\n    if (!(geom instanceof Polygon)) return null\n    const elementEnv = geom.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) return null\n    const rectPt = new Coordinate()\n    for (let i = 0; i < 4; i++) {\n      this._rectSeq.getCoordinate(i, rectPt)\n      if (!elementEnv.contains(rectPt)) continue\n      if (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n        this._containsPoint = true\n        return null\n      }\n    }\n  }\n  containsPoint() {\n    return this._containsPoint\n  }\n}\nclass RectangleIntersectsSegmentVisitor extends ShortCircuitedGeometryVisitor {\n  constructor() {\n    super()\n    RectangleIntersectsSegmentVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rectEnv = null\n    this._rectIntersector = null\n    this._hasIntersection = false\n    this._p0 = new Coordinate()\n    this._p1 = new Coordinate()\n    const rectangle = arguments[0]\n    this._rectEnv = rectangle.getEnvelopeInternal()\n    this._rectIntersector = new RectangleLineIntersector(this._rectEnv)\n  }\n  intersects() {\n    return this._hasIntersection\n  }\n  isDone() {\n    return this._hasIntersection === true\n  }\n  visit(geom) {\n    const elementEnv = geom.getEnvelopeInternal()\n    if (!this._rectEnv.intersects(elementEnv)) return null\n    const lines = LinearComponentExtracter.getLines(geom)\n    this.checkIntersectionWithLineStrings(lines)\n  }\n  checkIntersectionWithLineStrings(lines) {\n    for (let i = lines.iterator(); i.hasNext(); ) {\n      const testLine = i.next()\n      this.checkIntersectionWithSegments(testLine)\n      if (this._hasIntersection) return null\n    }\n  }\n  checkIntersectionWithSegments(testLine) {\n    const seq1 = testLine.getCoordinateSequence()\n    for (let j = 1; j < seq1.size(); j++) {\n      seq1.getCoordinate(j - 1, this._p0)\n      seq1.getCoordinate(j, this._p1)\n      if (this._rectIntersector.intersects(this._p0, this._p1)) {\n        this._hasIntersection = true\n        return null\n      }\n    }\n  }\n}\n","import RelateComputer from './RelateComputer.js'\nimport GeometryGraphOperation from '../GeometryGraphOperation.js'\nimport RectangleContains from '../predicate/RectangleContains.js'\nimport RectangleIntersects from '../predicate/RectangleIntersects.js'\nexport default class RelateOp extends GeometryGraphOperation {\n  constructor() {\n    super()\n    RelateOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._relate = null\n    if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      GeometryGraphOperation.constructor_.call(this, g0, g1)\n      this._relate = new RelateComputer(this._arg)\n    } else if (arguments.length === 3) {\n      const g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2]\n      GeometryGraphOperation.constructor_.call(this, g0, g1, boundaryNodeRule)\n      this._relate = new RelateComputer(this._arg)\n    }\n  }\n  static covers(g1, g2) {\n    if (g2.getDimension() === 2 && g1.getDimension() < 2) \n      return false\n    \n    if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) \n      return false\n    \n    if (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return true\n    \n    return new RelateOp(g1, g2).getIntersectionMatrix().isCovers()\n  }\n  static intersects(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return RectangleIntersects.intersects(g1, g2)\n    \n    if (g2.isRectangle()) \n      return RectangleIntersects.intersects(g2, g1)\n    \n    if (g1.isGeometryCollection() || g2.isGeometryCollection()) {\n      const r = false\n      for (let i = 0; i < g1.getNumGeometries(); i++) \n        for (let j = 0; j < g2.getNumGeometries(); j++) \n          if (g1.getGeometryN(i).intersects(g2.getGeometryN(j))) \n            return true\n          \n        \n      \n      return false\n    }\n    return new RelateOp(g1, g2).getIntersectionMatrix().isIntersects()\n  }\n  static touches(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isTouches(g1.getDimension(), g2.getDimension())\n  }\n  static equalsTopo(g1, g2) {\n    if (!g1.getEnvelopeInternal().equals(g2.getEnvelopeInternal())) return false\n    return RelateOp.relate(g1, g2).isEquals(g1.getDimension(), g2.getDimension())\n  }\n  static relate() {\n    if (arguments.length === 2) {\n      const a = arguments[0], b = arguments[1]\n      const relOp = new RelateOp(a, b)\n      const im = relOp.getIntersectionMatrix()\n      return im\n    } else if (arguments.length === 3) {\n      const a = arguments[0], b = arguments[1], boundaryNodeRule = arguments[2]\n      const relOp = new RelateOp(a, b, boundaryNodeRule)\n      const im = relOp.getIntersectionMatrix()\n      return im\n    }\n  }\n  static overlaps(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isOverlaps(g1.getDimension(), g2.getDimension())\n  }\n  static crosses(g1, g2) {\n    if (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false\n    return new RelateOp(g1, g2).getIntersectionMatrix().isCrosses(g1.getDimension(), g2.getDimension())\n  }\n  static contains(g1, g2) {\n    if (g2.getDimension() === 2 && g1.getDimension() < 2) \n      return false\n    \n    if (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) \n      return false\n    \n    if (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false\n    if (g1.isRectangle()) \n      return RectangleContains.contains(g1, g2)\n    \n    return new RelateOp(g1, g2).getIntersectionMatrix().isContains()\n  }\n  getIntersectionMatrix() {\n    return this._relate.computeIM()\n  }\n}\n","import PointLocator from '../../algorithm/PointLocator.js'\nimport Location from '../../geom/Location.js'\nimport TreeSet from '../../../../../java/util/TreeSet.js'\nimport GeometryCombiner from '../../geom/util/GeometryCombiner.js'\nimport CoordinateArrays from '../../geom/CoordinateArrays.js'\nexport default class PointGeometryUnion {\n  constructor() {\n    PointGeometryUnion.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pointGeom = null\n    this._otherGeom = null\n    this._geomFact = null\n    const pointGeom = arguments[0], otherGeom = arguments[1]\n    this._pointGeom = pointGeom\n    this._otherGeom = otherGeom\n    this._geomFact = otherGeom.getFactory()\n  }\n  static union(pointGeom, otherGeom) {\n    const unioner = new PointGeometryUnion(pointGeom, otherGeom)\n    return unioner.union()\n  }\n  union() {\n    const locater = new PointLocator()\n    const exteriorCoords = new TreeSet()\n    for (let i = 0; i < this._pointGeom.getNumGeometries(); i++) {\n      const point = this._pointGeom.getGeometryN(i)\n      const coord = point.getCoordinate()\n      const loc = locater.locate(coord, this._otherGeom)\n      if (loc === Location.EXTERIOR) exteriorCoords.add(coord)\n    }\n    if (exteriorCoords.size() === 0) return this._otherGeom\n    let ptComp = null\n    const coords = CoordinateArrays.toCoordinateArray(exteriorCoords)\n    if (coords.length === 1) \n      ptComp = this._geomFact.createPoint(coords[0])\n    else \n      ptComp = this._geomFact.createMultiPointFromCoords(coords)\n    \n    return GeometryCombiner.combine(ptComp, this._otherGeom)\n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport Geometry from '../../geom/Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport Point from '../../geom/Point.js'\nimport Polygon from '../../geom/Polygon.js'\nimport GeometryCollection from '../../geom/GeometryCollection.js'\nimport Dimension from '../../geom/Dimension.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport GeometryFilter from '../../geom/GeometryFilter.js'\nimport Assert from '../../util/Assert.js'\nexport default class InputExtracter {\n  constructor() {\n    InputExtracter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFactory = null\n    this._polygons = new ArrayList()\n    this._lines = new ArrayList()\n    this._points = new ArrayList()\n    this._dimension = Dimension.FALSE\n  }\n  static extract() {\n    if (hasInterface(arguments[0], Collection)) {\n      const geoms = arguments[0]\n      const extracter = new InputExtracter()\n      extracter.add(geoms)\n      return extracter\n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      const extracter = new InputExtracter()\n      extracter.add(geom)\n      return extracter\n    }\n  }\n  getFactory() {\n    return this._geomFactory\n  }\n  recordDimension(dim) {\n    if (dim > this._dimension) this._dimension = dim\n  }\n  getDimension() {\n    return this._dimension\n  }\n  filter(geom) {\n    this.recordDimension(geom.getDimension())\n    if (geom instanceof GeometryCollection) \n      return null\n    \n    if (geom.isEmpty()) return null\n    if (geom instanceof Polygon) {\n      this._polygons.add(geom)\n      return null\n    } else if (geom instanceof LineString) {\n      this._lines.add(geom)\n      return null\n    } else if (geom instanceof Point) {\n      this._points.add(geom)\n      return null\n    }\n    Assert.shouldNeverReachHere('Unhandled geometry type: ' + geom.getGeometryType())\n  }\n  getExtract(dim) {\n    switch (dim) {\n    case 0:\n      return this._points\n    case 1:\n      return this._lines\n    case 2:\n      return this._polygons\n    }\n    Assert.shouldNeverReachHere('Invalid dimension: ' + dim)\n    return null\n  }\n  isEmpty() {\n    return this._polygons.isEmpty() && this._lines.isEmpty() && this._points.isEmpty()\n  }\n  add() {\n    if (hasInterface(arguments[0], Collection)) {\n      const geoms = arguments[0]\n      for (const geom of geoms) \n        this.add(geom)\n      \n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      if (this._geomFactory === null) this._geomFactory = geom.getFactory()\n      geom.apply(this)\n    }\n  }\n  get interfaces_() {\n    return [GeometryFilter]\n  }\n}\n","import Geometry from '../../geom/Geometry.js'\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp.js'\nimport OverlayOp from '../overlay/OverlayOp.js'\nexport default class UnionOp {\n  static union(g, other) {\n    if (g.isEmpty() || other.isEmpty()) {\n      if (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory())\n      if (g.isEmpty()) return other.copy()\n      if (other.isEmpty()) return g.copy()\n    }\n    Geometry.checkNotGeometryCollection(g)\n    Geometry.checkNotGeometryCollection(other)\n    return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n  }\n}\n","import HashSet from '../../../../../java/util/HashSet.js'\nimport UnionOp from './UnionOp.js'\nimport TopologyException from '../../geom/TopologyException.js'\nimport GeometryCombiner from '../../geom/util/GeometryCombiner.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport CoordinateSequenceFilter from '../../geom/CoordinateSequenceFilter.js'\nexport default class OverlapUnion {\n  constructor() {\n    OverlapUnion.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFactory = null\n    this._g0 = null\n    this._g1 = null\n    this._isUnionSafe = null\n    const g0 = arguments[0], g1 = arguments[1]\n    this._g0 = g0\n    this._g1 = g1\n    this._geomFactory = g0.getFactory()\n  }\n  static containsProperly() {\n    if (arguments.length === 2) {\n      const env = arguments[0], p = arguments[1]\n      if (env.isNull()) return false\n      return p.getX() > env.getMinX() && p.getX() < env.getMaxX() && p.getY() > env.getMinY() && p.getY() < env.getMaxY()\n    } else if (arguments.length === 3) {\n      const env = arguments[0], p0 = arguments[1], p1 = arguments[2]\n      return OverlapUnion.containsProperly(env, p0) && OverlapUnion.containsProperly(env, p1)\n    }\n  }\n  static union(g0, g1) {\n    const union = new OverlapUnion(g0, g1)\n    return union.union()\n  }\n  static intersects(env, p0, p1) {\n    return env.intersects(p0) || env.intersects(p1)\n  }\n  static overlapEnvelope(g0, g1) {\n    const g0Env = g0.getEnvelopeInternal()\n    const g1Env = g1.getEnvelopeInternal()\n    const overlapEnv = g0Env.intersection(g1Env)\n    return overlapEnv\n  }\n  static extractBorderSegments(geom, env, segs) {\n    geom.apply(new (class {\n      get interfaces_() {\n        return [CoordinateSequenceFilter]\n      }\n      filter(seq, i) {\n        if (i <= 0) return null\n        const p0 = seq.getCoordinate(i - 1)\n        const p1 = seq.getCoordinate(i)\n        const isBorder = OverlapUnion.intersects(env, p0, p1) && !OverlapUnion.containsProperly(env, p0, p1)\n        if (isBorder) {\n          const seg = new LineSegment(p0, p1)\n          segs.add(seg)\n        }\n      }\n      isDone() {\n        return false\n      }\n      isGeometryChanged() {\n        return false\n      }\n    })())\n  }\n  static unionBuffer(g0, g1) {\n    const factory = g0.getFactory()\n    const gColl = factory.createGeometryCollection([g0, g1])\n    const union = gColl.buffer(0.0)\n    return union\n  }\n  isBorderSegmentsSame(result, env) {\n    const segsBefore = this.extractBorderSegments(this._g0, this._g1, env)\n    const segsAfter = new ArrayList()\n    OverlapUnion.extractBorderSegments(result, env, segsAfter)\n    return this.isEqual(segsBefore, segsAfter)\n  }\n  extractByEnvelope(env, geom, disjointGeoms) {\n    const intersectingGeoms = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const elem = geom.getGeometryN(i)\n      if (elem.getEnvelopeInternal().intersects(env)) {\n        intersectingGeoms.add(elem)\n      } else {\n        const copy = elem.copy()\n        disjointGeoms.add(copy)\n      }\n    }\n    return this._geomFactory.buildGeometry(intersectingGeoms)\n  }\n  isEqual(segs0, segs1) {\n    if (segs0.size() !== segs1.size()) return false\n    const segIndex = new HashSet(segs0)\n    for (const seg of segs1) \n      if (!segIndex.contains(seg)) \n        return false\n      \n    \n    return true\n  }\n  union() {\n    const overlapEnv = OverlapUnion.overlapEnvelope(this._g0, this._g1)\n    if (overlapEnv.isNull()) {\n      const g0Copy = this._g0.copy()\n      const g1Copy = this._g1.copy()\n      return GeometryCombiner.combine(g0Copy, g1Copy)\n    }\n    const disjointPolys = new ArrayList()\n    const g0Overlap = this.extractByEnvelope(overlapEnv, this._g0, disjointPolys)\n    const g1Overlap = this.extractByEnvelope(overlapEnv, this._g1, disjointPolys)\n    const unionGeom = this.unionFull(g0Overlap, g1Overlap)\n    let result = null\n    this._isUnionSafe = this.isBorderSegmentsSame(unionGeom, overlapEnv)\n    if (!this._isUnionSafe) \n      result = this.unionFull(this._g0, this._g1)\n    else \n      result = this.combine(unionGeom, disjointPolys)\n    \n    return result\n  }\n  combine(unionGeom, disjointPolys) {\n    if (disjointPolys.size() <= 0) return unionGeom\n    disjointPolys.add(unionGeom)\n    const result = GeometryCombiner.combine(disjointPolys)\n    return result\n  }\n  unionFull(geom0, geom1) {\n    try {\n      return UnionOp.union(geom0, geom1)\n    } catch (ex) {\n      if (ex instanceof TopologyException) \n        return OverlapUnion.unionBuffer(geom0, geom1)\n      else throw ex\n    } finally {}\n  }\n  extractBorderSegments(geom0, geom1, env) {\n    const segs = new ArrayList()\n    OverlapUnion.extractBorderSegments(geom0, env, segs)\n    if (geom1 !== null) OverlapUnion.extractBorderSegments(geom1, env, segs)\n    return segs\n  }\n  isUnionOptimized() {\n    return this._isUnionSafe\n  }\n}\n","import PolygonExtracter from '../../geom/util/PolygonExtracter.js'\nimport OverlapUnion from './OverlapUnion.js'\nimport STRtree from '../../index/strtree/STRtree.js'\nimport Geometry from '../../geom/Geometry.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport Polygonal from '../../geom/Polygonal.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport List from '../../../../../java/util/List.js'\nimport IllegalStateException from '../../../../../java/lang/IllegalStateException.js'\nexport default class CascadedPolygonUnion {\n  constructor() {\n    CascadedPolygonUnion.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputPolys = null\n    this._geomFactory = null\n    const polys = arguments[0]\n    this._inputPolys = polys\n    if (this._inputPolys === null) this._inputPolys = new ArrayList()\n  }\n  static restrictToPolygons(g) {\n    if (hasInterface(g, Polygonal)) \n      return g\n    \n    const polygons = PolygonExtracter.getPolygons(g)\n    if (polygons.size() === 1) return polygons.get(0)\n    return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n  }\n  static getGeometry(list, index) {\n    if (index >= list.size()) return null\n    return list.get(index)\n  }\n  static union(polys) {\n    const op = new CascadedPolygonUnion(polys)\n    return op.union()\n  }\n  reduceToGeometries(geomTree) {\n    const geoms = new ArrayList()\n    for (let i = geomTree.iterator(); i.hasNext(); ) {\n      const o = i.next()\n      let geom = null\n      if (hasInterface(o, List)) \n        geom = this.unionTree(o)\n      else if (o instanceof Geometry) \n        geom = o\n      \n      geoms.add(geom)\n    }\n    return geoms\n  }\n  union() {\n    if (this._inputPolys === null) throw new IllegalStateException('union() method cannot be called twice')\n    if (this._inputPolys.isEmpty()) return null\n    this._geomFactory = this._inputPolys.iterator().next().getFactory()\n    const index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY)\n    for (let i = this._inputPolys.iterator(); i.hasNext(); ) {\n      const item = i.next()\n      index.insert(item.getEnvelopeInternal(), item)\n    }\n    this._inputPolys = null\n    const itemTree = index.itemsTree()\n    const unionAll = this.unionTree(itemTree)\n    return unionAll\n  }\n  binaryUnion() {\n    if (arguments.length === 1) {\n      const geoms = arguments[0]\n      return this.binaryUnion(geoms, 0, geoms.size())\n    } else if (arguments.length === 3) {\n      const geoms = arguments[0], start = arguments[1], end = arguments[2]\n      if (end - start <= 1) {\n        const g0 = CascadedPolygonUnion.getGeometry(geoms, start)\n        return this.unionSafe(g0, null)\n      } else if (end - start === 2) {\n        return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1))\n      } else {\n        const mid = Math.trunc((end + start) / 2)\n        const g0 = this.binaryUnion(geoms, start, mid)\n        const g1 = this.binaryUnion(geoms, mid, end)\n        return this.unionSafe(g0, g1)\n      }\n    }\n  }\n  repeatedUnion(geoms) {\n    let union = null\n    for (let i = geoms.iterator(); i.hasNext(); ) {\n      const g = i.next()\n      if (union === null) union = g.copy(); else union = union.union(g)\n    }\n    return union\n  }\n  unionSafe(g0, g1) {\n    if (g0 === null && g1 === null) return null\n    if (g0 === null) return g1.copy()\n    if (g1 === null) return g0.copy()\n    return this.unionActual(g0, g1)\n  }\n  unionActual(g0, g1) {\n    const union = OverlapUnion.union(g0, g1)\n    \n    return CascadedPolygonUnion.restrictToPolygons(union)\n  }\n  unionTree(geomTree) {\n    const geoms = this.reduceToGeometries(geomTree)\n    const union = this.binaryUnion(geoms)\n    return union\n  }\n  bufferUnion() {\n    if (arguments.length === 1) {\n      const geoms = arguments[0]\n      const factory = geoms.get(0).getFactory()\n      const gColl = factory.buildGeometry(geoms)\n      const unionAll = gColl.buffer(0.0)\n      return unionAll\n    } else if (arguments.length === 2) {\n      const g0 = arguments[0], g1 = arguments[1]\n      const factory = g0.getFactory()\n      const gColl = factory.createGeometryCollection([g0, g1])\n      const unionAll = gColl.buffer(0.0)\n      return unionAll\n    }\n  }\n}\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4\n","import Geometry from '../../geom/Geometry.js'\nimport PointGeometryUnion from './PointGeometryUnion.js'\nimport hasInterface from '../../../../../hasInterface.js'\nimport Collection from '../../../../../java/util/Collection.js'\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp.js'\nimport InputExtracter from './InputExtracter.js'\nimport OverlayOp from '../overlay/OverlayOp.js'\nimport CascadedPolygonUnion from './CascadedPolygonUnion.js'\nexport default class UnaryUnionOp {\n  constructor() {\n    UnaryUnionOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFact = null\n    this._extracter = null\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], Collection)) {\n        const geoms = arguments[0]\n        this.extract(geoms)\n      } else if (arguments[0] instanceof Geometry) {\n        const geom = arguments[0]\n        this.extract(geom)\n      }\n    } else if (arguments.length === 2) {\n      const geoms = arguments[0], geomFact = arguments[1]\n      this._geomFact = geomFact\n      this.extract(geoms)\n    }\n  }\n  static union() {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], Collection)) {\n        const geoms = arguments[0]\n        const op = new UnaryUnionOp(geoms)\n        return op.union()\n      } else if (arguments[0] instanceof Geometry) {\n        const geom = arguments[0]\n        const op = new UnaryUnionOp(geom)\n        return op.union()\n      }\n    } else if (arguments.length === 2) {\n      const geoms = arguments[0], geomFact = arguments[1]\n      const op = new UnaryUnionOp(geoms, geomFact)\n      return op.union()\n    }\n  }\n  unionNoOpt(g0) {\n    const empty = this._geomFact.createPoint()\n    return SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION)\n  }\n  unionWithNull(g0, g1) {\n    if (g0 === null && g1 === null) return null\n    if (g1 === null) return g0\n    if (g0 === null) return g1\n    return OverlayOp.union(g0, g1)\n  }\n  extract() {\n    if (hasInterface(arguments[0], Collection)) {\n      const geoms = arguments[0]\n      this._extracter = InputExtracter.extract(geoms)\n    } else if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      this._extracter = InputExtracter.extract(geom)\n    }\n  }\n  union() {\n    if (this._geomFact === null) this._geomFact = this._extracter.getFactory()\n    if (this._geomFact === null) \n      return null\n    \n    if (this._extracter.isEmpty()) \n      return this._geomFact.createEmpty(this._extracter.getDimension())\n    \n    const points = this._extracter.getExtract(0)\n    const lines = this._extracter.getExtract(1)\n    const polygons = this._extracter.getExtract(2)\n    let unionPoints = null\n    if (points.size() > 0) {\n      const ptGeom = this._geomFact.buildGeometry(points)\n      unionPoints = this.unionNoOpt(ptGeom)\n    }\n    let unionLines = null\n    if (lines.size() > 0) {\n      const lineGeom = this._geomFact.buildGeometry(lines)\n      unionLines = this.unionNoOpt(lineGeom)\n    }\n    let unionPolygons = null\n    if (polygons.size() > 0) \n      unionPolygons = CascadedPolygonUnion.union(polygons)\n    \n    const unionLA = this.unionWithNull(unionLines, unionPolygons)\n    let union = null\n    if (unionPoints === null) union = unionLA; else if (unionLA === null) union = unionPoints; else union = PointGeometryUnion.union(unionPoints, unionLA)\n    if (union === null) return this._geomFact.createGeometryCollection()\n    return union\n  }\n}\n","import CommonBitsRemover from './CommonBitsRemover.js'\nexport default class CommonBitsOp {\n  constructor() {\n    CommonBitsOp.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._returnToOriginalPrecision = true\n    this._cbr = null\n    if (arguments.length === 0) {\n      CommonBitsOp.constructor_.call(this, true)\n    } else if (arguments.length === 1) {\n      const returnToOriginalPrecision = arguments[0]\n      this._returnToOriginalPrecision = returnToOriginalPrecision\n    }\n  }\n  computeResultPrecision(result) {\n    if (this._returnToOriginalPrecision) this._cbr.addCommonBits(result)\n    return result\n  }\n  union(geom0, geom1) {\n    const geom = this.removeCommonBits(geom0, geom1)\n    return this.computeResultPrecision(geom[0].union(geom[1]))\n  }\n  intersection(geom0, geom1) {\n    const geom = this.removeCommonBits(geom0, geom1)\n    return this.computeResultPrecision(geom[0].intersection(geom[1]))\n  }\n  removeCommonBits() {\n    if (arguments.length === 1) {\n      const geom0 = arguments[0]\n      this._cbr = new CommonBitsRemover()\n      this._cbr.add(geom0)\n      const geom = this._cbr.removeCommonBits(geom0.copy())\n      return geom\n    } else if (arguments.length === 2) {\n      const geom0 = arguments[0], geom1 = arguments[1]\n      this._cbr = new CommonBitsRemover()\n      this._cbr.add(geom0)\n      this._cbr.add(geom1)\n      const geom = new Array(2).fill(null)\n      geom[0] = this._cbr.removeCommonBits(geom0.copy())\n      geom[1] = this._cbr.removeCommonBits(geom1.copy())\n      return geom\n    }\n  }\n  buffer(geom0, distance) {\n    const geom = this.removeCommonBits(geom0)\n    return this.computeResultPrecision(geom.buffer(distance))\n  }\n  symDifference(geom0, geom1) {\n    const geom = this.removeCommonBits(geom0, geom1)\n    return this.computeResultPrecision(geom[0].symDifference(geom[1]))\n  }\n  difference(geom0, geom1) {\n    const geom = this.removeCommonBits(geom0, geom1)\n    return this.computeResultPrecision(geom[0].difference(geom[1]))\n  }\n}\n","import CommonBitsOp from './CommonBitsOp.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class EnhancedPrecisionOp {\n  static union(geom0, geom1) {\n    let originalEx = null\n    try {\n      const result = geom0.union(geom1)\n      return result\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        originalEx = ex\n      else throw ex\n    } finally {}\n    try {\n      const cbo = new CommonBitsOp(true)\n      const resultEP = cbo.union(geom0, geom1)\n      if (!resultEP.isValid()) throw originalEx\n      return resultEP\n    } catch (ex2) {\n      if (ex2 instanceof RuntimeException) \n        throw originalEx\n      else throw ex2\n    } finally {}\n  }\n  static intersection(geom0, geom1) {\n    let originalEx = null\n    try {\n      const result = geom0.intersection(geom1)\n      return result\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        originalEx = ex\n      else throw ex\n    } finally {}\n    try {\n      const cbo = new CommonBitsOp(true)\n      const resultEP = cbo.intersection(geom0, geom1)\n      if (!resultEP.isValid()) throw originalEx\n      return resultEP\n    } catch (ex2) {\n      if (ex2 instanceof RuntimeException) \n        throw originalEx\n      else throw ex2\n    } finally {}\n  }\n  static buffer(geom, distance) {\n    let originalEx = null\n    try {\n      const result = geom.buffer(distance)\n      return result\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        originalEx = ex\n      else throw ex\n    } finally {}\n    try {\n      const cbo = new CommonBitsOp(true)\n      const resultEP = cbo.buffer(geom, distance)\n      if (!resultEP.isValid()) throw originalEx\n      return resultEP\n    } catch (ex2) {\n      if (ex2 instanceof RuntimeException) \n        throw originalEx\n      else throw ex2\n    } finally {}\n  }\n  static symDifference(geom0, geom1) {\n    let originalEx = null\n    try {\n      const result = geom0.symDifference(geom1)\n      return result\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        originalEx = ex\n      else throw ex\n    } finally {}\n    try {\n      const cbo = new CommonBitsOp(true)\n      const resultEP = cbo.symDifference(geom0, geom1)\n      if (!resultEP.isValid()) throw originalEx\n      return resultEP\n    } catch (ex2) {\n      if (ex2 instanceof RuntimeException) \n        throw originalEx\n      else throw ex2\n    } finally {}\n  }\n  static difference(geom0, geom1) {\n    let originalEx = null\n    try {\n      const result = geom0.difference(geom1)\n      return result\n    } catch (ex) {\n      if (ex instanceof RuntimeException) \n        originalEx = ex\n      else throw ex\n    } finally {}\n    try {\n      const cbo = new CommonBitsOp(true)\n      const resultEP = cbo.difference(geom0, geom1)\n      if (!resultEP.isValid()) throw originalEx\n      return resultEP\n    } catch (ex2) {\n      if (ex2 instanceof RuntimeException) \n        throw originalEx\n      else throw ex2\n    } finally {}\n  }\n}\n","import LineString from '../geom/LineString.js'\nimport CoordinateList from '../geom/CoordinateList.js'\nimport Geometry from '../geom/Geometry.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport GeometryEditor from '../geom/util/GeometryEditor.js'\nimport LinearRing from '../geom/LinearRing.js'\nexport default class PrecisionReducerCoordinateOperation extends GeometryEditor.CoordinateOperation {\n  constructor() {\n    super()\n    PrecisionReducerCoordinateOperation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._targetPM = null\n    this._removeCollapsed = true\n    const targetPM = arguments[0], removeCollapsed = arguments[1]\n    this._targetPM = targetPM\n    this._removeCollapsed = removeCollapsed\n  }\n  edit() {\n    if (arguments.length === 2 && (arguments[1] instanceof Geometry && arguments[0] instanceof Array)) {\n      const coordinates = arguments[0], geom = arguments[1]\n      if (coordinates.length === 0) return null\n      const reducedCoords = new Array(coordinates.length).fill(null)\n      for (let i = 0; i < coordinates.length; i++) {\n        const coord = new Coordinate(coordinates[i])\n        this._targetPM.makePrecise(coord)\n        reducedCoords[i] = coord\n      }\n      const noRepeatedCoordList = new CoordinateList(reducedCoords, false)\n      const noRepeatedCoords = noRepeatedCoordList.toCoordinateArray()\n      let minLength = 0\n      if (geom instanceof LineString) minLength = 2\n      if (geom instanceof LinearRing) minLength = 4\n      let collapsedCoords = reducedCoords\n      if (this._removeCollapsed) collapsedCoords = null\n      if (noRepeatedCoords.length < minLength) \n        return collapsedCoords\n      \n      return noRepeatedCoords\n    } else {\n      return super.edit.apply(this, arguments)\n    }\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport GeometryFactory from '../geom/GeometryFactory.js'\nimport IsValidOp from '../operation/valid/IsValidOp.js'\nimport GeometryEditor from '../geom/util/GeometryEditor.js'\nimport BufferOp from '../operation/buffer/BufferOp.js'\nimport Polygonal from '../geom/Polygonal.js'\nimport PrecisionReducerCoordinateOperation from './PrecisionReducerCoordinateOperation.js'\nexport default class GeometryPrecisionReducer {\n  constructor() {\n    GeometryPrecisionReducer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._targetPM = null\n    this._removeCollapsed = true\n    this._changePrecisionModel = false\n    this._isPointwise = false\n    const pm = arguments[0]\n    this._targetPM = pm\n  }\n  static reduce(g, precModel) {\n    const reducer = new GeometryPrecisionReducer(precModel)\n    return reducer.reduce(g)\n  }\n  static reducePointwise(g, precModel) {\n    const reducer = new GeometryPrecisionReducer(precModel)\n    reducer.setPointwise(true)\n    return reducer.reduce(g)\n  }\n  fixPolygonalTopology(geom) {\n    let geomToBuffer = geom\n    if (!this._changePrecisionModel) \n      geomToBuffer = this.changePM(geom, this._targetPM)\n    \n    const bufGeom = BufferOp.bufferOp(geomToBuffer, 0)\n    return bufGeom\n  }\n  reducePointwise(geom) {\n    let geomEdit = null\n    if (this._changePrecisionModel) {\n      const newFactory = this.createFactory(geom.getFactory(), this._targetPM)\n      geomEdit = new GeometryEditor(newFactory)\n    } else {\n      geomEdit = new GeometryEditor()\n    }\n    let finalRemoveCollapsed = this._removeCollapsed\n    if (geom.getDimension() >= 2) finalRemoveCollapsed = true\n    const reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this._targetPM, finalRemoveCollapsed))\n    return reduceGeom\n  }\n  changePM(geom, newPM) {\n    const geomEditor = this.createEditor(geom.getFactory(), newPM)\n    return geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation())\n  }\n  setRemoveCollapsedComponents(removeCollapsed) {\n    this._removeCollapsed = removeCollapsed\n  }\n  createFactory(inputFactory, pm) {\n    const newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory())\n    return newFactory\n  }\n  setChangePrecisionModel(changePrecisionModel) {\n    this._changePrecisionModel = changePrecisionModel\n  }\n  reduce(geom) {\n    const reducePW = this.reducePointwise(geom)\n    if (this._isPointwise) return reducePW\n    if (!hasInterface(reducePW, Polygonal)) return reducePW\n    if (IsValidOp.isValid(reducePW)) return reducePW\n    return this.fixPolygonalTopology(reducePW)\n  }\n  setPointwise(isPointwise) {\n    this._isPointwise = isPointwise\n  }\n  createEditor(geomFactory, newPM) {\n    if (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor()\n    const newFactory = this.createFactory(geomFactory, newPM)\n    const geomEdit = new GeometryEditor(newFactory)\n    return geomEdit\n  }\n}\n","import StringBuffer from '../../../../../java/lang/StringBuffer.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport GeometryLocation from './GeometryLocation.js'\nimport Double from '../../../../../java/lang/Double.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Distance from '../../algorithm/Distance.js'\nexport default class FacetSequence {\n  constructor() {\n    FacetSequence.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geom = null\n    this._pts = null\n    this._start = null\n    this._end = null\n    if (arguments.length === 2) {\n      const pts = arguments[0], start = arguments[1]\n      this._pts = pts\n      this._start = start\n      this._end = start + 1\n    } else if (arguments.length === 3) {\n      const pts = arguments[0], start = arguments[1], end = arguments[2]\n      this._pts = pts\n      this._start = start\n      this._end = end\n    } else if (arguments.length === 4) {\n      const geom = arguments[0], pts = arguments[1], start = arguments[2], end = arguments[3]\n      this._geom = geom\n      this._pts = pts\n      this._start = start\n      this._end = end\n    }\n  }\n  computeDistanceLineLine(facetSeq, locs) {\n    let minDistance = Double.MAX_VALUE\n    for (let i = this._start; i < this._end - 1; i++) {\n      const p0 = this._pts.getCoordinate(i)\n      const p1 = this._pts.getCoordinate(i + 1)\n      for (let j = facetSeq._start; j < facetSeq._end - 1; j++) {\n        const q0 = facetSeq._pts.getCoordinate(j)\n        const q1 = facetSeq._pts.getCoordinate(j + 1)\n        const dist = Distance.segmentToSegment(p0, p1, q0, q1)\n        if (dist < minDistance) {\n          minDistance = dist\n          if (locs !== null) this.updateNearestLocationsLineLine(i, p0, p1, facetSeq, j, q0, q1, locs)\n          if (minDistance <= 0.0) return minDistance\n        }\n      }\n    }\n    return minDistance\n  }\n  updateNearestLocationsPointLine(pt, facetSeq, i, q0, q1, locs) {\n    locs[0] = new GeometryLocation(this._geom, this._start, new Coordinate(pt))\n    const seg = new LineSegment(q0, q1)\n    const segClosestPoint = seg.closestPoint(pt)\n    locs[1] = new GeometryLocation(facetSeq._geom, i, new Coordinate(segClosestPoint))\n  }\n  size() {\n    return this._end - this._start\n  }\n  getCoordinate(index) {\n    return this._pts.getCoordinate(this._start + index)\n  }\n  nearestLocations(facetSeq) {\n    const isPoint = this.isPoint()\n    const isPointOther = facetSeq.isPoint()\n    const locs = new Array(2).fill(null)\n    if (isPoint && isPointOther) {\n      const pt = this._pts.getCoordinate(this._start)\n      const seqPt = facetSeq._pts.getCoordinate(facetSeq._start)\n      locs[0] = new GeometryLocation(this._geom, this._start, new Coordinate(pt))\n      locs[1] = new GeometryLocation(facetSeq._geom, facetSeq._start, new Coordinate(seqPt))\n    } else if (isPoint) {\n      const pt = this._pts.getCoordinate(this._start)\n      this.computeDistancePointLine(pt, facetSeq, locs)\n    } else if (isPointOther) {\n      const seqPt = facetSeq._pts.getCoordinate(facetSeq._start)\n      this.computeDistancePointLine(seqPt, this, locs)\n      const tmp = locs[0]\n      locs[0] = locs[1]\n      locs[1] = tmp\n    } else {\n      this.computeDistanceLineLine(facetSeq, locs)\n    }\n    return locs\n  }\n  getEnvelope() {\n    const env = new Envelope()\n    for (let i = this._start; i < this._end; i++) \n      env.expandToInclude(this._pts.getX(i), this._pts.getY(i))\n    \n    return env\n  }\n  updateNearestLocationsLineLine(i, p0, p1, facetSeq, j, q0, q1, locs) {\n    const seg0 = new LineSegment(p0, p1)\n    const seg1 = new LineSegment(q0, q1)\n    const closestPt = seg0.closestPoints(seg1)\n    locs[0] = new GeometryLocation(this._geom, i, new Coordinate(closestPt[0]))\n    locs[1] = new GeometryLocation(facetSeq._geom, j, new Coordinate(closestPt[1]))\n  }\n  toString() {\n    const buf = new StringBuffer()\n    buf.append('LINESTRING ( ')\n    const p = new Coordinate()\n    for (let i = this._start; i < this._end; i++) {\n      if (i > this._start) buf.append(', ')\n      this._pts.getCoordinate(i, p)\n      buf.append(p.x + ' ' + p.y)\n    }\n    buf.append(' )')\n    return buf.toString()\n  }\n  computeDistancePointLine(pt, facetSeq, locs) {\n    let minDistance = Double.MAX_VALUE\n    for (let i = facetSeq._start; i < facetSeq._end - 1; i++) {\n      const q0 = facetSeq._pts.getCoordinate(i)\n      const q1 = facetSeq._pts.getCoordinate(i + 1)\n      const dist = Distance.pointToSegment(pt, q0, q1)\n      if (dist < minDistance) {\n        minDistance = dist\n        if (locs !== null) this.updateNearestLocationsPointLine(pt, facetSeq, i, q0, q1, locs)\n        if (minDistance <= 0.0) return minDistance\n      }\n    }\n    return minDistance\n  }\n  isPoint() {\n    return this._end - this._start === 1\n  }\n  distance(facetSeq) {\n    const isPoint = this.isPoint()\n    const isPointOther = facetSeq.isPoint()\n    let distance = null\n    if (isPoint && isPointOther) {\n      const pt = this._pts.getCoordinate(this._start)\n      const seqPt = facetSeq._pts.getCoordinate(facetSeq._start)\n      distance = pt.distance(seqPt)\n    } else if (isPoint) {\n      const pt = this._pts.getCoordinate(this._start)\n      distance = this.computeDistancePointLine(pt, facetSeq, null)\n    } else if (isPointOther) {\n      const seqPt = facetSeq._pts.getCoordinate(facetSeq._start)\n      distance = this.computeDistancePointLine(seqPt, this, null)\n    } else {\n      distance = this.computeDistanceLineLine(facetSeq, null)\n    }\n    return distance\n  }\n}\n","import LineString from '../../geom/LineString.js'\nimport FacetSequence from './FacetSequence.js'\nimport STRtree from '../../index/strtree/STRtree.js'\nimport Point from '../../geom/Point.js'\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nexport default class FacetSequenceTreeBuilder {\n  static addFacetSequences(geom, pts, sections) {\n    let i = 0\n    const size = pts.size()\n    while (i <= size - 1) {\n      let end = i + FacetSequenceTreeBuilder.FACET_SEQUENCE_SIZE + 1\n      if (end >= size - 1) end = size\n      const sect = new FacetSequence(geom, pts, i, end)\n      sections.add(sect)\n      i = i + FacetSequenceTreeBuilder.FACET_SEQUENCE_SIZE\n    }\n  }\n  static computeFacetSequences(g) {\n    const sections = new ArrayList()\n    g.apply(new (class {\n      get interfaces_() {\n        return [GeometryComponentFilter]\n      }\n      filter(geom) {\n        let seq = null\n        if (geom instanceof LineString) {\n          seq = geom.getCoordinateSequence()\n          FacetSequenceTreeBuilder.addFacetSequences(geom, seq, sections)\n        } else if (geom instanceof Point) {\n          seq = geom.getCoordinateSequence()\n          FacetSequenceTreeBuilder.addFacetSequences(geom, seq, sections)\n        }\n      }\n    })())\n    return sections\n  }\n  static build(g) {\n    const tree = new STRtree(FacetSequenceTreeBuilder.STR_TREE_NODE_CAPACITY)\n    const sections = FacetSequenceTreeBuilder.computeFacetSequences(g)\n    for (let i = sections.iterator(); i.hasNext(); ) {\n      const section = i.next()\n      tree.insert(section.getEnvelope(), section)\n    }\n    tree.build()\n    return tree\n  }\n}\nFacetSequenceTreeBuilder.FACET_SEQUENCE_SIZE = 6\nFacetSequenceTreeBuilder.STR_TREE_NODE_CAPACITY = 4\n","import ItemBoundable from '../index/strtree/ItemBoundable.js'\nimport FacetSequence from '../operation/distance/FacetSequence.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport LineSegment from '../geom/LineSegment.js'\nimport FacetSequenceTreeBuilder from '../operation/distance/FacetSequenceTreeBuilder.js'\nimport Distance from '../algorithm/Distance.js'\nimport ItemDistance from '../index/strtree/ItemDistance.js'\nexport default class MinimumClearance {\n  constructor() {\n    MinimumClearance.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._minClearance = null\n    this._minClearancePts = null\n    const geom = arguments[0]\n    this._inputGeom = geom\n  }\n  static getLine(g) {\n    const rp = new MinimumClearance(g)\n    return rp.getLine()\n  }\n  static getDistance(g) {\n    const rp = new MinimumClearance(g)\n    return rp.getDistance()\n  }\n  getLine() {\n    this.compute()\n    if (this._minClearancePts === null || this._minClearancePts[0] === null) return this._inputGeom.getFactory().createLineString()\n    return this._inputGeom.getFactory().createLineString(this._minClearancePts)\n  }\n  compute() {\n    if (this._minClearancePts !== null) return null\n    this._minClearancePts = new Array(2).fill(null)\n    this._minClearance = Double.MAX_VALUE\n    if (this._inputGeom.isEmpty()) \n      return null\n    \n    const geomTree = FacetSequenceTreeBuilder.build(this._inputGeom)\n    const nearest = geomTree.nearestNeighbour(new MinClearanceDistance())\n    const mcd = new MinClearanceDistance()\n    this._minClearance = mcd.distance(nearest[0], nearest[1])\n    this._minClearancePts = mcd.getCoordinates()\n  }\n  getDistance() {\n    this.compute()\n    return this._minClearance\n  }\n}\nclass MinClearanceDistance {\n  constructor() {\n    MinClearanceDistance.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._minDist = Double.MAX_VALUE\n    this._minPts = new Array(2).fill(null)\n  }\n  vertexDistance(fs1, fs2) {\n    for (let i1 = 0; i1 < fs1.size(); i1++) \n      for (let i2 = 0; i2 < fs2.size(); i2++) {\n        const p1 = fs1.getCoordinate(i1)\n        const p2 = fs2.getCoordinate(i2)\n        if (!p1.equals2D(p2)) {\n          const d = p1.distance(p2)\n          if (d < this._minDist) {\n            this._minDist = d\n            this._minPts[0] = p1\n            this._minPts[1] = p2\n            if (d === 0.0) return d\n          }\n        }\n      }\n    \n    return this._minDist\n  }\n  getCoordinates() {\n    return this._minPts\n  }\n  segmentDistance(fs1, fs2) {\n    for (let i1 = 0; i1 < fs1.size(); i1++) \n      for (let i2 = 1; i2 < fs2.size(); i2++) {\n        const p = fs1.getCoordinate(i1)\n        const seg0 = fs2.getCoordinate(i2 - 1)\n        const seg1 = fs2.getCoordinate(i2)\n        if (!(p.equals2D(seg0) || p.equals2D(seg1))) {\n          const d = Distance.pointToSegment(p, seg0, seg1)\n          if (d < this._minDist) {\n            this._minDist = d\n            this.updatePts(p, seg0, seg1)\n            if (d === 0.0) return d\n          }\n        }\n      }\n    \n    return this._minDist\n  }\n  distance() {\n    if (arguments[0] instanceof ItemBoundable && arguments[1] instanceof ItemBoundable) {\n      const b1 = arguments[0], b2 = arguments[1]\n      const fs1 = b1.getItem()\n      const fs2 = b2.getItem()\n      this._minDist = Double.MAX_VALUE\n      return this.distance(fs1, fs2)\n    } else if (arguments[0] instanceof FacetSequence && arguments[1] instanceof FacetSequence) {\n      const fs1 = arguments[0], fs2 = arguments[1]\n      this.vertexDistance(fs1, fs2)\n      if (fs1.size() === 1 && fs2.size() === 1) return this._minDist\n      if (this._minDist <= 0.0) return this._minDist\n      this.segmentDistance(fs1, fs2)\n      if (this._minDist <= 0.0) return this._minDist\n      this.segmentDistance(fs2, fs1)\n      return this._minDist\n    }\n  }\n  updatePts(p, seg0, seg1) {\n    this._minPts[0] = p\n    const seg = new LineSegment(seg0, seg1)\n    this._minPts[1] = new Coordinate(seg.closestPoint(p))\n  }\n  get interfaces_() {\n    return [ItemDistance]\n  }\n}\nMinimumClearance.MinClearanceDistance = MinClearanceDistance\n","import CoordinateFilter from '../geom/CoordinateFilter.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport LineSegment from '../geom/LineSegment.js'\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter.js'\nimport Distance from '../algorithm/Distance.js'\nexport default class SimpleMinimumClearance {\n  constructor() {\n    SimpleMinimumClearance.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._minClearance = null\n    this._minClearancePts = null\n    const geom = arguments[0]\n    this._inputGeom = geom\n  }\n  static getLine(g) {\n    const rp = new SimpleMinimumClearance(g)\n    return rp.getLine()\n  }\n  static getDistance(g) {\n    const rp = new SimpleMinimumClearance(g)\n    return rp.getDistance()\n  }\n  getLine() {\n    this.compute()\n    return this._inputGeom.getFactory().createLineString(this._minClearancePts)\n  }\n  updateClearance() {\n    if (arguments.length === 3) {\n      const candidateValue = arguments[0], p0 = arguments[1], p1 = arguments[2]\n      if (candidateValue < this._minClearance) {\n        this._minClearance = candidateValue\n        this._minClearancePts[0] = new Coordinate(p0)\n        this._minClearancePts[1] = new Coordinate(p1)\n      }\n    } else if (arguments.length === 4) {\n      const candidateValue = arguments[0], p = arguments[1], seg0 = arguments[2], seg1 = arguments[3]\n      if (candidateValue < this._minClearance) {\n        this._minClearance = candidateValue\n        this._minClearancePts[0] = new Coordinate(p)\n        const seg = new LineSegment(seg0, seg1)\n        this._minClearancePts[1] = new Coordinate(seg.closestPoint(p))\n      }\n    }\n  }\n  compute() {\n    if (this._minClearancePts !== null) return null\n    this._minClearancePts = new Array(2).fill(null)\n    this._minClearance = Double.MAX_VALUE\n    this._inputGeom.apply(new VertexCoordinateFilter(this))\n  }\n  getDistance() {\n    this.compute()\n    return this._minClearance\n  }\n}\nclass VertexCoordinateFilter {\n  constructor() {\n    VertexCoordinateFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.smc = null\n    const smc = arguments[0]\n    this.smc = smc\n  }\n  filter(coord) {\n    this.smc._inputGeom.apply(new ComputeMCCoordinateSequenceFilter(this.smc, coord))\n  }\n  get interfaces_() {\n    return [CoordinateFilter]\n  }\n}\nclass ComputeMCCoordinateSequenceFilter {\n  constructor() {\n    ComputeMCCoordinateSequenceFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.smc = null\n    this._queryPt = null\n    const smc = arguments[0], queryPt = arguments[1]\n    this.smc = smc\n    this._queryPt = queryPt\n  }\n  isGeometryChanged() {\n    return false\n  }\n  checkVertexDistance(vertex) {\n    const vertexDist = vertex.distance(this._queryPt)\n    if (vertexDist > 0) \n      this.smc.updateClearance(vertexDist, this._queryPt, vertex)\n    \n  }\n  filter(seq, i) {\n    this.checkVertexDistance(seq.getCoordinate(i))\n    if (i > 0) \n      this.checkSegmentDistance(seq.getCoordinate(i - 1), seq.getCoordinate(i))\n    \n  }\n  checkSegmentDistance(seg0, seg1) {\n    if (this._queryPt.equals2D(seg0) || this._queryPt.equals2D(seg1)) return null\n    const segDist = Distance.pointToSegment(this._queryPt, seg1, seg0)\n    if (segDist > 0) this.smc.updateClearance(segDist, this._queryPt, seg1, seg0)\n  }\n  isDone() {\n    return false\n  }\n  get interfaces_() {\n    return [CoordinateSequenceFilter]\n  }\n}\nSimpleMinimumClearance.VertexCoordinateFilter = VertexCoordinateFilter\nSimpleMinimumClearance.ComputeMCCoordinateSequenceFilter = ComputeMCCoordinateSequenceFilter\n","import CoordinateList from '../geom/CoordinateList.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport LineSegment from '../geom/LineSegment.js'\nexport default class DouglasPeuckerLineSimplifier {\n  constructor() {\n    DouglasPeuckerLineSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._usePt = null\n    this._distanceTolerance = null\n    this._seg = new LineSegment()\n    const pts = arguments[0]\n    this._pts = pts\n  }\n  static simplify(pts, distanceTolerance) {\n    const simp = new DouglasPeuckerLineSimplifier(pts)\n    simp.setDistanceTolerance(distanceTolerance)\n    return simp.simplify()\n  }\n  simplifySection(i, j) {\n    if (i + 1 === j) \n      return null\n    \n    this._seg.p0 = this._pts[i]\n    this._seg.p1 = this._pts[j]\n    let maxDistance = -1.0\n    let maxIndex = i\n    for (let k = i + 1; k < j; k++) {\n      const distance = this._seg.distance(this._pts[k])\n      if (distance > maxDistance) {\n        maxDistance = distance\n        maxIndex = k\n      }\n    }\n    if (maxDistance <= this._distanceTolerance) {\n      for (let k = i + 1; k < j; k++) \n        this._usePt[k] = false\n      \n    } else {\n      this.simplifySection(i, maxIndex)\n      this.simplifySection(maxIndex, j)\n    }\n  }\n  setDistanceTolerance(distanceTolerance) {\n    this._distanceTolerance = distanceTolerance\n  }\n  simplify() {\n    this._usePt = new Array(this._pts.length).fill(null)\n    for (let i = 0; i < this._pts.length; i++) \n      this._usePt[i] = true\n    \n    this.simplifySection(0, this._pts.length - 1)\n    const coordList = new CoordinateList()\n    for (let i = 0; i < this._pts.length; i++) \n      if (this._usePt[i]) coordList.add(new Coordinate(this._pts[i]))\n    \n    return coordList.toCoordinateArray()\n  }\n}\n","import DouglasPeuckerLineSimplifier from './DouglasPeuckerLineSimplifier.js'\nimport GeometryTransformer from '../geom/util/GeometryTransformer.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Polygon from '../geom/Polygon.js'\nimport LinearRing from '../geom/LinearRing.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nexport default class DouglasPeuckerSimplifier {\n  constructor() {\n    DouglasPeuckerSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._distanceTolerance = null\n    this._isEnsureValidTopology = true\n    const inputGeom = arguments[0]\n    this._inputGeom = inputGeom\n  }\n  static simplify(geom, distanceTolerance) {\n    const tss = new DouglasPeuckerSimplifier(geom)\n    tss.setDistanceTolerance(distanceTolerance)\n    return tss.getResultGeometry()\n  }\n  setEnsureValid(isEnsureValidTopology) {\n    this._isEnsureValidTopology = isEnsureValidTopology\n  }\n  getResultGeometry() {\n    if (this._inputGeom.isEmpty()) return this._inputGeom.copy()\n    return new DPTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom)\n  }\n  setDistanceTolerance(distanceTolerance) {\n    if (distanceTolerance < 0.0) throw new IllegalArgumentException('Tolerance must be non-negative')\n    this._distanceTolerance = distanceTolerance\n  }\n}\nclass DPTransformer extends GeometryTransformer {\n  constructor() {\n    super()\n    DPTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isEnsureValidTopology = true\n    this._distanceTolerance = null\n    const isEnsureValidTopology = arguments[0], distanceTolerance = arguments[1]\n    this._isEnsureValidTopology = isEnsureValidTopology\n    this._distanceTolerance = distanceTolerance\n  }\n  transformPolygon(geom, parent) {\n    if (geom.isEmpty()) return null\n    const rawGeom = super.transformPolygon.call(this, geom, parent)\n    if (parent instanceof MultiPolygon) \n      return rawGeom\n    \n    return this.createValidArea(rawGeom)\n  }\n  createValidArea(rawAreaGeom) {\n    if (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0)\n    return rawAreaGeom\n  }\n  transformCoordinates(coords, parent) {\n    const inputPts = coords.toCoordinateArray()\n    let newPts = null\n    if (inputPts.length === 0) \n      newPts = new Array(0).fill(null)\n    else \n      newPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this._distanceTolerance)\n    \n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n  transformMultiPolygon(geom, parent) {\n    const rawGeom = super.transformMultiPolygon.call(this, geom, parent)\n    return this.createValidArea(rawGeom)\n  }\n  transformLinearRing(geom, parent) {\n    const removeDegenerateRings = parent instanceof Polygon\n    const simpResult = super.transformLinearRing.call(this, geom, parent)\n    if (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null\n    \n    return simpResult\n  }\n}\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer\n","import LineSegment from '../geom/LineSegment.js'\nexport default class TaggedLineSegment extends LineSegment {\n  constructor() {\n    super()\n    TaggedLineSegment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parent = null\n    this._index = null\n    if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      TaggedLineSegment.constructor_.call(this, p0, p1, null, -1)\n    } else if (arguments.length === 4) {\n      const p0 = arguments[0], p1 = arguments[1], parent = arguments[2], index = arguments[3]\n      LineSegment.constructor_.call(this, p0, p1)\n      this._parent = parent\n      this._index = index\n    }\n  }\n  getIndex() {\n    return this._index\n  }\n  getParent() {\n    return this._parent\n  }\n}\n","import TaggedLineSegment from './TaggedLineSegment.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class TaggedLineString {\n  constructor() {\n    TaggedLineString.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._parentLine = null\n    this._segs = null\n    this._resultSegs = new ArrayList()\n    this._minimumSize = null\n    if (arguments.length === 1) {\n      const parentLine = arguments[0]\n      TaggedLineString.constructor_.call(this, parentLine, 2)\n    } else if (arguments.length === 2) {\n      const parentLine = arguments[0], minimumSize = arguments[1]\n      this._parentLine = parentLine\n      this._minimumSize = minimumSize\n      this.init()\n    }\n  }\n  static extractCoordinates(segs) {\n    const pts = new Array(segs.size() + 1).fill(null)\n    let seg = null\n    for (let i = 0; i < segs.size(); i++) {\n      seg = segs.get(i)\n      pts[i] = seg.p0\n    }\n    pts[pts.length - 1] = seg.p1\n    return pts\n  }\n  addToResult(seg) {\n    this._resultSegs.add(seg)\n  }\n  asLineString() {\n    return this._parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this._resultSegs))\n  }\n  getResultSize() {\n    const resultSegsSize = this._resultSegs.size()\n    return resultSegsSize === 0 ? 0 : resultSegsSize + 1\n  }\n  getParent() {\n    return this._parentLine\n  }\n  getSegment(i) {\n    return this._segs[i]\n  }\n  getParentCoordinates() {\n    return this._parentLine.getCoordinates()\n  }\n  getMinimumSize() {\n    return this._minimumSize\n  }\n  asLinearRing() {\n    return this._parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this._resultSegs))\n  }\n  getSegments() {\n    return this._segs\n  }\n  init() {\n    const pts = this._parentLine.getCoordinates()\n    this._segs = new Array(pts.length - 1).fill(null)\n    for (let i = 0; i < pts.length - 1; i++) {\n      const seg = new TaggedLineSegment(pts[i], pts[i + 1], this._parentLine, i)\n      this._segs[i] = seg\n    }\n  }\n  getResultCoordinates() {\n    return TaggedLineString.extractCoordinates(this._resultSegs)\n  }\n}\n","import Quadtree from '../index/quadtree/Quadtree.js'\nimport ItemVisitor from '../index/ItemVisitor.js'\nimport LineSegment from '../geom/LineSegment.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Envelope from '../geom/Envelope.js'\nimport TaggedLineString from './TaggedLineString.js'\nexport default class LineSegmentIndex {\n  constructor() {\n    LineSegmentIndex.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._index = new Quadtree()\n  }\n  remove(seg) {\n    this._index.remove(new Envelope(seg.p0, seg.p1), seg)\n  }\n  add() {\n    if (arguments[0] instanceof TaggedLineString) {\n      const line = arguments[0]\n      const segs = line.getSegments()\n      for (let i = 0; i < segs.length; i++) {\n        const seg = segs[i]\n        this.add(seg)\n      }\n    } else if (arguments[0] instanceof LineSegment) {\n      const seg = arguments[0]\n      this._index.insert(new Envelope(seg.p0, seg.p1), seg)\n    }\n  }\n  query(querySeg) {\n    const env = new Envelope(querySeg.p0, querySeg.p1)\n    const visitor = new LineSegmentVisitor(querySeg)\n    this._index.query(env, visitor)\n    const itemsFound = visitor.getItems()\n    return itemsFound\n  }\n}\nclass LineSegmentVisitor {\n  constructor() {\n    LineSegmentVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._querySeg = null\n    this._items = new ArrayList()\n    const querySeg = arguments[0]\n    this._querySeg = querySeg\n  }\n  visitItem(item) {\n    const seg = item\n    if (Envelope.intersects(seg.p0, seg.p1, this._querySeg.p0, this._querySeg.p1)) this._items.add(item)\n  }\n  getItems() {\n    return this._items\n  }\n  get interfaces_() {\n    return [ItemVisitor]\n  }\n}\n","import LineSegment from '../geom/LineSegment.js'\nimport LineSegmentIndex from './LineSegmentIndex.js'\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector.js'\nexport default class TaggedLineStringSimplifier {\n  constructor() {\n    TaggedLineStringSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._li = new RobustLineIntersector()\n    this._inputIndex = new LineSegmentIndex()\n    this._outputIndex = new LineSegmentIndex()\n    this._line = null\n    this._linePts = null\n    this._distanceTolerance = 0.0\n    const inputIndex = arguments[0], outputIndex = arguments[1]\n    this._inputIndex = inputIndex\n    this._outputIndex = outputIndex\n  }\n  static isInLineSection(line, sectionIndex, seg) {\n    if (seg.getParent() !== line.getParent()) return false\n    const segIndex = seg.getIndex()\n    if (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true\n    return false\n  }\n  flatten(start, end) {\n    const p0 = this._linePts[start]\n    const p1 = this._linePts[end]\n    const newSeg = new LineSegment(p0, p1)\n    this.remove(this._line, start, end)\n    this._outputIndex.add(newSeg)\n    return newSeg\n  }\n  hasBadIntersection(parentLine, sectionIndex, candidateSeg) {\n    if (this.hasBadOutputIntersection(candidateSeg)) return true\n    if (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true\n    return false\n  }\n  setDistanceTolerance(distanceTolerance) {\n    this._distanceTolerance = distanceTolerance\n  }\n  simplifySection(i, j, depth) {\n    depth += 1\n    const sectionIndex = new Array(2).fill(null)\n    if (i + 1 === j) {\n      const newSeg = this._line.getSegment(i)\n      this._line.addToResult(newSeg)\n      return null\n    }\n    let isValidToSimplify = true\n    if (this._line.getResultSize() < this._line.getMinimumSize()) {\n      const worstCaseSize = depth + 1\n      if (worstCaseSize < this._line.getMinimumSize()) isValidToSimplify = false\n    }\n    const distance = new Array(1).fill(null)\n    const furthestPtIndex = this.findFurthestPoint(this._linePts, i, j, distance)\n    if (distance[0] > this._distanceTolerance) isValidToSimplify = false\n    const candidateSeg = new LineSegment()\n    candidateSeg.p0 = this._linePts[i]\n    candidateSeg.p1 = this._linePts[j]\n    sectionIndex[0] = i\n    sectionIndex[1] = j\n    if (this.hasBadIntersection(this._line, sectionIndex, candidateSeg)) isValidToSimplify = false\n    if (isValidToSimplify) {\n      const newSeg = this.flatten(i, j)\n      this._line.addToResult(newSeg)\n      return null\n    }\n    this.simplifySection(i, furthestPtIndex, depth)\n    this.simplifySection(furthestPtIndex, j, depth)\n  }\n  hasBadOutputIntersection(candidateSeg) {\n    const querySegs = this._outputIndex.query(candidateSeg)\n    for (let i = querySegs.iterator(); i.hasNext(); ) {\n      const querySeg = i.next()\n      if (this.hasInteriorIntersection(querySeg, candidateSeg)) \n        return true\n      \n    }\n    return false\n  }\n  findFurthestPoint(pts, i, j, maxDistance) {\n    const seg = new LineSegment()\n    seg.p0 = pts[i]\n    seg.p1 = pts[j]\n    let maxDist = -1.0\n    let maxIndex = i\n    for (let k = i + 1; k < j; k++) {\n      const midPt = pts[k]\n      const distance = seg.distance(midPt)\n      if (distance > maxDist) {\n        maxDist = distance\n        maxIndex = k\n      }\n    }\n    maxDistance[0] = maxDist\n    return maxIndex\n  }\n  simplify(line) {\n    this._line = line\n    this._linePts = line.getParentCoordinates()\n    this.simplifySection(0, this._linePts.length - 1, 0)\n  }\n  remove(line, start, end) {\n    for (let i = start; i < end; i++) {\n      const seg = line.getSegment(i)\n      this._inputIndex.remove(seg)\n    }\n  }\n  hasInteriorIntersection(seg0, seg1) {\n    this._li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1)\n    return this._li.isInteriorIntersection()\n  }\n  hasBadInputIntersection(parentLine, sectionIndex, candidateSeg) {\n    const querySegs = this._inputIndex.query(candidateSeg)\n    for (let i = querySegs.iterator(); i.hasNext(); ) {\n      const querySeg = i.next()\n      if (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n        if (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue\n        return true\n      }\n    }\n    return false\n  }\n}\n","import TaggedLineStringSimplifier from './TaggedLineStringSimplifier.js'\nimport LineSegmentIndex from './LineSegmentIndex.js'\nexport default class TaggedLinesSimplifier {\n  constructor() {\n    TaggedLinesSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputIndex = new LineSegmentIndex()\n    this._outputIndex = new LineSegmentIndex()\n    this._distanceTolerance = 0.0\n  }\n  setDistanceTolerance(distanceTolerance) {\n    this._distanceTolerance = distanceTolerance\n  }\n  simplify(taggedLines) {\n    for (let i = taggedLines.iterator(); i.hasNext(); ) \n      this._inputIndex.add(i.next())\n    \n    for (let i = taggedLines.iterator(); i.hasNext(); ) {\n      const tlss = new TaggedLineStringSimplifier(this._inputIndex, this._outputIndex)\n      tlss.setDistanceTolerance(this._distanceTolerance)\n      tlss.simplify(i.next())\n    }\n  }\n}\n","import LineString from '../geom/LineString.js'\nimport HashMap from '../../../../java/util/HashMap.js'\nimport GeometryTransformer from '../geom/util/GeometryTransformer.js'\nimport TaggedLinesSimplifier from './TaggedLinesSimplifier.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter.js'\nimport TaggedLineString from './TaggedLineString.js'\nexport default class TopologyPreservingSimplifier {\n  constructor() {\n    TopologyPreservingSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._lineSimplifier = new TaggedLinesSimplifier()\n    this._linestringMap = null\n    const inputGeom = arguments[0]\n    this._inputGeom = inputGeom\n  }\n  static simplify(geom, distanceTolerance) {\n    const tss = new TopologyPreservingSimplifier(geom)\n    tss.setDistanceTolerance(distanceTolerance)\n    return tss.getResultGeometry()\n  }\n  getResultGeometry() {\n    if (this._inputGeom.isEmpty()) return this._inputGeom.copy()\n    this._linestringMap = new HashMap()\n    this._inputGeom.apply(new LineStringMapBuilderFilter(this))\n    this._lineSimplifier.simplify(this._linestringMap.values())\n    const result = new LineStringTransformer(this._linestringMap).transform(this._inputGeom)\n    return result\n  }\n  setDistanceTolerance(distanceTolerance) {\n    if (distanceTolerance < 0.0) throw new IllegalArgumentException('Tolerance must be non-negative')\n    this._lineSimplifier.setDistanceTolerance(distanceTolerance)\n  }\n}\nclass LineStringTransformer extends GeometryTransformer {\n  constructor() {\n    super()\n    LineStringTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._linestringMap = null\n    const linestringMap = arguments[0]\n    this._linestringMap = linestringMap\n  }\n  transformCoordinates(coords, parent) {\n    if (coords.size() === 0) return null\n    if (parent instanceof LineString) {\n      const taggedLine = this._linestringMap.get(parent)\n      return this.createCoordinateSequence(taggedLine.getResultCoordinates())\n    }\n    return super.transformCoordinates.call(this, coords, parent)\n  }\n}\nclass LineStringMapBuilderFilter {\n  constructor() {\n    LineStringMapBuilderFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.tps = null\n    const tps = arguments[0]\n    this.tps = tps\n  }\n  filter(geom) {\n    if (geom instanceof LineString) {\n      const line = geom\n      if (line.isEmpty()) return null\n      const minSize = line.isClosed() ? 4 : 2\n      const taggedLine = new TaggedLineString(line, minSize)\n      this.tps._linestringMap.put(line, taggedLine)\n    }\n  }\n  get interfaces_() {\n    return [GeometryComponentFilter]\n  }\n}\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter\n","import CoordinateList from '../geom/CoordinateList.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport Double from '../../../../java/lang/Double.js'\nimport Triangle from '../geom/Triangle.js'\nexport default class VWLineSimplifier {\n  constructor() {\n    VWLineSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pts = null\n    this._tolerance = null\n    const pts = arguments[0], distanceTolerance = arguments[1]\n    this._pts = pts\n    this._tolerance = distanceTolerance * distanceTolerance\n  }\n  static simplify(pts, distanceTolerance) {\n    const simp = new VWLineSimplifier(pts, distanceTolerance)\n    return simp.simplify()\n  }\n  simplifyVertex(vwLine) {\n    let curr = vwLine\n    let minArea = curr.getArea()\n    let minVertex = null\n    while (curr !== null) {\n      const area = curr.getArea()\n      if (area < minArea) {\n        minArea = area\n        minVertex = curr\n      }\n      curr = curr._next\n    }\n    if (minVertex !== null && minArea < this._tolerance) \n      minVertex.remove()\n    \n    if (!vwLine.isLive()) return -1\n    return minArea\n  }\n  simplify() {\n    const vwLine = VWVertex.buildLine(this._pts)\n    let minArea = this._tolerance\n    do \n      minArea = this.simplifyVertex(vwLine)\n    while (minArea < this._tolerance)\n    const simp = vwLine.getCoordinates()\n    if (simp.length < 2) \n      return [simp[0], new Coordinate(simp[0])]\n    \n    return simp\n  }\n}\nclass VWVertex {\n  constructor() {\n    VWVertex.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pt = null\n    this._prev = null\n    this._next = null\n    this._area = VWVertex.MAX_AREA\n    this._isLive = true\n    const pt = arguments[0]\n    this._pt = pt\n  }\n  static buildLine(pts) {\n    let first = null\n    let prev = null\n    for (let i = 0; i < pts.length; i++) {\n      const v = new VWVertex(pts[i])\n      if (first === null) first = v\n      v.setPrev(prev)\n      if (prev !== null) {\n        prev.setNext(v)\n        prev.updateArea()\n      }\n      prev = v\n    }\n    return first\n  }\n  getCoordinates() {\n    const coords = new CoordinateList()\n    let curr = this\n    do {\n      coords.add(curr._pt, false)\n      curr = curr._next\n    } while (curr !== null)\n    return coords.toCoordinateArray()\n  }\n  getArea() {\n    return this._area\n  }\n  updateArea() {\n    if (this._prev === null || this._next === null) {\n      this._area = VWVertex.MAX_AREA\n      return null\n    }\n    this._area = Math.abs(Triangle.area(this._prev._pt, this._pt, this._next._pt))\n  }\n  remove() {\n    const tmpPrev = this._prev\n    const tmpNext = this._next\n    let result = null\n    if (this._prev !== null) {\n      this._prev.setNext(tmpNext)\n      this._prev.updateArea()\n      result = this._prev\n    }\n    if (this._next !== null) {\n      this._next.setPrev(tmpPrev)\n      this._next.updateArea()\n      if (result === null) result = this._next\n    }\n    this._isLive = false\n    return result\n  }\n  isLive() {\n    return this._isLive\n  }\n  setPrev(prev) {\n    this._prev = prev\n  }\n  setNext(next) {\n    this._next = next\n  }\n}\nVWVertex.MAX_AREA = Double.MAX_VALUE\nVWLineSimplifier.VWVertex = VWVertex\n","import GeometryTransformer from '../geom/util/GeometryTransformer.js'\nimport VWLineSimplifier from './VWLineSimplifier.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Polygon from '../geom/Polygon.js'\nimport LinearRing from '../geom/LinearRing.js'\nimport MultiPolygon from '../geom/MultiPolygon.js'\nexport default class VWSimplifier {\n  constructor() {\n    VWSimplifier.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._inputGeom = null\n    this._distanceTolerance = null\n    this._isEnsureValidTopology = true\n    const inputGeom = arguments[0]\n    this._inputGeom = inputGeom\n  }\n  static simplify(geom, distanceTolerance) {\n    const simp = new VWSimplifier(geom)\n    simp.setDistanceTolerance(distanceTolerance)\n    return simp.getResultGeometry()\n  }\n  setEnsureValid(isEnsureValidTopology) {\n    this._isEnsureValidTopology = isEnsureValidTopology\n  }\n  getResultGeometry() {\n    if (this._inputGeom.isEmpty()) return this._inputGeom.copy()\n    return new VWTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom)\n  }\n  setDistanceTolerance(distanceTolerance) {\n    if (distanceTolerance < 0.0) throw new IllegalArgumentException('Tolerance must be non-negative')\n    this._distanceTolerance = distanceTolerance\n  }\n}\nclass VWTransformer extends GeometryTransformer {\n  constructor() {\n    super()\n    VWTransformer.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isEnsureValidTopology = true\n    this._distanceTolerance = null\n    const isEnsureValidTopology = arguments[0], distanceTolerance = arguments[1]\n    this._isEnsureValidTopology = isEnsureValidTopology\n    this._distanceTolerance = distanceTolerance\n  }\n  transformPolygon(geom, parent) {\n    if (geom.isEmpty()) return null\n    const rawGeom = super.transformPolygon.call(this, geom, parent)\n    if (parent instanceof MultiPolygon) \n      return rawGeom\n    \n    return this.createValidArea(rawGeom)\n  }\n  createValidArea(rawAreaGeom) {\n    if (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0)\n    return rawAreaGeom\n  }\n  transformCoordinates(coords, parent) {\n    const inputPts = coords.toCoordinateArray()\n    let newPts = null\n    if (inputPts.length === 0) \n      newPts = new Array(0).fill(null)\n    else \n      newPts = VWLineSimplifier.simplify(inputPts, this._distanceTolerance)\n    \n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  }\n  transformMultiPolygon(geom, parent) {\n    const rawGeom = super.transformMultiPolygon.call(this, geom, parent)\n    return this.createValidArea(rawGeom)\n  }\n  transformLinearRing(geom, parent) {\n    const removeDegenerateRings = parent instanceof Polygon\n    const simpResult = super.transformLinearRing.call(this, geom, parent)\n    if (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null\n    \n    return simpResult\n  }\n}\nVWSimplifier.VWTransformer = VWTransformer\n","import Coordinate from '../geom/Coordinate.js'\nexport default class SplitSegment {\n  constructor() {\n    SplitSegment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._seg = null\n    this._segLen = null\n    this._splitPt = null\n    this._minimumLen = 0.0\n    const seg = arguments[0]\n    this._seg = seg\n    this._segLen = seg.getLength()\n  }\n  static pointAlongReverse(seg, segmentLengthFraction) {\n    const coord = new Coordinate()\n    coord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x)\n    coord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y)\n    return coord\n  }\n  splitAt() {\n    if (arguments.length === 1) {\n      const pt = arguments[0]\n      const minFrac = this._minimumLen / this._segLen\n      if (pt.distance(this._seg.p0) < this._minimumLen) {\n        this._splitPt = this._seg.pointAlong(minFrac)\n        return null\n      }\n      if (pt.distance(this._seg.p1) < this._minimumLen) {\n        this._splitPt = SplitSegment.pointAlongReverse(this._seg, minFrac)\n        return null\n      }\n      this._splitPt = pt\n    } else if (arguments.length === 2) {\n      const length = arguments[0], endPt = arguments[1]\n      const actualLen = this.getConstrainedLength(length)\n      const frac = actualLen / this._segLen\n      if (endPt.equals2D(this._seg.p0)) this._splitPt = this._seg.pointAlong(frac); else this._splitPt = SplitSegment.pointAlongReverse(this._seg, frac)\n    }\n  }\n  setMinimumLength(minLen) {\n    this._minimumLen = minLen\n  }\n  getConstrainedLength(len) {\n    if (len < this._minimumLen) return this._minimumLen\n    return len\n  }\n  getSplitPoint() {\n    return this._splitPt\n  }\n}\n","export default class ConstraintSplitPointFinder {\n  findSplitPoint(seg, encroachPt) {}\n}\n","import SplitSegment from './SplitSegment.js'\nimport ConstraintSplitPointFinder from './ConstraintSplitPointFinder.js'\nexport default class NonEncroachingSplitPointFinder {\n  static projectedSplitPoint(seg, encroachPt) {\n    const lineSeg = seg.getLineSegment()\n    const projPt = lineSeg.project(encroachPt)\n    return projPt\n  }\n  findSplitPoint(seg, encroachPt) {\n    const lineSeg = seg.getLineSegment()\n    const segLen = lineSeg.getLength()\n    const midPtLen = segLen / 2\n    const splitSeg = new SplitSegment(lineSeg)\n    const projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt)\n    const nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8\n    let maxSplitLen = nonEncroachDiam\n    if (maxSplitLen > midPtLen) \n      maxSplitLen = midPtLen\n    \n    splitSeg.setMinimumLength(maxSplitLen)\n    splitSeg.splitAt(projPt)\n    return splitSeg.getSplitPoint()\n  }\n  get interfaces_() {\n    return [ConstraintSplitPointFinder]\n  }\n}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence.js'\nimport DD from '../../math/DD.js'\nimport System from '../../../../../java/lang/System.js'\nimport Triangle from '../../geom/Triangle.js'\nexport default class TrianglePredicate {\n  static triArea(a, b, c) {\n    return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)\n  }\n  static isInCircleDDNormalized(a, b, c, p) {\n    const adx = DD.valueOf(a.x).selfSubtract(p.x)\n    const ady = DD.valueOf(a.y).selfSubtract(p.y)\n    const bdx = DD.valueOf(b.x).selfSubtract(p.x)\n    const bdy = DD.valueOf(b.y).selfSubtract(p.y)\n    const cdx = DD.valueOf(c.x).selfSubtract(p.x)\n    const cdy = DD.valueOf(c.y).selfSubtract(p.y)\n    const abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady))\n    const bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy))\n    const cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy))\n    const alift = adx.multiply(adx).selfAdd(ady.multiply(ady))\n    const blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy))\n    const clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy))\n    const sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet))\n    const isInCircle = sum.doubleValue() > 0\n    return isInCircle\n  }\n  static checkRobustInCircle(a, b, c, p) {\n    const nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p)\n    const isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p)\n    const isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p)\n    const circumCentre = Triangle.circumcentre(a, b, c)\n    System.out.println('p radius diff a = ' + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre))\n    if (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n      System.out.println('inCircle robustness failure (double result = ' + nonRobustInCircle + ', DD result = ' + isInCircleDD + ', CC result = ' + isInCircleCC + ')')\n      System.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])))\n      System.out.println('Circumcentre = ' + WKTWriter.toPoint(circumCentre) + ' radius = ' + a.distance(circumCentre))\n      System.out.println('p radius diff a = ' + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1))\n      System.out.println('p radius diff b = ' + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1))\n      System.out.println('p radius diff c = ' + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1))\n      System.out.println()\n    }\n  }\n  static isInCircleDDFast(a, b, c, p) {\n    const aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p))\n    const bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p))\n    const cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p))\n    const pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c))\n    const sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm)\n    const isInCircle = sum.doubleValue() > 0\n    return isInCircle\n  }\n  static isInCircleCC(a, b, c, p) {\n    const cc = Triangle.circumcentre(a, b, c)\n    const ccRadius = a.distance(cc)\n    const pRadiusDiff = p.distance(cc) - ccRadius\n    return pRadiusDiff <= 0\n  }\n  static isInCircleNormalized(a, b, c, p) {\n    const adx = a.x - p.x\n    const ady = a.y - p.y\n    const bdx = b.x - p.x\n    const bdy = b.y - p.y\n    const cdx = c.x - p.x\n    const cdy = c.y - p.y\n    const abdet = adx * bdy - bdx * ady\n    const bcdet = bdx * cdy - cdx * bdy\n    const cadet = cdx * ady - adx * cdy\n    const alift = adx * adx + ady * ady\n    const blift = bdx * bdx + bdy * bdy\n    const clift = cdx * cdx + cdy * cdy\n    const disc = alift * bcdet + blift * cadet + clift * abdet\n    return disc > 0\n  }\n  static isInCircleDDSlow(a, b, c, p) {\n    const px = DD.valueOf(p.x)\n    const py = DD.valueOf(p.y)\n    const ax = DD.valueOf(a.x)\n    const ay = DD.valueOf(a.y)\n    const bx = DD.valueOf(b.x)\n    const by = DD.valueOf(b.y)\n    const cx = DD.valueOf(c.x)\n    const cy = DD.valueOf(c.y)\n    const aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py))\n    const bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py))\n    const cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py))\n    const pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy))\n    const sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm)\n    const isInCircle = sum.doubleValue() > 0\n    return isInCircle\n  }\n  static isInCircleNonRobust(a, b, c, p) {\n    const isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0\n    return isInCircle\n  }\n  static isInCircleRobust(a, b, c, p) {\n    return TrianglePredicate.isInCircleNormalized(a, b, c, p)\n  }\n  static triAreaDDSlow(ax, ay, bx, by, cx, cy) {\n    return bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)))\n  }\n  static triAreaDDFast(a, b, c) {\n    const t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y))\n    const t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x))\n    return t1.selfSubtract(t2)\n  }\n}\n","import NotRepresentableException from '../../algorithm/NotRepresentableException.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport TrianglePredicate from './TrianglePredicate.js'\nimport System from '../../../../../java/lang/System.js'\nimport HCoordinate from '../../algorithm/HCoordinate.js'\nexport default class Vertex {\n  constructor() {\n    Vertex.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._p = null\n    if (arguments.length === 1) {\n      const _p = arguments[0]\n      this._p = new Coordinate(_p)\n    } else if (arguments.length === 2) {\n      const _x = arguments[0], _y = arguments[1]\n      this._p = new Coordinate(_x, _y)\n    } else if (arguments.length === 3) {\n      const _x = arguments[0], _y = arguments[1], _z = arguments[2]\n      this._p = new Coordinate(_x, _y, _z)\n    }\n  }\n  static interpolateZ() {\n    if (arguments.length === 3) {\n      const p = arguments[0], p0 = arguments[1], p1 = arguments[2]\n      const segLen = p0.distance(p1)\n      const ptLen = p.distance(p0)\n      const dz = p1.getZ() - p0.getZ()\n      const pz = p0.getZ() + dz * (ptLen / segLen)\n      return pz\n    } else if (arguments.length === 4) {\n      const p = arguments[0], v0 = arguments[1], v1 = arguments[2], v2 = arguments[3]\n      const x0 = v0.x\n      const y0 = v0.y\n      const a = v1.x - x0\n      const b = v2.x - x0\n      const c = v1.y - y0\n      const d = v2.y - y0\n      const det = a * d - b * c\n      const dx = p.x - x0\n      const dy = p.y - y0\n      const t = (d * dx - b * dy) / det\n      const u = (-c * dx + a * dy) / det\n      const z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ())\n      return z\n    }\n  }\n  circleCenter(b, c) {\n    const a = new Vertex(this.getX(), this.getY())\n    const cab = this.bisector(a, b)\n    const cbc = this.bisector(b, c)\n    const hcc = new HCoordinate(cab, cbc)\n    let cc = null\n    try {\n      cc = new Vertex(hcc.getX(), hcc.getY())\n    } catch (nre) {\n      if (nre instanceof NotRepresentableException) {\n        System.err.println('a: ' + a + '  b: ' + b + '  c: ' + c)\n        System.err.println(nre)\n      } else {\n        throw nre\n      }\n    } finally {}\n    return cc\n  }\n  dot(v) {\n    return this._p.x * v.getX() + this._p.y * v.getY()\n  }\n  magn() {\n    return Math.sqrt(this._p.x * this._p.x + this._p.y * this._p.y)\n  }\n  getZ() {\n    return this._p.getZ()\n  }\n  bisector(a, b) {\n    const dx = b.getX() - a.getX()\n    const dy = b.getY() - a.getY()\n    const l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0)\n    const l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0)\n    return new HCoordinate(l1, l2)\n  }\n  equals() {\n    if (arguments.length === 1) {\n      const _x = arguments[0]\n      if (this._p.x === _x.getX() && this._p.y === _x.getY()) \n        return true\n      else \n        return false\n      \n    } else if (arguments.length === 2) {\n      const _x = arguments[0], tolerance = arguments[1]\n      if (this._p.distance(_x.getCoordinate()) < tolerance) \n        return true\n      else \n        return false\n      \n    }\n  }\n  getCoordinate() {\n    return this._p\n  }\n  isInCircle(a, b, c) {\n    return TrianglePredicate.isInCircleRobust(a._p, b._p, c._p, this._p)\n  }\n  interpolateZValue(v0, v1, v2) {\n    const x0 = v0.getX()\n    const y0 = v0.getY()\n    const a = v1.getX() - x0\n    const b = v2.getX() - x0\n    const c = v1.getY() - y0\n    const d = v2.getY() - y0\n    const det = a * d - b * c\n    const dx = this.getX() - x0\n    const dy = this.getY() - y0\n    const t = (d * dx - b * dy) / det\n    const u = (-c * dx + a * dy) / det\n    const z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ())\n    return z\n  }\n  midPoint(a) {\n    const xm = (this._p.x + a.getX()) / 2.0\n    const ym = (this._p.y + a.getY()) / 2.0\n    const zm = (this._p.getZ() + a.getZ()) / 2.0\n    return new Vertex(xm, ym, zm)\n  }\n  rightOf(e) {\n    return this.isCCW(e.dest(), e.orig())\n  }\n  isCCW(b, c) {\n    return (b._p.x - this._p.x) * (c._p.y - this._p.y) - (b._p.y - this._p.y) * (c._p.x - this._p.x) > 0\n  }\n  getX() {\n    return this._p.x\n  }\n  crossProduct(v) {\n    return this._p.x * v.getY() - this._p.y * v.getX()\n  }\n  setZ(_z) {\n    this._p.setZ(_z)\n  }\n  times(c) {\n    return new Vertex(c * this._p.x, c * this._p.y)\n  }\n  cross() {\n    return new Vertex(this._p.y, -this._p.x)\n  }\n  leftOf(e) {\n    return this.isCCW(e.orig(), e.dest())\n  }\n  toString() {\n    return 'POINT (' + this._p.x + ' ' + this._p.y + ')'\n  }\n  sub(v) {\n    return new Vertex(this._p.x - v.getX(), this._p.y - v.getY())\n  }\n  getY() {\n    return this._p.y\n  }\n  classify(p0, p1) {\n    const p2 = this\n    const a = p1.sub(p0)\n    const b = p2.sub(p0)\n    const sa = a.crossProduct(b)\n    if (sa > 0.0) return Vertex.LEFT\n    if (sa < 0.0) return Vertex.RIGHT\n    if (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND\n    if (a.magn() < b.magn()) return Vertex.BEYOND\n    if (p0.equals(p2)) return Vertex.ORIGIN\n    if (p1.equals(p2)) return Vertex.DESTINATION\n    return Vertex.BETWEEN\n  }\n  sum(v) {\n    return new Vertex(this._p.x + v.getX(), this._p.y + v.getY())\n  }\n  distance(v1, v2) {\n    return Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0))\n  }\n  circumRadiusRatio(b, c) {\n    const x = this.circleCenter(b, c)\n    const radius = this.distance(x, b)\n    let edgeLength = this.distance(this, b)\n    let el = this.distance(b, c)\n    if (el < edgeLength) \n      edgeLength = el\n    \n    el = this.distance(c, this)\n    if (el < edgeLength) \n      edgeLength = el\n    \n    return radius / edgeLength\n  }\n}\nVertex.LEFT = 0\nVertex.RIGHT = 1\nVertex.BEYOND = 2\nVertex.BEHIND = 3\nVertex.BETWEEN = 4\nVertex.ORIGIN = 5\nVertex.DESTINATION = 6\n","import Vertex from './quadedge/Vertex.js'\nexport default class ConstraintVertex extends Vertex {\n  constructor() {\n    super()\n    ConstraintVertex.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._isOnConstraint = null\n    this._constraint = null\n    const p = arguments[0]\n    Vertex.constructor_.call(this, p)\n  }\n  getConstraint() {\n    return this._constraint\n  }\n  setOnConstraint(isOnConstraint) {\n    this._isOnConstraint = isOnConstraint\n  }\n  merge(other) {\n    if (other._isOnConstraint) {\n      this._isOnConstraint = true\n      this._constraint = other._constraint\n    }\n  }\n  isOnConstraint() {\n    return this._isOnConstraint\n  }\n  setConstraint(constraint) {\n    this._isOnConstraint = true\n    this._constraint = constraint\n  }\n}\n","import WKTWriter from '../../io/WKTWriter.js'\nimport LineSegment from '../../geom/LineSegment.js'\nexport default class QuadEdge {\n  constructor() {\n    QuadEdge.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._rot = null\n    this._vertex = null\n    this._next = null\n    this._data = null\n  }\n  static makeEdge(o, d) {\n    const q0 = new QuadEdge()\n    const q1 = new QuadEdge()\n    const q2 = new QuadEdge()\n    const q3 = new QuadEdge()\n    q0._rot = q1\n    q1._rot = q2\n    q2._rot = q3\n    q3._rot = q0\n    q0.setNext(q0)\n    q1.setNext(q3)\n    q2.setNext(q2)\n    q3.setNext(q1)\n    const base = q0\n    base.setOrig(o)\n    base.setDest(d)\n    return base\n  }\n  static swap(e) {\n    const a = e.oPrev()\n    const b = e.sym().oPrev()\n    QuadEdge.splice(e, a)\n    QuadEdge.splice(e.sym(), b)\n    QuadEdge.splice(e, a.lNext())\n    QuadEdge.splice(e.sym(), b.lNext())\n    e.setOrig(a.dest())\n    e.setDest(b.dest())\n  }\n  static splice(a, b) {\n    const alpha = a.oNext().rot()\n    const beta = b.oNext().rot()\n    const t1 = b.oNext()\n    const t2 = a.oNext()\n    const t3 = beta.oNext()\n    const t4 = alpha.oNext()\n    a.setNext(t1)\n    b.setNext(t2)\n    alpha.setNext(t3)\n    beta.setNext(t4)\n  }\n  static connect(a, b) {\n    const e = QuadEdge.makeEdge(a.dest(), b.orig())\n    QuadEdge.splice(e, a.lNext())\n    QuadEdge.splice(e.sym(), b)\n    return e\n  }\n  equalsNonOriented(qe) {\n    if (this.equalsOriented(qe)) return true\n    if (this.equalsOriented(qe.sym())) return true\n    return false\n  }\n  toLineSegment() {\n    return new LineSegment(this._vertex.getCoordinate(), this.dest().getCoordinate())\n  }\n  dest() {\n    return this.sym().orig()\n  }\n  oNext() {\n    return this._next\n  }\n  equalsOriented(qe) {\n    if (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true\n    return false\n  }\n  dNext() {\n    return this.sym().oNext().sym()\n  }\n  lPrev() {\n    return this._next.sym()\n  }\n  rPrev() {\n    return this.sym().oNext()\n  }\n  rot() {\n    return this._rot\n  }\n  oPrev() {\n    return this._rot._next._rot\n  }\n  sym() {\n    return this._rot._rot\n  }\n  setOrig(o) {\n    this._vertex = o\n  }\n  lNext() {\n    return this.invRot().oNext().rot()\n  }\n  getLength() {\n    return this.orig().getCoordinate().distance(this.dest().getCoordinate())\n  }\n  invRot() {\n    return this._rot.sym()\n  }\n  setDest(d) {\n    this.sym().setOrig(d)\n  }\n  setData(data) {\n    this._data = data\n  }\n  getData() {\n    return this._data\n  }\n  delete() {\n    this._rot = null\n  }\n  orig() {\n    return this._vertex\n  }\n  rNext() {\n    return this._rot._next.invRot()\n  }\n  toString() {\n    const p0 = this._vertex.getCoordinate()\n    const p1 = this.dest().getCoordinate()\n    return WKTWriter.toLineString(p0, p1)\n  }\n  isLive() {\n    return this._rot !== null\n  }\n  getPrimary() {\n    if (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this; else return this.sym()\n  }\n  dPrev() {\n    return this.invRot().oNext().invRot()\n  }\n  setNext(next) {\n    this._next = next\n  }\n}\n","import QuadEdge from './quadedge/QuadEdge.js'\nexport default class IncrementalDelaunayTriangulator {\n  constructor() {\n    IncrementalDelaunayTriangulator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._subdiv = null\n    this._isUsingTolerance = false\n    const subdiv = arguments[0]\n    this._subdiv = subdiv\n    this._isUsingTolerance = subdiv.getTolerance() > 0.0\n  }\n  insertSite(v) {\n    let e = this._subdiv.locate(v)\n    if (this._subdiv.isVertexOfEdge(e, v)) {\n      return e\n    } else if (this._subdiv.isOnEdge(e, v.getCoordinate())) {\n      e = e.oPrev()\n      this._subdiv.delete(e.oNext())\n    }\n    let base = this._subdiv.makeEdge(e.orig(), v)\n    QuadEdge.splice(base, e)\n    const startEdge = base\n    do {\n      base = this._subdiv.connect(e, base.sym())\n      e = base.oPrev()\n    } while (e.lNext() !== startEdge)\n    do {\n      const t = e.oPrev()\n      if (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n        QuadEdge.swap(e)\n        e = e.oPrev()\n      } else if (e.oNext() === startEdge) {\n        return base\n      } else {\n        e = e.oNext().lPrev()\n      }\n    } while (true)\n  }\n  insertSites(vertices) {\n    for (let i = vertices.iterator(); i.hasNext(); ) {\n      const v = i.next()\n      this.insertSite(v)\n    }\n  }\n}\n","export default class QuadEdgeLocator {\n  locate(v) {}\n}\n","import QuadEdgeLocator from './QuadEdgeLocator.js'\nexport default class LastFoundQuadEdgeLocator {\n  constructor() {\n    LastFoundQuadEdgeLocator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._subdiv = null\n    this._lastEdge = null\n    const subdiv = arguments[0]\n    this._subdiv = subdiv\n    this.init()\n  }\n  init() {\n    this._lastEdge = this.findEdge()\n  }\n  locate(v) {\n    if (!this._lastEdge.isLive()) \n      this.init()\n    \n    const e = this._subdiv.locateFromEdge(v, this._lastEdge)\n    this._lastEdge = e\n    return e\n  }\n  findEdge() {\n    const edges = this._subdiv.getEdges()\n    return edges.iterator().next()\n  }\n  get interfaces_() {\n    return [QuadEdgeLocator]\n  }\n}\n","import LineSegment from '../../geom/LineSegment.js'\nimport RuntimeException from '../../../../../java/lang/RuntimeException.js'\nexport default class LocateFailureException extends RuntimeException {\n  constructor() {\n    super()\n    LocateFailureException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._seg = null\n    if (arguments.length === 1) {\n      if (typeof arguments[0] === 'string') {\n        const msg = arguments[0]\n        RuntimeException.constructor_.call(this, msg)\n      } else if (arguments[0] instanceof LineSegment) {\n        const seg = arguments[0]\n        RuntimeException.constructor_.call(this, 'Locate failed to converge (at edge: ' + seg + ').  Possible causes include invalid Subdivision topology or very close sites')\n        this._seg = new LineSegment(seg)\n      }\n    } else if (arguments.length === 2) {\n      const msg = arguments[0], seg = arguments[1]\n      RuntimeException.constructor_.call(this, LocateFailureException.msgWithSpatial(msg, seg))\n      this._seg = new LineSegment(seg)\n    }\n  }\n  static msgWithSpatial(msg, seg) {\n    if (seg !== null) return msg + ' [ ' + seg + ' ]'\n    return msg\n  }\n  getSegment() {\n    return this._seg\n  }\n}\n","export default class TriangleVisitor {\n  visit(triEdges) {}\n}\n","import QuadEdge from './QuadEdge.js'\nimport CoordinateList from '../../geom/CoordinateList.js'\nimport HashSet from '../../../../../java/util/HashSet.js'\nimport WKTWriter from '../../io/WKTWriter.js'\nimport GeometryFactory from '../../geom/GeometryFactory.js'\nimport Coordinate from '../../geom/Coordinate.js'\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException.js'\nimport Stack from '../../../../../java/util/Stack.js'\nimport LastFoundQuadEdgeLocator from './LastFoundQuadEdgeLocator.js'\nimport LocateFailureException from './LocateFailureException.js'\nimport Vertex from './Vertex.js'\nimport System from '../../../../../java/lang/System.js'\nimport LineSegment from '../../geom/LineSegment.js'\nimport ArrayList from '../../../../../java/util/ArrayList.js'\nimport Envelope from '../../geom/Envelope.js'\nimport Triangle from '../../geom/Triangle.js'\nimport TriangleVisitor from './TriangleVisitor.js'\nexport default class QuadEdgeSubdivision {\n  constructor() {\n    QuadEdgeSubdivision.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._visitedKey = 0\n    this._quadEdges = new ArrayList()\n    this._startingEdge = null\n    this._tolerance = null\n    this._edgeCoincidenceTolerance = null\n    this._frameVertex = new Array(3).fill(null)\n    this._frameEnv = null\n    this._locator = null\n    this._seg = new LineSegment()\n    this._triEdges = new Array(3).fill(null)\n    const env = arguments[0], tolerance = arguments[1]\n    this._tolerance = tolerance\n    this._edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR\n    this.createFrame(env)\n    this._startingEdge = this.initSubdiv()\n    this._locator = new LastFoundQuadEdgeLocator(this)\n  }\n  static getTriangleEdges(startQE, triEdge) {\n    triEdge[0] = startQE\n    triEdge[1] = triEdge[0].lNext()\n    triEdge[2] = triEdge[1].lNext()\n    if (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException('Edges do not form a triangle')\n  }\n  getTriangleVertices(includeFrame) {\n    const visitor = new TriangleVertexListVisitor()\n    this.visitTriangles(visitor, includeFrame)\n    return visitor.getTriangleVertices()\n  }\n  isFrameVertex(v) {\n    if (v.equals(this._frameVertex[0])) return true\n    if (v.equals(this._frameVertex[1])) return true\n    if (v.equals(this._frameVertex[2])) return true\n    return false\n  }\n  isVertexOfEdge(e, v) {\n    if (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) \n      return true\n    \n    return false\n  }\n  connect(a, b) {\n    const q = QuadEdge.connect(a, b)\n    this._quadEdges.add(q)\n    return q\n  }\n  getVoronoiCellPolygon(qe, geomFact) {\n    const cellPts = new ArrayList()\n    const startQE = qe\n    do {\n      const cc = qe.rot().orig().getCoordinate()\n      cellPts.add(cc)\n      qe = qe.oPrev()\n    } while (qe !== startQE)\n    const coordList = new CoordinateList()\n    coordList.addAll(cellPts, false)\n    coordList.closeRing()\n    if (coordList.size() < 4) {\n      System.out.println(coordList)\n      coordList.add(coordList.get(coordList.size() - 1), true)\n    }\n    const pts = coordList.toCoordinateArray()\n    const cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts))\n    const v = startQE.orig()\n    cellPoly.setUserData(v.getCoordinate())\n    return cellPoly\n  }\n  setLocator(locator) {\n    this._locator = locator\n  }\n  initSubdiv() {\n    const ea = this.makeEdge(this._frameVertex[0], this._frameVertex[1])\n    const eb = this.makeEdge(this._frameVertex[1], this._frameVertex[2])\n    QuadEdge.splice(ea.sym(), eb)\n    const ec = this.makeEdge(this._frameVertex[2], this._frameVertex[0])\n    QuadEdge.splice(eb.sym(), ec)\n    QuadEdge.splice(ec.sym(), ea)\n    return ea\n  }\n  isFrameBorderEdge(e) {\n    const leftTri = new Array(3).fill(null)\n    QuadEdgeSubdivision.getTriangleEdges(e, leftTri)\n    const rightTri = new Array(3).fill(null)\n    QuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri)\n    const vLeftTriOther = e.lNext().dest()\n    if (this.isFrameVertex(vLeftTriOther)) return true\n    const vRightTriOther = e.sym().lNext().dest()\n    if (this.isFrameVertex(vRightTriOther)) return true\n    return false\n  }\n  makeEdge(o, d) {\n    const q = QuadEdge.makeEdge(o, d)\n    this._quadEdges.add(q)\n    return q\n  }\n  visitTriangles(triVisitor, includeFrame) {\n    this._visitedKey++\n    const edgeStack = new Stack()\n    edgeStack.push(this._startingEdge)\n    const visitedEdges = new HashSet()\n    while (!edgeStack.empty()) {\n      const edge = edgeStack.pop()\n      if (!visitedEdges.contains(edge)) {\n        const triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges)\n        if (triEdges !== null) triVisitor.visit(triEdges)\n      }\n    }\n  }\n  isFrameEdge(e) {\n    if (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true\n    return false\n  }\n  isOnEdge(e, p) {\n    this._seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate())\n    const dist = this._seg.distance(p)\n    return dist < this._edgeCoincidenceTolerance\n  }\n  getEnvelope() {\n    return new Envelope(this._frameEnv)\n  }\n  createFrame(env) {\n    const deltaX = env.getWidth()\n    const deltaY = env.getHeight()\n    let offset = 0.0\n    if (deltaX > deltaY) \n      offset = deltaX * 10.0\n    else \n      offset = deltaY * 10.0\n    \n    this._frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset)\n    this._frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset)\n    this._frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset)\n    this._frameEnv = new Envelope(this._frameVertex[0].getCoordinate(), this._frameVertex[1].getCoordinate())\n    this._frameEnv.expandToInclude(this._frameVertex[2].getCoordinate())\n  }\n  getTriangleCoordinates(includeFrame) {\n    const visitor = new TriangleCoordinatesVisitor()\n    this.visitTriangles(visitor, includeFrame)\n    return visitor.getTriangles()\n  }\n  getVertices(includeFrame) {\n    const vertices = new HashSet()\n    for (let i = this._quadEdges.iterator(); i.hasNext(); ) {\n      const qe = i.next()\n      const v = qe.orig()\n      if (includeFrame || !this.isFrameVertex(v)) vertices.add(v)\n      const vd = qe.dest()\n      if (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd)\n    }\n    return vertices\n  }\n  fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges) {\n    let curr = edge\n    let edgeCount = 0\n    let isFrame = false\n    do {\n      this._triEdges[edgeCount] = curr\n      if (this.isFrameEdge(curr)) isFrame = true\n      const sym = curr.sym()\n      if (!visitedEdges.contains(sym)) edgeStack.push(sym)\n      visitedEdges.add(curr)\n      edgeCount++\n      curr = curr.lNext()\n    } while (curr !== edge)\n    if (isFrame && !includeFrame) return null\n    return this._triEdges\n  }\n  getEdges() {\n    if (arguments.length === 0) {\n      return this._quadEdges\n    } else if (arguments.length === 1) {\n      const geomFact = arguments[0]\n      const quadEdges = this.getPrimaryEdges(false)\n      const edges = new Array(quadEdges.size()).fill(null)\n      let i = 0\n      for (let it = quadEdges.iterator(); it.hasNext(); ) {\n        const qe = it.next()\n        edges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()])\n      }\n      return geomFact.createMultiLineString(edges)\n    }\n  }\n  getVertexUniqueEdges(includeFrame) {\n    const edges = new ArrayList()\n    const visitedVertices = new HashSet()\n    for (let i = this._quadEdges.iterator(); i.hasNext(); ) {\n      const qe = i.next()\n      const v = qe.orig()\n      if (!visitedVertices.contains(v)) {\n        visitedVertices.add(v)\n        if (includeFrame || !this.isFrameVertex(v)) \n          edges.add(qe)\n        \n      }\n      const qd = qe.sym()\n      const vd = qd.orig()\n      if (!visitedVertices.contains(vd)) {\n        visitedVertices.add(vd)\n        if (includeFrame || !this.isFrameVertex(vd)) \n          edges.add(qd)\n        \n      }\n    }\n    return edges\n  }\n  getTriangleEdges(includeFrame) {\n    const visitor = new TriangleEdgesListVisitor()\n    this.visitTriangles(visitor, includeFrame)\n    return visitor.getTriangleEdges()\n  }\n  getPrimaryEdges(includeFrame) {\n    this._visitedKey++\n    const edges = new ArrayList()\n    const edgeStack = new Stack()\n    edgeStack.push(this._startingEdge)\n    const visitedEdges = new HashSet()\n    while (!edgeStack.empty()) {\n      const edge = edgeStack.pop()\n      if (!visitedEdges.contains(edge)) {\n        const priQE = edge.getPrimary()\n        if (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE)\n        edgeStack.push(edge.oNext())\n        edgeStack.push(edge.sym().oNext())\n        visitedEdges.add(edge)\n        visitedEdges.add(edge.sym())\n      }\n    }\n    return edges\n  }\n  delete(e) {\n    QuadEdge.splice(e, e.oPrev())\n    QuadEdge.splice(e.sym(), e.sym().oPrev())\n    const eSym = e.sym()\n    const eRot = e.rot()\n    const eRotSym = e.rot().sym()\n    this._quadEdges.remove(e)\n    this._quadEdges.remove(eSym)\n    this._quadEdges.remove(eRot)\n    this._quadEdges.remove(eRotSym)\n    e.delete()\n    eSym.delete()\n    eRot.delete()\n    eRotSym.delete()\n  }\n  locateFromEdge(v, startEdge) {\n    let iter = 0\n    const maxIter = this._quadEdges.size()\n    let e = startEdge\n    while (true) {\n      iter++\n      if (iter > maxIter) \n        throw new LocateFailureException(e.toLineSegment())\n      \n      if (v.equals(e.orig()) || v.equals(e.dest())) \n        break\n      else if (v.rightOf(e)) \n        e = e.sym()\n      else if (!v.rightOf(e.oNext())) \n        e = e.oNext()\n      else if (!v.rightOf(e.dPrev())) \n        e = e.dPrev()\n      else \n        break\n      \n    }\n    return e\n  }\n  getTolerance() {\n    return this._tolerance\n  }\n  getVoronoiCellPolygons(geomFact) {\n    this.visitTriangles(new TriangleCircumcentreVisitor(), true)\n    const cells = new ArrayList()\n    const edges = this.getVertexUniqueEdges(false)\n    for (let i = edges.iterator(); i.hasNext(); ) {\n      const qe = i.next()\n      cells.add(this.getVoronoiCellPolygon(qe, geomFact))\n    }\n    return cells\n  }\n  getVoronoiDiagram(geomFact) {\n    const vorCells = this.getVoronoiCellPolygons(geomFact)\n    return geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells))\n  }\n  getTriangles(geomFact) {\n    const triPtsList = this.getTriangleCoordinates(false)\n    const tris = new Array(triPtsList.size()).fill(null)\n    let i = 0\n    for (let it = triPtsList.iterator(); it.hasNext(); ) {\n      const triPt = it.next()\n      tris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt))\n    }\n    return geomFact.createGeometryCollection(tris)\n  }\n  insertSite(v) {\n    let e = this.locate(v)\n    if (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) \n      return e\n    \n    let base = this.makeEdge(e.orig(), v)\n    QuadEdge.splice(base, e)\n    const startEdge = base\n    do {\n      base = this.connect(e, base.sym())\n      e = base.oPrev()\n    } while (e.lNext() !== startEdge)\n    return startEdge\n  }\n  locate() {\n    if (arguments.length === 1) {\n      if (arguments[0] instanceof Vertex) {\n        const v = arguments[0]\n        return this._locator.locate(v)\n      } else if (arguments[0] instanceof Coordinate) {\n        const p = arguments[0]\n        return this._locator.locate(new Vertex(p))\n      }\n    } else if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      const e = this._locator.locate(new Vertex(p0))\n      if (e === null) return null\n      let base = e\n      if (e.dest().getCoordinate().equals2D(p0)) base = e.sym()\n      let locEdge = base\n      do {\n        if (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge\n        locEdge = locEdge.oNext()\n      } while (locEdge !== base)\n      return null\n    }\n  }\n}\nclass TriangleCircumcentreVisitor {\n  visit(triEdges) {\n    const a = triEdges[0].orig().getCoordinate()\n    const b = triEdges[1].orig().getCoordinate()\n    const c = triEdges[2].orig().getCoordinate()\n    const cc = Triangle.circumcentreDD(a, b, c)\n    const ccVertex = new Vertex(cc)\n    for (let i = 0; i < 3; i++) \n      triEdges[i].rot().setOrig(ccVertex)\n    \n  }\n  get interfaces_() {\n    return [TriangleVisitor]\n  }\n}\nclass TriangleEdgesListVisitor {\n  constructor() {\n    TriangleEdgesListVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._triList = new ArrayList()\n  }\n  getTriangleEdges() {\n    return this._triList\n  }\n  visit(triEdges) {\n    this._triList.add(triEdges)\n  }\n  get interfaces_() {\n    return [TriangleVisitor]\n  }\n}\nclass TriangleVertexListVisitor {\n  constructor() {\n    TriangleVertexListVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._triList = new ArrayList()\n  }\n  visit(triEdges) {\n    this._triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()])\n  }\n  getTriangleVertices() {\n    return this._triList\n  }\n  get interfaces_() {\n    return [TriangleVisitor]\n  }\n}\nclass TriangleCoordinatesVisitor {\n  constructor() {\n    TriangleCoordinatesVisitor.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._coordList = new CoordinateList()\n    this._triCoords = new ArrayList()\n  }\n  checkTriangleSize(pts) {\n    let loc = ''\n    if (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]); else \n    if (pts.length >= 1) loc = WKTWriter.toPoint(pts[0])\n    \n  }\n  visit(triEdges) {\n    this._coordList.clear()\n    for (let i = 0; i < 3; i++) {\n      const v = triEdges[i].orig()\n      this._coordList.add(v.getCoordinate())\n    }\n    if (this._coordList.size() > 0) {\n      this._coordList.closeRing()\n      const pts = this._coordList.toCoordinateArray()\n      if (pts.length !== 4) \n        return null\n      \n      this._triCoords.add(pts)\n    }\n  }\n  getTriangles() {\n    return this._triCoords\n  }\n  get interfaces_() {\n    return [TriangleVisitor]\n  }\n}\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000\n","import Coordinate from '../geom/Coordinate.js'\nimport LineSegment from '../geom/LineSegment.js'\nexport default class Segment {\n  constructor() {\n    Segment.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._ls = null\n    this._data = null\n    if (arguments.length === 2) {\n      const p0 = arguments[0], p1 = arguments[1]\n      this._ls = new LineSegment(p0, p1)\n    } else if (arguments.length === 3) {\n      const p0 = arguments[0], p1 = arguments[1], data = arguments[2]\n      this._ls = new LineSegment(p0, p1)\n      this._data = data\n    } else if (arguments.length === 6) {\n      const x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5]\n      Segment.constructor_.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2))\n    } else if (arguments.length === 7) {\n      const x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5], data = arguments[6]\n      Segment.constructor_.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data)\n    }\n  }\n  getLineSegment() {\n    return this._ls\n  }\n  getEndZ() {\n    const p = this._ls.getCoordinate(1)\n    return p.getZ()\n  }\n  getStartZ() {\n    const p = this._ls.getCoordinate(0)\n    return p.getZ()\n  }\n  intersection(s) {\n    return this._ls.intersection(s.getLineSegment())\n  }\n  getStart() {\n    return this._ls.getCoordinate(0)\n  }\n  getEnd() {\n    return this._ls.getCoordinate(1)\n  }\n  getEndY() {\n    const p = this._ls.getCoordinate(1)\n    return p.y\n  }\n  getStartX() {\n    const p = this._ls.getCoordinate(0)\n    return p.x\n  }\n  equalsTopo(s) {\n    return this._ls.equalsTopo(s.getLineSegment())\n  }\n  getStartY() {\n    const p = this._ls.getCoordinate(0)\n    return p.y\n  }\n  setData(data) {\n    this._data = data\n  }\n  getData() {\n    return this._data\n  }\n  getEndX() {\n    const p = this._ls.getCoordinate(1)\n    return p.x\n  }\n  toString() {\n    return this._ls.toString()\n  }\n}\n","import WKTWriter from '../io/WKTWriter.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport RuntimeException from '../../../../java/lang/RuntimeException.js'\nexport default class ConstraintEnforcementException extends RuntimeException {\n  constructor() {\n    super()\n    ConstraintEnforcementException.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._pt = null\n    if (arguments.length === 1) {\n      const msg = arguments[0]\n      RuntimeException.constructor_.call(this, msg)\n    } else if (arguments.length === 2) {\n      const msg = arguments[0], pt = arguments[1]\n      RuntimeException.constructor_.call(this, ConstraintEnforcementException.msgWithCoord(msg, pt))\n      this._pt = new Coordinate(pt)\n    }\n  }\n  static msgWithCoord(msg, pt) {\n    if (pt !== null) return msg + ' [ ' + WKTWriter.toPoint(pt) + ' ]'\n    return msg\n  }\n  getCoordinate() {\n    return this._pt\n  }\n}\n","import GeometryFactory from '../geom/GeometryFactory.js'\nimport NonEncroachingSplitPointFinder from './NonEncroachingSplitPointFinder.js'\nimport ConstraintVertex from './ConstraintVertex.js'\nimport Coordinate from '../geom/Coordinate.js'\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator.js'\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision.js'\nimport Double from '../../../../java/lang/Double.js'\nimport LastFoundQuadEdgeLocator from './quadedge/LastFoundQuadEdgeLocator.js'\nimport Segment from './Segment.js'\nimport ConvexHull from '../algorithm/ConvexHull.js'\nimport KdTree from '../index/kdtree/KdTree.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport ConstraintEnforcementException from './ConstraintEnforcementException.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class ConformingDelaunayTriangulator {\n  constructor() {\n    ConformingDelaunayTriangulator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._initialVertices = null\n    this._segVertices = null\n    this._segments = new ArrayList()\n    this._subdiv = null\n    this._incDel = null\n    this._convexHull = null\n    this._splitFinder = new NonEncroachingSplitPointFinder()\n    this._kdt = null\n    this._vertexFactory = null\n    this._computeAreaEnv = null\n    this._splitPt = null\n    this._tolerance = null\n    const initialVertices = arguments[0], tolerance = arguments[1]\n    this._initialVertices = new ArrayList(initialVertices)\n    this._tolerance = tolerance\n    this._kdt = new KdTree(tolerance)\n  }\n  static computeVertexEnvelope(vertices) {\n    const env = new Envelope()\n    for (let i = vertices.iterator(); i.hasNext(); ) {\n      const v = i.next()\n      env.expandToInclude(v.getCoordinate())\n    }\n    return env\n  }\n  getInitialVertices() {\n    return this._initialVertices\n  }\n  getKDT() {\n    return this._kdt\n  }\n  enforceConstraints() {\n    this.addConstraintVertices()\n    let count = 0\n    let splits = 0\n    do {\n      splits = this.enforceGabriel(this._segments)\n      count++\n    } while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER)\n    if (count === ConformingDelaunayTriangulator.MAX_SPLIT_ITER) \n      throw new ConstraintEnforcementException('Too many splitting iterations while enforcing constraints.  Last split point was at: ', this._splitPt)\n    \n  }\n  insertSites(vertices) {\n    for (let i = vertices.iterator(); i.hasNext(); ) {\n      const v = i.next()\n      this.insertSite(v)\n    }\n  }\n  getVertexFactory() {\n    return this._vertexFactory\n  }\n  getPointArray() {\n    const pts = new Array(this._initialVertices.size() + this._segVertices.size()).fill(null)\n    let index = 0\n    for (let i = this._initialVertices.iterator(); i.hasNext(); ) {\n      const v = i.next()\n      pts[index++] = v.getCoordinate()\n    }\n    for (let i2 = this._segVertices.iterator(); i2.hasNext(); ) {\n      const v = i2.next()\n      pts[index++] = v.getCoordinate()\n    }\n    return pts\n  }\n  setConstraints(segments, segVertices) {\n    this._segments = segments\n    this._segVertices = segVertices\n  }\n  computeConvexHull() {\n    const fact = new GeometryFactory()\n    const coords = this.getPointArray()\n    const hull = new ConvexHull(coords, fact)\n    this._convexHull = hull.getConvexHull()\n  }\n  addConstraintVertices() {\n    this.computeConvexHull()\n    this.insertSites(this._segVertices)\n  }\n  findNonGabrielPoint(seg) {\n    const p = seg.getStart()\n    const q = seg.getEnd()\n    const midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0)\n    const segRadius = p.distance(midPt)\n    const env = new Envelope(midPt)\n    env.expandBy(segRadius)\n    const result = this._kdt.query(env)\n    let closestNonGabriel = null\n    let minDist = Double.MAX_VALUE\n    for (let i = result.iterator(); i.hasNext(); ) {\n      const nextNode = i.next()\n      const testPt = nextNode.getCoordinate()\n      if (testPt.equals2D(p) || testPt.equals2D(q)) continue\n      const testRadius = midPt.distance(testPt)\n      if (testRadius < segRadius) {\n        const testDist = testRadius\n        if (closestNonGabriel === null || testDist < minDist) {\n          closestNonGabriel = testPt\n          minDist = testDist\n        }\n      }\n    }\n    return closestNonGabriel\n  }\n  getConstraintSegments() {\n    return this._segments\n  }\n  setSplitPointFinder(splitFinder) {\n    this._splitFinder = splitFinder\n  }\n  getConvexHull() {\n    return this._convexHull\n  }\n  getTolerance() {\n    return this._tolerance\n  }\n  enforceGabriel(segsToInsert) {\n    const newSegments = new ArrayList()\n    let splits = 0\n    const segsToRemove = new ArrayList()\n    for (let i = segsToInsert.iterator(); i.hasNext(); ) {\n      const seg = i.next()\n      const encroachPt = this.findNonGabrielPoint(seg)\n      if (encroachPt === null) continue\n      this._splitPt = this._splitFinder.findSplitPoint(seg, encroachPt)\n      const splitVertex = this.createVertex(this._splitPt, seg)\n      const insertedVertex = this.insertSite(splitVertex)\n      if (!insertedVertex.getCoordinate().equals2D(this._splitPt)) {}\n      const s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData())\n      const s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData())\n      newSegments.add(s1)\n      newSegments.add(s2)\n      segsToRemove.add(seg)\n      splits = splits + 1\n    }\n    segsToInsert.removeAll(segsToRemove)\n    segsToInsert.addAll(newSegments)\n    return splits\n  }\n  createVertex() {\n    if (arguments.length === 1) {\n      const p = arguments[0]\n      let v = null\n      if (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, null); else v = new ConstraintVertex(p)\n      return v\n    } else if (arguments.length === 2) {\n      const p = arguments[0], seg = arguments[1]\n      let v = null\n      if (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, seg); else v = new ConstraintVertex(p)\n      v.setOnConstraint(true)\n      return v\n    }\n  }\n  getSubdivision() {\n    return this._subdiv\n  }\n  computeBoundingBox() {\n    const vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._initialVertices)\n    const segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._segVertices)\n    const allPointsEnv = new Envelope(vertexEnv)\n    allPointsEnv.expandToInclude(segEnv)\n    const deltaX = allPointsEnv.getWidth() * 0.2\n    const deltaY = allPointsEnv.getHeight() * 0.2\n    const delta = Math.max(deltaX, deltaY)\n    this._computeAreaEnv = new Envelope(allPointsEnv)\n    this._computeAreaEnv.expandBy(delta)\n  }\n  setVertexFactory(vertexFactory) {\n    this._vertexFactory = vertexFactory\n  }\n  formInitialDelaunay() {\n    this.computeBoundingBox()\n    this._subdiv = new QuadEdgeSubdivision(this._computeAreaEnv, this._tolerance)\n    this._subdiv.setLocator(new LastFoundQuadEdgeLocator(this._subdiv))\n    this._incDel = new IncrementalDelaunayTriangulator(this._subdiv)\n    this.insertSites(this._initialVertices)\n  }\n  insertSite() {\n    if (arguments[0] instanceof ConstraintVertex) {\n      const v = arguments[0]\n      const kdnode = this._kdt.insert(v.getCoordinate(), v)\n      if (!kdnode.isRepeated()) {\n        this._incDel.insertSite(v)\n      } else {\n        const snappedV = kdnode.getData()\n        snappedV.merge(v)\n        return snappedV\n      }\n      return v\n    } else if (arguments[0] instanceof Coordinate) {\n      const p = arguments[0]\n      this.insertSite(this.createVertex(p))\n    }\n  }\n}\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99\n","import CoordinateList from '../geom/CoordinateList.js'\nimport Geometry from '../geom/Geometry.js'\nimport Arrays from '../../../../java/util/Arrays.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator.js'\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision.js'\nimport Vertex from './quadedge/Vertex.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport Envelope from '../geom/Envelope.js'\nexport default class DelaunayTriangulationBuilder {\n  constructor() {\n    DelaunayTriangulationBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._siteCoords = null\n    this._tolerance = 0.0\n    this._subdiv = null\n  }\n  static extractUniqueCoordinates(geom) {\n    if (geom === null) return new CoordinateList()\n    const coords = geom.getCoordinates()\n    return DelaunayTriangulationBuilder.unique(coords)\n  }\n  static envelope(coords) {\n    const env = new Envelope()\n    for (let i = coords.iterator(); i.hasNext(); ) {\n      const coord = i.next()\n      env.expandToInclude(coord)\n    }\n    return env\n  }\n  static unique(coords) {\n    const coordsCopy = CoordinateArrays.copyDeep(coords)\n    Arrays.sort(coordsCopy)\n    const coordList = new CoordinateList(coordsCopy, false)\n    return coordList\n  }\n  static toVertices(coords) {\n    const verts = new ArrayList()\n    for (let i = coords.iterator(); i.hasNext(); ) {\n      const coord = i.next()\n      verts.add(new Vertex(coord))\n    }\n    return verts\n  }\n  create() {\n    if (this._subdiv !== null) return null\n    const siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords)\n    const vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords)\n    this._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance)\n    const triangulator = new IncrementalDelaunayTriangulator(this._subdiv)\n    triangulator.insertSites(vertices)\n  }\n  setTolerance(tolerance) {\n    this._tolerance = tolerance\n  }\n  setSites() {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)\n    } else if (hasInterface(arguments[0], Collection)) {\n      const coords = arguments[0]\n      this._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords))\n    }\n  }\n  getEdges(geomFact) {\n    this.create()\n    return this._subdiv.getEdges(geomFact)\n  }\n  getSubdivision() {\n    this.create()\n    return this._subdiv\n  }\n  getTriangles(geomFact) {\n    this.create()\n    return this._subdiv.getTriangles(geomFact)\n  }\n}\n","import ConformingDelaunayTriangulator from './ConformingDelaunayTriangulator.js'\nimport ConstraintVertex from './ConstraintVertex.js'\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder.js'\nimport Segment from './Segment.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter.js'\nimport TreeMap from '../../../../java/util/TreeMap.js'\nexport default class ConformingDelaunayTriangulationBuilder {\n  constructor() {\n    ConformingDelaunayTriangulationBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._siteCoords = null\n    this._constraintLines = null\n    this._tolerance = 0.0\n    this._subdiv = null\n    this._constraintVertexMap = new TreeMap()\n  }\n  static createConstraintSegments() {\n    if (arguments.length === 1) {\n      const geom = arguments[0]\n      const lines = LinearComponentExtracter.getLines(geom)\n      const constraintSegs = new ArrayList()\n      for (let i = lines.iterator(); i.hasNext(); ) {\n        const line = i.next()\n        ConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs)\n      }\n      return constraintSegs\n    } else if (arguments.length === 2) {\n      const line = arguments[0], constraintSegs = arguments[1]\n      const coords = line.getCoordinates()\n      for (let i = 1; i < coords.length; i++) \n        constraintSegs.add(new Segment(coords[i - 1], coords[i]))\n      \n    }\n  }\n  createSiteVertices(coords) {\n    const verts = new ArrayList()\n    for (let i = coords.iterator(); i.hasNext(); ) {\n      const coord = i.next()\n      if (this._constraintVertexMap.containsKey(coord)) continue\n      verts.add(new ConstraintVertex(coord))\n    }\n    return verts\n  }\n  create() {\n    if (this._subdiv !== null) return null\n    const siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords)\n    let segments = new ArrayList()\n    if (this._constraintLines !== null) {\n      siteEnv.expandToInclude(this._constraintLines.getEnvelopeInternal())\n      this.createVertices(this._constraintLines)\n      segments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this._constraintLines)\n    }\n    const sites = this.createSiteVertices(this._siteCoords)\n    const cdt = new ConformingDelaunayTriangulator(sites, this._tolerance)\n    cdt.setConstraints(segments, new ArrayList(this._constraintVertexMap.values()))\n    cdt.formInitialDelaunay()\n    cdt.enforceConstraints()\n    this._subdiv = cdt.getSubdivision()\n  }\n  setTolerance(tolerance) {\n    this._tolerance = tolerance\n  }\n  setConstraints(constraintLines) {\n    this._constraintLines = constraintLines\n  }\n  setSites(geom) {\n    this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)\n  }\n  getEdges(geomFact) {\n    this.create()\n    return this._subdiv.getEdges(geomFact)\n  }\n  getSubdivision() {\n    this.create()\n    return this._subdiv\n  }\n  getTriangles(geomFact) {\n    this.create()\n    return this._subdiv.getTriangles(geomFact)\n  }\n  createVertices(geom) {\n    const coords = geom.getCoordinates()\n    for (let i = 0; i < coords.length; i++) {\n      const v = new ConstraintVertex(coords[i])\n      this._constraintVertexMap.put(coords[i], v)\n    }\n  }\n}\n","import Geometry from '../geom/Geometry.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport GeometryFactory from '../geom/GeometryFactory.js'\nimport Collection from '../../../../java/util/Collection.js'\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator.js'\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision.js'\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder.js'\nimport CoordinateArrays from '../geom/CoordinateArrays.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport OverlayOp from '../operation/overlay/OverlayOp.js'\nexport default class VoronoiDiagramBuilder {\n  constructor() {\n    VoronoiDiagramBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._siteCoords = null\n    this._tolerance = 0.0\n    this._subdiv = null\n    this._clipEnv = null\n    this._diagramEnv = null\n  }\n  static clipGeometryCollection(geom, clipEnv) {\n    const clipPoly = geom.getFactory().toGeometry(clipEnv)\n    const clipped = new ArrayList()\n    for (let i = 0; i < geom.getNumGeometries(); i++) {\n      const g = geom.getGeometryN(i)\n      let result = null\n      if (clipEnv.contains(g.getEnvelopeInternal())) {\n        result = g\n      } else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n        result = OverlayOp.intersection(clipPoly, g)\n        result.setUserData(g.getUserData())\n      }\n      if (result !== null && !result.isEmpty()) \n        clipped.add(result)\n      \n    }\n    return geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped))\n  }\n  create() {\n    if (this._subdiv !== null) return null\n    const siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords)\n    this._diagramEnv = this._clipEnv\n    if (this._diagramEnv === null) {\n      this._diagramEnv = siteEnv\n      const expandBy = this._diagramEnv.getDiameter()\n      this._diagramEnv.expandBy(expandBy)\n    }\n    const vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords)\n    this._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance)\n    const triangulator = new IncrementalDelaunayTriangulator(this._subdiv)\n    triangulator.insertSites(vertices)\n  }\n  getDiagram(geomFact) {\n    this.create()\n    const polys = this._subdiv.getVoronoiDiagram(geomFact)\n    return VoronoiDiagramBuilder.clipGeometryCollection(polys, this._diagramEnv)\n  }\n  setTolerance(tolerance) {\n    this._tolerance = tolerance\n  }\n  setSites() {\n    if (arguments[0] instanceof Geometry) {\n      const geom = arguments[0]\n      this._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom)\n    } else if (hasInterface(arguments[0], Collection)) {\n      const coords = arguments[0]\n      this._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords))\n    }\n  }\n  setClipEnvelope(clipEnv) {\n    this._clipEnv = clipEnv\n  }\n  getSubdivision() {\n    this.create()\n    return this._subdiv\n  }\n}\n","import hasInterface from '../../../../hasInterface.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport Lineal from '../geom/Lineal.js'\nexport default class LinearIterator {\n  constructor() {\n    LinearIterator.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._linearGeom = null\n    this._numLines = null\n    this._currentLine = null\n    this._componentIndex = 0\n    this._vertexIndex = 0\n    if (arguments.length === 1) {\n      const linear = arguments[0]\n      LinearIterator.constructor_.call(this, linear, 0, 0)\n    } else if (arguments.length === 2) {\n      const linear = arguments[0], start = arguments[1]\n      LinearIterator.constructor_.call(this, linear, start.getComponentIndex(), LinearIterator.segmentEndVertexIndex(start))\n    } else if (arguments.length === 3) {\n      const linearGeom = arguments[0], componentIndex = arguments[1], vertexIndex = arguments[2]\n      if (!hasInterface(linearGeom, Lineal)) throw new IllegalArgumentException('Lineal geometry is required')\n      this._linearGeom = linearGeom\n      this._numLines = linearGeom.getNumGeometries()\n      this._componentIndex = componentIndex\n      this._vertexIndex = vertexIndex\n      this.loadCurrentLine()\n    }\n  }\n  static segmentEndVertexIndex(loc) {\n    if (loc.getSegmentFraction() > 0.0) return loc.getSegmentIndex() + 1\n    return loc.getSegmentIndex()\n  }\n  getComponentIndex() {\n    return this._componentIndex\n  }\n  getLine() {\n    return this._currentLine\n  }\n  getVertexIndex() {\n    return this._vertexIndex\n  }\n  getSegmentEnd() {\n    if (this._vertexIndex < this.getLine().getNumPoints() - 1) return this._currentLine.getCoordinateN(this._vertexIndex + 1)\n    return null\n  }\n  next() {\n    if (!this.hasNext()) return null\n    this._vertexIndex++\n    if (this._vertexIndex >= this._currentLine.getNumPoints()) {\n      this._componentIndex++\n      this.loadCurrentLine()\n      this._vertexIndex = 0\n    }\n  }\n  loadCurrentLine() {\n    if (this._componentIndex >= this._numLines) {\n      this._currentLine = null\n      return null\n    }\n    this._currentLine = this._linearGeom.getGeometryN(this._componentIndex)\n  }\n  getSegmentStart() {\n    return this._currentLine.getCoordinateN(this._vertexIndex)\n  }\n  isEndOfLine() {\n    if (this._componentIndex >= this._numLines) return false\n    if (this._vertexIndex < this._currentLine.getNumPoints() - 1) return false\n    return true\n  }\n  hasNext() {\n    if (this._componentIndex >= this._numLines) return false\n    if (this._componentIndex === this._numLines - 1 && this._vertexIndex >= this._currentLine.getNumPoints()) return false\n    return true\n  }\n}\n","import LinearIterator from './LinearIterator.js'\nimport Double from '../../../../java/lang/Double.js'\nimport LineSegment from '../geom/LineSegment.js'\nimport Assert from '../util/Assert.js'\nexport default class LengthIndexOfPoint {\n  constructor() {\n    LengthIndexOfPoint.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._linearGeom = null\n    const linearGeom = arguments[0]\n    this._linearGeom = linearGeom\n  }\n  static indexOf(linearGeom, inputPt) {\n    const locater = new LengthIndexOfPoint(linearGeom)\n    return locater.indexOf(inputPt)\n  }\n  static indexOfAfter(linearGeom, inputPt, minIndex) {\n    const locater = new LengthIndexOfPoint(linearGeom)\n    return locater.indexOfAfter(inputPt, minIndex)\n  }\n  indexOf(inputPt) {\n    return this.indexOfFromStart(inputPt, -1.0)\n  }\n  indexOfFromStart(inputPt, minIndex) {\n    let minDistance = Double.MAX_VALUE\n    let ptMeasure = minIndex\n    let segmentStartMeasure = 0.0\n    const seg = new LineSegment()\n    const it = new LinearIterator(this._linearGeom)\n    while (it.hasNext()) {\n      if (!it.isEndOfLine()) {\n        seg.p0 = it.getSegmentStart()\n        seg.p1 = it.getSegmentEnd()\n        const segDistance = seg.distance(inputPt)\n        const segMeasureToPt = this.segmentNearestMeasure(seg, inputPt, segmentStartMeasure)\n        if (segDistance < minDistance && segMeasureToPt > minIndex) {\n          ptMeasure = segMeasureToPt\n          minDistance = segDistance\n        }\n        segmentStartMeasure += seg.getLength()\n      }\n      it.next()\n    }\n    return ptMeasure\n  }\n  indexOfAfter(inputPt, minIndex) {\n    if (minIndex < 0.0) return this.indexOf(inputPt)\n    const endIndex = this._linearGeom.getLength()\n    if (endIndex < minIndex) return endIndex\n    const closestAfter = this.indexOfFromStart(inputPt, minIndex)\n    Assert.isTrue(closestAfter >= minIndex, 'computed index is before specified minimum index')\n    return closestAfter\n  }\n  segmentNearestMeasure(seg, inputPt, segmentStartMeasure) {\n    const projFactor = seg.projectionFactor(inputPt)\n    if (projFactor <= 0.0) return segmentStartMeasure\n    if (projFactor <= 1.0) return segmentStartMeasure + projFactor * seg.getLength()\n    return segmentStartMeasure + seg.getLength()\n  }\n}\n","import Coordinate from '../geom/Coordinate.js'\nimport LineSegment from '../geom/LineSegment.js'\nimport Comparable from '../../../../java/lang/Comparable.js'\nexport default class LinearLocation {\n  constructor() {\n    LinearLocation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._componentIndex = 0\n    this._segmentIndex = 0\n    this._segmentFraction = 0.0\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const loc = arguments[0]\n      this._componentIndex = loc._componentIndex\n      this._segmentIndex = loc._segmentIndex\n      this._segmentFraction = loc._segmentFraction\n    } else if (arguments.length === 2) {\n      const segmentIndex = arguments[0], segmentFraction = arguments[1]\n      LinearLocation.constructor_.call(this, 0, segmentIndex, segmentFraction)\n    } else if (arguments.length === 3) {\n      const componentIndex = arguments[0], segmentIndex = arguments[1], segmentFraction = arguments[2]\n      this._componentIndex = componentIndex\n      this._segmentIndex = segmentIndex\n      this._segmentFraction = segmentFraction\n      this.normalize()\n    } else if (arguments.length === 4) {\n      const componentIndex = arguments[0], segmentIndex = arguments[1], segmentFraction = arguments[2], doNormalize = arguments[3]\n      this._componentIndex = componentIndex\n      this._segmentIndex = segmentIndex\n      this._segmentFraction = segmentFraction\n      if (doNormalize) this.normalize()\n    }\n  }\n  static getEndLocation(linear) {\n    const loc = new LinearLocation()\n    loc.setToEnd(linear)\n    return loc\n  }\n  static pointAlongSegmentByFraction(p0, p1, frac) {\n    if (frac <= 0.0) return p0\n    if (frac >= 1.0) return p1\n    const x = (p1.x - p0.x) * frac + p0.x\n    const y = (p1.y - p0.y) * frac + p0.y\n    const z = (p1.getZ() - p0.getZ()) * frac + p0.getZ()\n    return new Coordinate(x, y, z)\n  }\n  static compareLocationValues(componentIndex0, segmentIndex0, segmentFraction0, componentIndex1, segmentIndex1, segmentFraction1) {\n    if (componentIndex0 < componentIndex1) return -1\n    if (componentIndex0 > componentIndex1) return 1\n    if (segmentIndex0 < segmentIndex1) return -1\n    if (segmentIndex0 > segmentIndex1) return 1\n    if (segmentFraction0 < segmentFraction1) return -1\n    if (segmentFraction0 > segmentFraction1) return 1\n    return 0\n  }\n  static numSegments(line) {\n    const npts = line.getNumPoints()\n    if (npts <= 1) return 0\n    return npts - 1\n  }\n  getSegmentIndex() {\n    return this._segmentIndex\n  }\n  getComponentIndex() {\n    return this._componentIndex\n  }\n  isEndpoint(linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    const nseg = LinearLocation.numSegments(lineComp)\n    return this._segmentIndex >= nseg || this._segmentIndex === nseg - 1 && this._segmentFraction >= 1.0\n  }\n  isValid(linearGeom) {\n    if (this._componentIndex < 0 || this._componentIndex >= linearGeom.getNumGeometries()) return false\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    if (this._segmentIndex < 0 || this._segmentIndex > lineComp.getNumPoints()) return false\n    if (this._segmentIndex === lineComp.getNumPoints() && this._segmentFraction !== 0.0) return false\n    if (this._segmentFraction < 0.0 || this._segmentFraction > 1.0) return false\n    return true\n  }\n  normalize() {\n    if (this._segmentFraction < 0.0) \n      this._segmentFraction = 0.0\n    \n    if (this._segmentFraction > 1.0) \n      this._segmentFraction = 1.0\n    \n    if (this._componentIndex < 0) {\n      this._componentIndex = 0\n      this._segmentIndex = 0\n      this._segmentFraction = 0.0\n    }\n    if (this._segmentIndex < 0) {\n      this._segmentIndex = 0\n      this._segmentFraction = 0.0\n    }\n    if (this._segmentFraction === 1.0) {\n      this._segmentFraction = 0.0\n      this._segmentIndex += 1\n    }\n  }\n  toLowest(linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    const nseg = LinearLocation.numSegments(lineComp)\n    if (this._segmentIndex < nseg) return this\n    return new LinearLocation(this._componentIndex, nseg - 1, 1.0, false)\n  }\n  getCoordinate(linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    const p0 = lineComp.getCoordinateN(this._segmentIndex)\n    if (this._segmentIndex >= LinearLocation.numSegments(lineComp)) return p0\n    const p1 = lineComp.getCoordinateN(this._segmentIndex + 1)\n    return LinearLocation.pointAlongSegmentByFraction(p0, p1, this._segmentFraction)\n  }\n  getSegmentFraction() {\n    return this._segmentFraction\n  }\n  getSegment(linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    const p0 = lineComp.getCoordinateN(this._segmentIndex)\n    if (this._segmentIndex >= LinearLocation.numSegments(lineComp)) {\n      const prev = lineComp.getCoordinateN(lineComp.getNumPoints() - 2)\n      return new LineSegment(prev, p0)\n    }\n    const p1 = lineComp.getCoordinateN(this._segmentIndex + 1)\n    return new LineSegment(p0, p1)\n  }\n  clamp(linear) {\n    if (this._componentIndex >= linear.getNumGeometries()) {\n      this.setToEnd(linear)\n      return null\n    }\n    if (this._segmentIndex >= linear.getNumPoints()) {\n      const line = linear.getGeometryN(this._componentIndex)\n      this._segmentIndex = LinearLocation.numSegments(line)\n      this._segmentFraction = 1.0\n    }\n  }\n  setToEnd(linear) {\n    this._componentIndex = linear.getNumGeometries() - 1\n    const lastLine = linear.getGeometryN(this._componentIndex)\n    this._segmentIndex = LinearLocation.numSegments(lastLine)\n    this._segmentFraction = 0.0\n  }\n  compareTo(o) {\n    const other = o\n    if (this._componentIndex < other._componentIndex) return -1\n    if (this._componentIndex > other._componentIndex) return 1\n    if (this._segmentIndex < other._segmentIndex) return -1\n    if (this._segmentIndex > other._segmentIndex) return 1\n    if (this._segmentFraction < other._segmentFraction) return -1\n    if (this._segmentFraction > other._segmentFraction) return 1\n    return 0\n  }\n  copy() {\n    return new LinearLocation(this._componentIndex, this._segmentIndex, this._segmentFraction)\n  }\n  toString() {\n    return 'LinearLoc[' + this._componentIndex + ', ' + this._segmentIndex + ', ' + this._segmentFraction + ']'\n  }\n  isOnSameSegment(loc) {\n    if (this._componentIndex !== loc._componentIndex) return false\n    if (this._segmentIndex === loc._segmentIndex) return true\n    if (loc._segmentIndex - this._segmentIndex === 1 && loc._segmentFraction === 0.0) return true\n    if (this._segmentIndex - loc._segmentIndex === 1 && this._segmentFraction === 0.0) return true\n    return false\n  }\n  snapToVertex(linearGeom, minDistance) {\n    if (this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0) return null\n    const segLen = this.getSegmentLength(linearGeom)\n    const lenToStart = this._segmentFraction * segLen\n    const lenToEnd = segLen - lenToStart\n    if (lenToStart <= lenToEnd && lenToStart < minDistance) \n      this._segmentFraction = 0.0\n    else if (lenToEnd <= lenToStart && lenToEnd < minDistance) \n      this._segmentFraction = 1.0\n    \n  }\n  compareLocationValues(componentIndex1, segmentIndex1, segmentFraction1) {\n    if (this._componentIndex < componentIndex1) return -1\n    if (this._componentIndex > componentIndex1) return 1\n    if (this._segmentIndex < segmentIndex1) return -1\n    if (this._segmentIndex > segmentIndex1) return 1\n    if (this._segmentFraction < segmentFraction1) return -1\n    if (this._segmentFraction > segmentFraction1) return 1\n    return 0\n  }\n  getSegmentLength(linearGeom) {\n    const lineComp = linearGeom.getGeometryN(this._componentIndex)\n    let segIndex = this._segmentIndex\n    if (this._segmentIndex >= LinearLocation.numSegments(lineComp)) segIndex = lineComp.getNumPoints() - 2\n    const p0 = lineComp.getCoordinateN(segIndex)\n    const p1 = lineComp.getCoordinateN(segIndex + 1)\n    return p0.distance(p1)\n  }\n  isVertex() {\n    return this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0\n  }\n  get interfaces_() {\n    return [Comparable]\n  }\n}\n","import LinearIterator from './LinearIterator.js'\nimport LinearLocation from './LinearLocation.js'\nimport Double from '../../../../java/lang/Double.js'\nimport LineSegment from '../geom/LineSegment.js'\nimport Assert from '../util/Assert.js'\nexport default class LocationIndexOfPoint {\n  constructor() {\n    LocationIndexOfPoint.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._linearGeom = null\n    const linearGeom = arguments[0]\n    this._linearGeom = linearGeom\n  }\n  static indexOf(linearGeom, inputPt) {\n    const locater = new LocationIndexOfPoint(linearGeom)\n    return locater.indexOf(inputPt)\n  }\n  static indexOfAfter(linearGeom, inputPt, minIndex) {\n    const locater = new LocationIndexOfPoint(linearGeom)\n    return locater.indexOfAfter(inputPt, minIndex)\n  }\n  indexOf(inputPt) {\n    return this.indexOfFromStart(inputPt, null)\n  }\n  indexOfFromStart(inputPt, minIndex) {\n    let minDistance = Double.MAX_VALUE\n    let minComponentIndex = 0\n    let minSegmentIndex = 0\n    let minFrac = -1.0\n    const seg = new LineSegment()\n    for (let it = new LinearIterator(this._linearGeom); it.hasNext(); it.next()) \n      if (!it.isEndOfLine()) {\n        seg.p0 = it.getSegmentStart()\n        seg.p1 = it.getSegmentEnd()\n        const segDistance = seg.distance(inputPt)\n        const segFrac = seg.segmentFraction(inputPt)\n        const candidateComponentIndex = it.getComponentIndex()\n        const candidateSegmentIndex = it.getVertexIndex()\n        if (segDistance < minDistance) \n          if (minIndex === null || minIndex.compareLocationValues(candidateComponentIndex, candidateSegmentIndex, segFrac) < 0) {\n            minComponentIndex = candidateComponentIndex\n            minSegmentIndex = candidateSegmentIndex\n            minFrac = segFrac\n            minDistance = segDistance\n          }\n        \n      }\n    \n    if (minDistance === Double.MAX_VALUE) \n      return new LinearLocation(minIndex)\n    \n    const loc = new LinearLocation(minComponentIndex, minSegmentIndex, minFrac)\n    return loc\n  }\n  indexOfAfter(inputPt, minIndex) {\n    if (minIndex === null) return this.indexOf(inputPt)\n    const endLoc = LinearLocation.getEndLocation(this._linearGeom)\n    if (endLoc.compareTo(minIndex) <= 0) return endLoc\n    const closestAfter = this.indexOfFromStart(inputPt, minIndex)\n    Assert.isTrue(closestAfter.compareTo(minIndex) >= 0, 'computed location is before specified minimum location')\n    return closestAfter\n  }\n}\n","import LocationIndexOfPoint from './LocationIndexOfPoint.js'\nexport default class LocationIndexOfLine {\n  constructor() {\n    LocationIndexOfLine.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._linearGeom = null\n    const linearGeom = arguments[0]\n    this._linearGeom = linearGeom\n  }\n  static indicesOf(linearGeom, subLine) {\n    const locater = new LocationIndexOfLine(linearGeom)\n    return locater.indicesOf(subLine)\n  }\n  indicesOf(subLine) {\n    const startPt = subLine.getGeometryN(0).getCoordinateN(0)\n    const lastLine = subLine.getGeometryN(subLine.getNumGeometries() - 1)\n    const endPt = lastLine.getCoordinateN(lastLine.getNumPoints() - 1)\n    const locPt = new LocationIndexOfPoint(this._linearGeom)\n    const subLineLoc = new Array(2).fill(null)\n    subLineLoc[0] = locPt.indexOf(startPt)\n    if (subLine.getLength() === 0.0) \n      subLineLoc[1] = subLineLoc[0].copy()\n    else \n      subLineLoc[1] = locPt.indexOfAfter(endPt, subLineLoc[0])\n    \n    return subLineLoc\n  }\n}\n","import LinearIterator from './LinearIterator.js'\nimport LinearLocation from './LinearLocation.js'\nexport default class LengthLocationMap {\n  constructor() {\n    LengthLocationMap.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._linearGeom = null\n    const linearGeom = arguments[0]\n    this._linearGeom = linearGeom\n  }\n  static getLength(linearGeom, loc) {\n    const locater = new LengthLocationMap(linearGeom)\n    return locater.getLength(loc)\n  }\n  static getLocation() {\n    if (arguments.length === 2) {\n      const linearGeom = arguments[0], length = arguments[1]\n      const locater = new LengthLocationMap(linearGeom)\n      return locater.getLocation(length)\n    } else if (arguments.length === 3) {\n      const linearGeom = arguments[0], length = arguments[1], resolveLower = arguments[2]\n      const locater = new LengthLocationMap(linearGeom)\n      return locater.getLocation(length, resolveLower)\n    }\n  }\n  getLength(loc) {\n    let totalLength = 0.0\n    const it = new LinearIterator(this._linearGeom)\n    while (it.hasNext()) {\n      if (!it.isEndOfLine()) {\n        const p0 = it.getSegmentStart()\n        const p1 = it.getSegmentEnd()\n        const segLen = p1.distance(p0)\n        if (loc.getComponentIndex() === it.getComponentIndex() && loc.getSegmentIndex() === it.getVertexIndex()) \n          return totalLength + segLen * loc.getSegmentFraction()\n        \n        totalLength += segLen\n      }\n      it.next()\n    }\n    return totalLength\n  }\n  resolveHigher(loc) {\n    if (!loc.isEndpoint(this._linearGeom)) return loc\n    let compIndex = loc.getComponentIndex()\n    if (compIndex >= this._linearGeom.getNumGeometries() - 1) return loc\n    do \n      compIndex++\n    while (compIndex < this._linearGeom.getNumGeometries() - 1 && this._linearGeom.getGeometryN(compIndex).getLength() === 0)\n    return new LinearLocation(compIndex, 0, 0.0)\n  }\n  getLocation() {\n    if (arguments.length === 1) {\n      const length = arguments[0]\n      return this.getLocation(length, true)\n    } else if (arguments.length === 2) {\n      const length = arguments[0], resolveLower = arguments[1]\n      let forwardLength = length\n      if (length < 0.0) {\n        const lineLen = this._linearGeom.getLength()\n        forwardLength = lineLen + length\n      }\n      const loc = this.getLocationForward(forwardLength)\n      if (resolveLower) \n        return loc\n      \n      return this.resolveHigher(loc)\n    }\n  }\n  getLocationForward(length) {\n    if (length <= 0.0) return new LinearLocation()\n    let totalLength = 0.0\n    const it = new LinearIterator(this._linearGeom)\n    while (it.hasNext()) {\n      if (it.isEndOfLine()) {\n        if (totalLength === length) {\n          const compIndex = it.getComponentIndex()\n          const segIndex = it.getVertexIndex()\n          return new LinearLocation(compIndex, segIndex, 0.0)\n        }\n      } else {\n        const p0 = it.getSegmentStart()\n        const p1 = it.getSegmentEnd()\n        const segLen = p1.distance(p0)\n        if (totalLength + segLen > length) {\n          const frac = (length - totalLength) / segLen\n          const compIndex = it.getComponentIndex()\n          const segIndex = it.getVertexIndex()\n          return new LinearLocation(compIndex, segIndex, frac)\n        }\n        totalLength += segLen\n      }\n      it.next()\n    }\n    return LinearLocation.getEndLocation(this._linearGeom)\n  }\n}\n","import CoordinateList from '../geom/CoordinateList.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nexport default class LinearGeometryBuilder {\n  constructor() {\n    LinearGeometryBuilder.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._geomFact = null\n    this._lines = new ArrayList()\n    this._coordList = null\n    this._ignoreInvalidLines = false\n    this._fixInvalidLines = false\n    this._lastPt = null\n    const geomFact = arguments[0]\n    this._geomFact = geomFact\n  }\n  getGeometry() {\n    this.endLine()\n    return this._geomFact.buildGeometry(this._lines)\n  }\n  getLastCoordinate() {\n    return this._lastPt\n  }\n  endLine() {\n    if (this._coordList === null) \n      return null\n    \n    if (this._ignoreInvalidLines && this._coordList.size() < 2) {\n      this._coordList = null\n      return null\n    }\n    const rawPts = this._coordList.toCoordinateArray()\n    let pts = rawPts\n    if (this._fixInvalidLines) pts = this.validCoordinateSequence(rawPts)\n    this._coordList = null\n    let line = null\n    try {\n      line = this._geomFact.createLineString(pts)\n    } catch (ex) {\n      if (ex instanceof IllegalArgumentException) {\n        if (!this._ignoreInvalidLines) throw ex\n      } else {\n        throw ex\n      }\n    } finally {}\n    if (line !== null) this._lines.add(line)\n  }\n  setFixInvalidLines(fixInvalidLines) {\n    this._fixInvalidLines = fixInvalidLines\n  }\n  add() {\n    if (arguments.length === 1) {\n      const pt = arguments[0]\n      this.add(pt, true)\n    } else if (arguments.length === 2) {\n      const pt = arguments[0], allowRepeatedPoints = arguments[1]\n      if (this._coordList === null) this._coordList = new CoordinateList()\n      this._coordList.add(pt, allowRepeatedPoints)\n      this._lastPt = pt\n    }\n  }\n  setIgnoreInvalidLines(ignoreInvalidLines) {\n    this._ignoreInvalidLines = ignoreInvalidLines\n  }\n  validCoordinateSequence(pts) {\n    if (pts.length >= 2) return pts\n    const validPts = [pts[0], pts[0]]\n    return validPts\n  }\n}\n","import CoordinateList from '../geom/CoordinateList.js'\nimport hasInterface from '../../../../hasInterface.js'\nimport LinearIterator from './LinearIterator.js'\nimport Lineal from '../geom/Lineal.js'\nimport Assert from '../util/Assert.js'\nimport LinearGeometryBuilder from './LinearGeometryBuilder.js'\nexport default class ExtractLineByLocation {\n  constructor() {\n    ExtractLineByLocation.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._line = null\n    const line = arguments[0]\n    this._line = line\n  }\n  static extract(line, start, end) {\n    const ls = new ExtractLineByLocation(line)\n    return ls.extract(start, end)\n  }\n  computeLinear(start, end) {\n    const builder = new LinearGeometryBuilder(this._line.getFactory())\n    builder.setFixInvalidLines(true)\n    if (!start.isVertex()) builder.add(start.getCoordinate(this._line))\n    for (let it = new LinearIterator(this._line, start); it.hasNext(); it.next()) {\n      if (end.compareLocationValues(it.getComponentIndex(), it.getVertexIndex(), 0.0) < 0) break\n      const pt = it.getSegmentStart()\n      builder.add(pt)\n      if (it.isEndOfLine()) builder.endLine()\n    }\n    if (!end.isVertex()) builder.add(end.getCoordinate(this._line))\n    return builder.getGeometry()\n  }\n  computeLine(start, end) {\n    const coordinates = this._line.getCoordinates()\n    const newCoordinates = new CoordinateList()\n    let startSegmentIndex = start.getSegmentIndex()\n    if (start.getSegmentFraction() > 0.0) startSegmentIndex += 1\n    let lastSegmentIndex = end.getSegmentIndex()\n    if (end.getSegmentFraction() === 1.0) lastSegmentIndex += 1\n    if (lastSegmentIndex >= coordinates.length) lastSegmentIndex = coordinates.length - 1\n    if (!start.isVertex()) newCoordinates.add(start.getCoordinate(this._line))\n    for (let i = startSegmentIndex; i <= lastSegmentIndex; i++) \n      newCoordinates.add(coordinates[i])\n    \n    if (!end.isVertex()) newCoordinates.add(end.getCoordinate(this._line))\n    if (newCoordinates.size() <= 0) newCoordinates.add(start.getCoordinate(this._line))\n    let newCoordinateArray = newCoordinates.toCoordinateArray()\n    if (newCoordinateArray.length <= 1) \n      newCoordinateArray = [newCoordinateArray[0], newCoordinateArray[0]]\n    \n    return this._line.getFactory().createLineString(newCoordinateArray)\n  }\n  extract(start, end) {\n    if (end.compareTo(start) < 0) \n      return this.reverse(this.computeLinear(end, start))\n    \n    return this.computeLinear(start, end)\n  }\n  reverse(linear) {\n    if (hasInterface(linear, Lineal)) return linear.reverse()\n    Assert.shouldNeverReachHere('non-linear geometry encountered')\n    return null\n  }\n}\n","import LengthIndexOfPoint from './LengthIndexOfPoint.js'\nimport LocationIndexOfLine from './LocationIndexOfLine.js'\nimport LengthLocationMap from './LengthLocationMap.js'\nimport ExtractLineByLocation from './ExtractLineByLocation.js'\nexport default class LengthIndexedLine {\n  constructor() {\n    LengthIndexedLine.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._linearGeom = null\n    const linearGeom = arguments[0]\n    this._linearGeom = linearGeom\n  }\n  clampIndex(index) {\n    const posIndex = this.positiveIndex(index)\n    const startIndex = this.getStartIndex()\n    if (posIndex < startIndex) return startIndex\n    const endIndex = this.getEndIndex()\n    if (posIndex > endIndex) return endIndex\n    return posIndex\n  }\n  locationOf() {\n    if (arguments.length === 1) {\n      const index = arguments[0]\n      return LengthLocationMap.getLocation(this._linearGeom, index)\n    } else if (arguments.length === 2) {\n      const index = arguments[0], resolveLower = arguments[1]\n      return LengthLocationMap.getLocation(this._linearGeom, index, resolveLower)\n    }\n  }\n  project(pt) {\n    return LengthIndexOfPoint.indexOf(this._linearGeom, pt)\n  }\n  positiveIndex(index) {\n    if (index >= 0.0) return index\n    return this._linearGeom.getLength() + index\n  }\n  extractPoint() {\n    if (arguments.length === 1) {\n      const index = arguments[0]\n      const loc = LengthLocationMap.getLocation(this._linearGeom, index)\n      return loc.getCoordinate(this._linearGeom)\n    } else if (arguments.length === 2) {\n      const index = arguments[0], offsetDistance = arguments[1]\n      const loc = LengthLocationMap.getLocation(this._linearGeom, index)\n      const locLow = loc.toLowest(this._linearGeom)\n      return locLow.getSegment(this._linearGeom).pointAlongOffset(locLow.getSegmentFraction(), offsetDistance)\n    }\n  }\n  isValidIndex(index) {\n    return index >= this.getStartIndex() && index <= this.getEndIndex()\n  }\n  getEndIndex() {\n    return this._linearGeom.getLength()\n  }\n  getStartIndex() {\n    return 0.0\n  }\n  indexOfAfter(pt, minIndex) {\n    return LengthIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex)\n  }\n  extractLine(startIndex, endIndex) {\n    const startIndex2 = this.clampIndex(startIndex)\n    const endIndex2 = this.clampIndex(endIndex)\n    const resolveStartLower = startIndex2 === endIndex2\n    const startLoc = this.locationOf(startIndex2, resolveStartLower)\n    const endLoc = this.locationOf(endIndex2)\n    return ExtractLineByLocation.extract(this._linearGeom, startLoc, endLoc)\n  }\n  indexOf(pt) {\n    return LengthIndexOfPoint.indexOf(this._linearGeom, pt)\n  }\n  indicesOf(subLine) {\n    const locIndex = LocationIndexOfLine.indicesOf(this._linearGeom, subLine)\n    const index = [LengthLocationMap.getLength(this._linearGeom, locIndex[0]), LengthLocationMap.getLength(this._linearGeom, locIndex[1])]\n    return index\n  }\n}\n","import LineString from '../geom/LineString.js'\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException.js'\nimport LinearLocation from './LinearLocation.js'\nimport LocationIndexOfPoint from './LocationIndexOfPoint.js'\nimport LocationIndexOfLine from './LocationIndexOfLine.js'\nimport ExtractLineByLocation from './ExtractLineByLocation.js'\nimport MultiLineString from '../geom/MultiLineString.js'\nexport default class LocationIndexedLine {\n  constructor() {\n    LocationIndexedLine.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._linearGeom = null\n    const linearGeom = arguments[0]\n    this._linearGeom = linearGeom\n    this.checkGeometryType()\n  }\n  clampIndex(index) {\n    const loc = index.copy()\n    loc.clamp(this._linearGeom)\n    return loc\n  }\n  project(pt) {\n    return LocationIndexOfPoint.indexOf(this._linearGeom, pt)\n  }\n  checkGeometryType() {\n    if (!(this._linearGeom instanceof LineString || this._linearGeom instanceof MultiLineString)) throw new IllegalArgumentException('Input geometry must be linear')\n  }\n  extractPoint() {\n    if (arguments.length === 1) {\n      const index = arguments[0]\n      return index.getCoordinate(this._linearGeom)\n    } else if (arguments.length === 2) {\n      const index = arguments[0], offsetDistance = arguments[1]\n      const indexLow = index.toLowest(this._linearGeom)\n      return indexLow.getSegment(this._linearGeom).pointAlongOffset(indexLow.getSegmentFraction(), offsetDistance)\n    }\n  }\n  isValidIndex(index) {\n    return index.isValid(this._linearGeom)\n  }\n  getEndIndex() {\n    return LinearLocation.getEndLocation(this._linearGeom)\n  }\n  getStartIndex() {\n    return new LinearLocation()\n  }\n  indexOfAfter(pt, minIndex) {\n    return LocationIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex)\n  }\n  extractLine(startIndex, endIndex) {\n    return ExtractLineByLocation.extract(this._linearGeom, startIndex, endIndex)\n  }\n  indexOf(pt) {\n    return LocationIndexOfPoint.indexOf(this._linearGeom, pt)\n  }\n  indicesOf(subLine) {\n    return LocationIndexOfLine.indicesOf(this._linearGeom, subLine)\n  }\n}\n","import ArrayList from '../../../../java/util/ArrayList.js'\nexport default class CollectionUtil {\n  static transform(coll, func) {\n    const result = new ArrayList()\n    for (let i = coll.iterator(); i.hasNext(); ) \n      result.add(func.execute(i.next()))\n    \n    return result\n  }\n  static select(collection, func) {\n    const result = new ArrayList()\n    for (let i = collection.iterator(); i.hasNext(); ) {\n      const item = i.next()\n      if (Boolean.TRUE.equals(func.execute(item))) \n        result.add(item)\n      \n    }\n    return result\n  }\n  static apply(coll, func) {\n    for (let i = coll.iterator(); i.hasNext(); ) \n      func.execute(i.next())\n    \n  }\n}\nfunction Function() {}\nCollectionUtil.Function = Function\n","import CoordinateFilter from '../geom/CoordinateFilter.js'\nexport default class CoordinateArrayFilter {\n  constructor() {\n    CoordinateArrayFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.pts = null\n    this.n = 0\n    const size = arguments[0]\n    this.pts = new Array(size).fill(null)\n  }\n  filter(coord) {\n    this.pts[this.n++] = coord\n  }\n  getCoordinates() {\n    return this.pts\n  }\n  get interfaces_() {\n    return [CoordinateFilter]\n  }\n}\n","import CoordinateFilter from '../geom/CoordinateFilter.js'\nexport default class CoordinateCountFilter {\n  constructor() {\n    CoordinateCountFilter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._n = 0\n  }\n  filter(coord) {\n    this._n++\n  }\n  getCount() {\n    return this._n\n  }\n  get interfaces_() {\n    return [CoordinateFilter]\n  }\n}\n","import HashMap from '../../../../java/util/HashMap.js'\nexport default class ObjectCounter {\n  constructor() {\n    ObjectCounter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this._counts = new HashMap()\n  }\n  count(o) {\n    const counter = this._counts.get(o)\n    if (counter === null) return 0; else return counter.count()\n  }\n  add(o) {\n    const counter = this._counts.get(o)\n    if (counter === null) this._counts.put(o, new Counter(1)); else counter.increment()\n  }\n}\nclass Counter {\n  constructor() {\n    Counter.constructor_.apply(this, arguments)\n  }\n  static constructor_() {\n    this.count = 0\n    if (arguments.length === 0) {} else if (arguments.length === 1) {\n      const count = arguments[0]\n      this.count = count\n    }\n  }\n  count() {\n    return this.count\n  }\n  increment() {\n    this.count++\n  }\n}\nObjectCounter.Counter = Counter\n","export default function PrintStream() {}\n","export default function StringReader() {}\n","export default function ByteArrayOutputStream() {}\n","import Exception from '../lang/Exception.js'\n\nexport default class IOException extends Exception { }","export default function LineNumberReader() {}\n","import PrintStream from '../../../../java/io/PrintStream.js'\nimport StringReader from '../../../../java/io/StringReader.js'\nimport System from '../../../../java/lang/System.js'\nimport ArrayList from '../../../../java/util/ArrayList.js'\nimport ByteArrayOutputStream from '../../../../java/io/ByteArrayOutputStream.js'\nimport Assert from './Assert.js'\nimport IOException from '../../../../java/io/IOException.js'\nimport LineNumberReader from '../../../../java/io/LineNumberReader.js'\nexport default class StringUtil {\n  static chars(c, n) {\n    const ch = new Array(n).fill(null)\n    for (let i = 0; i < n; i++) \n      ch[i] = c\n    \n    return new String(ch)\n  }\n  static getStackTrace() {\n    if (arguments.length === 1) {\n      const t = arguments[0]\n      const os = new ByteArrayOutputStream()\n      const ps = new PrintStream(os)\n      t.printStackTrace(ps)\n      return os.toString()\n    } else if (arguments.length === 2) {\n      const t = arguments[0], depth = arguments[1]\n      let stackTrace = ''\n      const stringReader = new StringReader(StringUtil.getStackTrace(t))\n      const lineNumberReader = new LineNumberReader(stringReader)\n      for (let i = 0; i < depth; i++) \n        try {\n          stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE\n        } catch (e) {\n          if (e instanceof IOException) \n            Assert.shouldNeverReachHere()\n          else throw e\n        } finally {}\n      \n      return stackTrace\n    }\n  }\n  static spaces(n) {\n    return StringUtil.chars(' ', n)\n  }\n  static split(s, separator) {\n    const separatorlen = separator.length\n    const tokenList = new ArrayList()\n    let tmpString = '' + s\n    let pos = tmpString.indexOf(separator)\n    while (pos >= 0) {\n      const token = tmpString.substring(0, pos)\n      tokenList.add(token)\n      tmpString = tmpString.substring(pos + separatorlen)\n      pos = tmpString.indexOf(separator)\n    }\n    if (tmpString.length > 0) tokenList.add(tmpString)\n    const res = new Array(tokenList.size()).fill(null)\n    for (let i = 0; i < res.length; i++) \n      res[i] = tokenList.get(i)\n    \n    return res\n  }\n}\nStringUtil.NEWLINE = System.getProperty('line.separator')\n","import WKTWriter from './io/WKTWriter.js'\nimport IsValidOp from './operation/valid/IsValidOp.js'\nimport InteriorPointArea from './algorithm/InteriorPointArea.js'\nimport UnaryUnionOp from './operation/union/UnaryUnionOp.js'\nimport UnionOp from './operation/union/UnionOp.js'\nimport InteriorPointLine from './algorithm/InteriorPointLine.js'\nimport IsSimpleOp from './operation/IsSimpleOp.js'\nimport BufferOp from './operation/buffer/BufferOp.js'\nimport ConvexHull from './algorithm/ConvexHull.js'\nimport Centroid from './algorithm/Centroid.js'\nimport RelateOp from './operation/relate/RelateOp.js'\nimport InteriorPointPoint from './algorithm/InteriorPointPoint.js'\nimport DistanceOp from './operation/distance/DistanceOp.js'\nimport OverlayOp from './operation/overlay/OverlayOp.js'\nimport BoundaryOp from './operation/BoundaryOp.js'\nimport Geometry from './geom/Geometry.js'\nimport LineString from './geom/LineString.js'\nimport MultiLineString from './geom/MultiLineString.js'\n\nLineString.prototype.getBoundary = function() {\n  return BoundaryOp.getBoundary(this)\n}\n\nMultiLineString.prototype.getBoundary = function() {\n  return BoundaryOp.getBoundary(this)\n}\n\nGeometry.prototype.equalsTopo = function(g) {\n  return RelateOp.equalsTopo(this, g)\n}\nGeometry.prototype.equals = function(g) {\n  if (g === null) return false\n  return RelateOp.equalsTopo(this, g)\n}\nGeometry.prototype.union = function() {\n  if (arguments.length === 0) {\n    return UnaryUnionOp.union(this)\n  } else if (arguments.length === 1) {\n    const other = arguments[0]\n    return UnionOp.union(this, other)\n  }\n}\nGeometry.prototype.isValid = function() {\n  return IsValidOp.isValid(this)\n}\nGeometry.prototype.intersection = function(other) {\n  return OverlayOp.intersection(this, other)\n}\nGeometry.prototype.covers = function(g) {\n  return RelateOp.covers(this, g)\n}\nGeometry.prototype.coveredBy = function(g) {\n  return RelateOp.covers(g, this)\n}\nGeometry.prototype.touches = function(g) {\n  return RelateOp.touches(this, g)\n}\nGeometry.prototype.intersects = function(g) {\n  return RelateOp.intersects(this, g)\n}\nGeometry.prototype.within = function(g) {\n  return RelateOp.contains(g, this)\n}\nGeometry.prototype.overlaps = function(g) {\n  return RelateOp.overlaps(this, g)\n}\nGeometry.prototype.disjoint = function(g) {\n  return RelateOp.disjoint(this, g)\n}\nGeometry.prototype.crosses = function(g) {\n  return RelateOp.crosses(this, g)\n}\nGeometry.prototype.buffer = function() {\n  if (arguments.length === 1) {\n    const distance = arguments[0]\n    return BufferOp.bufferOp(this, distance)\n  } else if (arguments.length === 2) {\n    const distance = arguments[0]; const quadrantSegments = arguments[1]\n    return BufferOp.bufferOp(this, distance, quadrantSegments)\n  } else if (arguments.length === 3) {\n    const distance = arguments[0]; const quadrantSegments = arguments[1]; const endCapStyle = arguments[2]\n    return BufferOp.bufferOp(this, distance, quadrantSegments, endCapStyle)\n  }\n}\nGeometry.prototype.convexHull = function() {\n  return new ConvexHull(this).getConvexHull()\n}\nGeometry.prototype.relate = function() {\n  if (arguments.length === 1) {\n    const geometry = arguments[0]\n    return RelateOp.relate(this, geometry)\n  } else if (arguments.length === 2) {\n    const geometry = arguments[0]; const intersectionPattern = arguments[1]\n    return RelateOp.relate(this, geometry).matches(intersectionPattern)\n  }\n}\nGeometry.prototype.getCentroid = function() {\n  if (this.isEmpty()) return this._factory.createPoint()\n  const centPt = Centroid.getCentroid(this)\n  return this.createPointFromInternalCoord(centPt, this)\n}\nGeometry.prototype.getInteriorPoint = function() {\n  if (this.isEmpty()) return this._factory.createPoint()\n  let intPt = null\n  const dim = this.getDimension()\n  if (dim === 0)\n    intPt = new InteriorPointPoint(this)\n  else if (dim === 1)\n    intPt = new InteriorPointLine(this)\n  else intPt = new InteriorPointArea(this)\n\n  const interiorPt = intPt.getInteriorPoint()\n  return this.createPointFromInternalCoord(interiorPt, this)\n}\nGeometry.prototype.symDifference = function(other) {\n  return OverlayOp.symDifference(this, other)\n}\nGeometry.prototype.createPointFromInternalCoord = function(coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord)\n  return exemplar.getFactory().createPoint(coord)\n}\nGeometry.prototype.toText = function() {\n  const writer = new WKTWriter()\n  return writer.write(this)\n}\nGeometry.prototype.toString = function() {\n  this.toText()\n}\nGeometry.prototype.contains = function(g) {\n  return RelateOp.contains(this, g)\n}\nGeometry.prototype.difference = function(other) {\n  return OverlayOp.difference(this, other)\n}\nGeometry.prototype.isSimple = function() {\n  const op = new IsSimpleOp(this)\n  return op.isSimple()\n}\nGeometry.prototype.isWithinDistance = function(geom, distance) {\n  const envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal())\n  if (envDist > distance) return false\n  return DistanceOp.isWithinDistance(this, geom, distance)\n}\nGeometry.prototype.distance = function(g) {\n  return DistanceOp.distance(this, g)\n}\n","import * as geom from './org/locationtech/jts/geom.js'\nimport * as algorithm from './org/locationtech/jts/algorithm.js'\nimport * as densify from './org/locationtech/jts/densify.js'\nimport * as dissolve from './org/locationtech/jts/dissolve.js'\nimport * as geomgraph from './org/locationtech/jts/geomgraph.js'\nimport * as index from './org/locationtech/jts/index.js'\nimport * as io from './org/locationtech/jts/io.js'\nimport * as noding from './org/locationtech/jts/noding.js'\nimport * as operation from './org/locationtech/jts/operation.js'\nimport * as precision from './org/locationtech/jts/precision.js'\nimport * as simplify from './org/locationtech/jts/simplify.js'\nimport * as triangulate from './org/locationtech/jts/triangulate.js'\nimport * as linearref from './org/locationtech/jts/linearref.js'\nimport * as util from './org/locationtech/jts/util.js'\n\nimport './org/locationtech/jts/monkey.js'\n\nconst version = 'npm_package_version (git_hash)'\nexport {\n  version,\n  algorithm,\n  densify,\n  dissolve,\n  geom,\n  geomgraph,\n  index,\n  io,\n  noding,\n  operation,\n  precision,\n  simplify,\n  triangulate,\n  linearref,\n  util\n}\n"],"names":["NumberUtil","equalsWithTolerance","x1","x2","tolerance","Math","abs","Exception","Error","constructor","message","name","Object","keys","toString","IllegalArgumentException","Long","high","low","toBinaryString","i","mask","result","Double","NaN","isNaN","n","Number","isInfinite","isFinite","MAX_VALUE","POSITIVE_INFINITY","NEGATIVE_INFINITY","Float64Array","Int32Array","EXP_BIT_MASK","SIGNIF_BIT_MASK","f64buf","i32buf","buffer","doubleToLongBits","value","longBitsToDouble","bits","BIAS","log2","floor","pow","MAX_REL_BITS_INTEGER","x","y","f","skip","sign","exp","Infinity","fract","Comparable","Clonable","Comparator","Serializable","RuntimeException","AssertionFailedException","constructor_","apply","arguments","length","call","Assert","shouldNeverReachHere","isTrue","assertion","equals","expectedValue","actualValue","kBuf","ArrayBuffer","kBufAsF64","kBufAsI32","Coordinate","z","c","getZ","NULL_ORDINATE","hashCode","getM","setOrdinate","ordinateIndex","X","Y","Z","setZ","equals2D","other","setM","m","M","getOrdinate","equals3D","equalInZ","setX","compareTo","o","getX","clone","coord","e","CloneNotSupportedException","copy","distance3D","dx","dy","dz","sqrt","getY","setY","distance","setCoordinate","interfaces_","Cloneable","DimensionalComparator","_dimensionsToTest","dimensionsToTest","compare","a","b","c1","c2","compX","compY","compZ","CoordinateXY","CoordinateXYM","_m","CoordinateXYZM","indexOf","Collection","add","addAll","isEmpty","iterator","size","toArray","remove","IndexOutOfBoundsException","List","get","set","NoSuchElementException","ArrayList","array","ensureCapacity","push","splice","clear","index","element","oldElement","Iterator","sort","comparator","slice","len","Symbol","values","arrayList","position","next","hasNext","CoordinateList","allowRepeated","getCoordinate","hasInterface","coll","isChanged","toCoordinateArray","coordArrayType","isForward","pts","Array","fill","last","obj","direction","isInteger","prev","start","end","inc","closeRing","duplicate","CoordinateSequenceFilter","filter","seq","isDone","isGeometryChanged","Envelope","_minx","_maxx","_miny","_maxy","init","p","env","p1","p2","y1","y2","intersects","q","q1","q2","minq","min","maxq","max","minp","maxp","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersection","intMinX","intMinY","intMaxX","intMaxY","covers","envminx","envmaxx","envminy","envmaxy","getDiameter","w","h","expandToInclude","minExtent","translate","transX","transY","setToNull","disjoint","maxExtent","expandBy","deltaX","deltaY","contains","centre","StringBuffer","str","append","setCharAt","substr","Integer","intValue","isNan","valueOf","Character","isWhitespace","toUpperCase","IllegalStateException","DD","_hi","_lo","dd","parse","hi","lo","determinant","det","multiply","selfSubtract","sqr","selfMultiply","strlen","charAt","isNegative","signCh","val","numDigits","numBeforeDec","hasDecimalChar","ch","isDigit","d","TEN","selfAdd","expStr","substring","parseInt","ex","NumberFormatException","val2","numDecPlaces","scale","divide","negate","createNaN","magnitude","xAbs","xLog10","log","xMag","trunc","xApprox","stringOfChar","buf","le","extractSignificantDigits","insertDecimalPoint","mag","gt","lt","ONE","decimalPointPos","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","continueExtractingDigits","remMag","doubleValue","isZero","getSpecialNumberString","selfDivide","yhi","ylo","hc","tc","hy","ty","C","U","u","SPLIT","dump","zhi","zlo","ge","r","s","reciprocal","ceil","fhi","flo","rint","plus5","setValue","ax","axdd","diffSq","d2","H","S","T","t","hx","tx","selfSqr","toStandardNotation","toSciNotation","specialStr","sigDigits","num","numZeroes","zeroes","SCI_NOT_ZERO","digits","SCI_NOT_EXPONENT_CHAR","trailingDigits","digitsWithDecimal","isPositive","signum","PI","TWO_PI","PI_2","E","EPS","CGAlgorithmsDD","orientationIndex","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","px","py","pw","qx","qy","qw","xInt","yInt","pa","pb","pc","detsum","detleft","detright","errbound","DP_SAFE_EPSILON","CoordinateSequence","hasM","mIndex","getDimension","getMeasures","hasZ","getCoordinateCopy","createCoordinate","expandEnvelope","Orientation","isCCW","ring","nPts","hiPt","hiIndex","iPrev","iNext","disc","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","COLLINEAR","STRAIGHT","Intersection","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","midx","midy","p1x","p1y","p2x","p2y","q1x","q1y","q2x","q2y","System","arraycopy","src","srcPos","dest","destPos","getProperty","MathUtil","log10","ln","LOG_10","v1","v2","v3","v4","clamp","wrap","average","Distance","segmentToSegment","A","B","D","pointToSegment","noIntersection","denom","r_num","s_num","len2","pointToLinePerpendicular","pointToSegmentString","line","minDistance","dist","CoordinateSequenceFactory","create","dimension","GeometryComponentFilter","geom","Geometry","isGeometryCollection","getTypeCode","TYPECODE_GEOMETRYCOLLECTION","getFactory","_factory","getGeometryN","isRectangle","equalsExact","geometryChanged","geometryChangedFilter","geometryChangedAction","_envelope","equalsNorm","g","norm","getLength","getNumGeometries","compareToSameClass","comp","getUserData","_userData","getSRID","_SRID","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","reverse","res","reverseInternal","envelope","setSRID","copyInternal","getPrecisionModel","computeEnvelopeInternal","SRID","setUserData","userData","j","aElement","bElement","comparison","isEquivalentClass","getClass","isGeometryCollectionOrDerived","TYPECODE_MULTIPOINT","TYPECODE_MULTILINESTRING","TYPECODE_MULTIPOLYGON","hasNonEmptyElements","geometries","hasNullElements","factory","TYPECODE_POINT","TYPECODE_LINESTRING","TYPECODE_LINEARRING","TYPECODE_POLYGON","TYPENAME_POINT","TYPENAME_MULTIPOINT","TYPENAME_LINESTRING","TYPENAME_LINEARRING","TYPENAME_MULTILINESTRING","TYPENAME_POLYGON","TYPENAME_MULTIPOLYGON","TYPENAME_GEOMETRYCOLLECTION","CoordinateFilter","Length","ofLine","x0","y0","Lineal","CoordinateSequences","copyCoord","minDim","dim","isRing","scroll","indexOfFirstCoordinate","firstCoordinate","ensureRing","k","isEqual","cs1","cs2","cs1Size","cs2Size","minCoordinateIndex","from","to","minCoordIndex","minCoord","testCoord","extend","fact","newseq","mid","swap","tmp","ensureValidRing","createClosedRing","isClosed","coordinate","minCoordinate","UnsupportedOperationException","Dimension","toDimensionSymbol","dimensionValue","FALSE","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","SYM_A","toDimensionValue","dimensionSymbol","GeometryFilter","LineString","_points","points","isSimple","getCoordinates","otherLineString","getBoundaryDimension","getCoordinateN","getNumPoints","createLineString","getEndPoint","getPointN","getBoundary","getGeometryType","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","pt","getStartPoint","createPoint","Puntal","Point","_coordinates","coordinates","point","createGeometryCollection","Area","ofRing","ofRingSigned","sum","p0","Arrays","concat","asList","copyOf","original","newLength","Polygonal","Polygon","_shell","_holes","shell","holes","createLinearRing","shellCoordinates","childCoordinates","area","shellCopy","holeCopies","getNumInteriorRing","prevX","prevY","xChanged","yChanged","otherPolygon","thisShell","otherPolygonShell","normalized","clockwise","getExteriorRing","getInteriorRingN","createPolygon","numPoints","convexHull","otherShell","poly","shellComp","nHole1","nHole2","thisHole","otherHole","holeComp","createMultiLineString","rings","Set","SortedSet","TreeSet","GeometryCollection","_geometries","otherCollection","numGeometries","reversed","buildGeometry","theseElements","otherElements","gc","n1","n2","thisGeom","otherGeom","MultiPoint","isValid","LinearRing","validateConstruction","MINIMUM_VALID_SIZE","Coordinates","measures","CoordinateArrays","ptNotInList","testPts","testPt","newCoordinates","coord1","coord2","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","atLeastNCoordinatesOrNothing","increasingDirection","extract","npts","extractPts","iPts","ForwardComparator","o1","o2","BidirectionalComparator","forwardComp","isEqualRev","OLDcompare","dir1","dir2","i1","i2","comparePt","StringBuilder","CoordinateArraySequence","_dimension","_measures","coordSeq","cloneCoordinates","strBuilder","CoordinateArraySequenceFactory","instance","instanceObject","readResolve","spatial","MultiPolygon","polygons","allRings","polygon","allRingsArray","Map","put","entrySet","HashSet","map","has","done","current","HashMap","MapInterface","key","it","hashSet","entries","forEach","entry","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","mostPrecise","pm1","pm2","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","makePrecise","floatSingleVal","round","maxSigDigits","_name","nameToTypeMap","maximumPreciseValue","MultiLineString","lineStrings","GeometryFactory","_precisionModel","_coordinateSequenceFactory","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","toMultiPolygonArray","multiPolygons","multiPolygonArray","toGeometryArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","toLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","toPointArray","pointArray","toPolygonArray","polygonArray","createPointFromInternalCoord","exemplar","createEmpty","geomList","geomType","isHeterogeneous","hasGeometryCollection","partType","geom0","isCollection","createMultiPolygon","createMultiPoint","createMultiPointFromCoords","ptSeq","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","EMPTY","ZM","TokenType","TEXT","LEFT_PAREN","RIGHT_PAREN","NUMBER","COMMA","EOF","type","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","decimal","undefined","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","parseFloat","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","match","geometry","parseGeometry_","parseGeometryLayout_","layout","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","token","o2c","ordinates","ca2p","components","encodePointGeometry","cs","join","encodeMultiPointGeometry","ii","encodeGeometryCollectionGeometry","encode","encodeLineStringGeometry","encodeMultiLineStringGeometry","encodePolygonGeometry","encodeMultiPolygonGeometry","encodeGeometryLayout","GeometryEncoder","geometryEncoder","enc","WKTParser","geometryFactory","read","parser","write","WKTWriter","toLineString","LineIntersector","_result","_inputLines","_intPt","_intLineIndex","_isProper","_pa","_pb","computeEdgeDistance","pdx","pdy","nonRobustComputeEdgeDistance","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuilder","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","dist0","getEdgeDistance","dist1","isProper","hasIntersection","setPrecisionModel","isInteriorIntersection","inputLineIndex","getIntersection","NO_INTERSECTION","COLLINEAR_INTERSECTION","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","DONT_INTERSECT","DO_INTERSECT","POINT_INTERSECTION","RobustLineIntersector","nearestEndpoint","nearestPt","minDist","isInSegmentEnvelopes","intPt","env0","env1","intersectionSafe","checkDD","intPtDD","isIn","out","println","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","Pq1","Pq2","Qp1","Qp2","collinear","LineSegment","ls","midPoint","minX","seg","orient0","orient1","geomFactory","isVertical","li","project","projectionFactor","pf0","pf1","newp0","newp1","angle","atan2","distancePerpendicular","minY","closestPoints","closestPt","close00","closestPoint","close01","close10","close11","factor","maxX","comp0","temp","equalsTopo","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","offsetx","offsety","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","reflect","A2plusB2","A2subB2","rx","ry","pointAlong","bits0","hash0","bits1","hash1","Location","toLocationSymbol","locationValue","EXTERIOR","BOUNDARY","INTERIOR","NONE","IntersectionMatrix","_matrix","setAll","elements","matches","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","requiredDimensionSymbols","isIntersects","isDisjoint","isCovers","hasPointInCommon","isCoveredBy","dimensionSymbols","row","col","column","isContains","setAtLeast","minimumDimensionSymbols","minimumDimensionValue","setAtLeastIfValid","isWithin","isTouches","dimensionOfGeometryA","dimensionOfGeometryB","isOverlaps","isEquals","builder","ai","bi","transpose","im","isCrosses","Angle","toDegrees","radians","PI_TIMES_2","isAcute","dx0","dy0","dotprod","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","a1","a2","diff","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","PI_OVER_2","PI_OVER_4","NotRepresentableException","HCoordinate","_x","_y","_w","Triangle","signedArea","m00","m01","m10","m11","interpolateZ","v0","longestSideLength","lenAB","lenBC","lenCA","maxLen","circumcentreDD","ay","bx","by","asqr","bsqr","numx","numy","ccx","ccy","circumcentre","cx","cy","perpendicularBisector","l1","l2","angleBisector","len0","frac","splitPt","area3D","uz","vx","vy","vz","crossx","crossy","crossz","absSq","centroid","inCentre","len1","circum","inCentreX","inCentreY","NoninvertibleTransformationException","msg","AffineTransformation","_m00","_m01","_m02","_m10","_m11","_m12","setToIdentity","matrix","trans","setTransformation","m02","m12","translationInstance","setToTranslation","shearInstance","xShear","yShear","setToShear","reflectionInstance","setToReflection","rotationInstance","theta","cos","sinTheta","cosTheta","setToRotation","scaleInstance","xScale","yScale","setToScale","setToReflectionBasic","c2s2","getInverse","getDeterminant","im00","im10","im01","im11","im02","im12","compose","mp00","mp01","mp02","mp10","mp11","mp12","isIdentity","getMatrixEntries","transform","rotate","composeBefore","shear","g2","xp","yp","Matrix","solve","maxElementRow","swapRows","rowFactor","solution","AffineTransformationBuilder","_src0","_src1","_src2","_dest0","_dest1","_dest2","src0","src1","src2","dest0","dest1","dest2","compute","row0","row1","getTransformation","isSolvable","AffineTransformationFactory","createFromBaseLines","rotPt","ang","srcDist","destDist","createFromControlVectors","ComponentCoordinateExtracter","_coords","coords","GeometryCollectionMapper","_mapOp","mapOp","op","mapper","mapped","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","geoms","extractFactory","combine","combiner","g0","g1","createList","obj0","obj1","list","obj2","extractElements","elems","elemGeom","GeometryEditor","_isUserDataCopied","setCopyUserData","isUserDataCopied","edit","operation","editInternal","editGeometryCollection","editPolygon","collection","collectionForType","newPolygon","hole","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","GeometryExtracter","_geometryType","_comps","geometryType","comps","isOfType","GeometryMapper","MapOp","gr","GeometryTransformer","_inputGeom","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","parent","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","inputGeom","seqSize","LineStringExtracter","getGeometry","getLines","lines","LinearComponentExtracter","_lines","_isForcedToLineString","isForcedToLineString","forceToLineString","setForceToLineString","Collections","reverseOrder","l","pos","alen","singletonList","PointExtracter","_pts","getPoints","PolygonExtracter","getPolygons","ShortCircuitedGeometryVisitor","_isDone","applyTo","visit","GeometricShapeFactory","_geomFact","_precModel","_dim","Dimensions","_nPts","_rotationAngle","geomFact","createSupercircle","power","recipPow","radius","getMinSize","getCentre","r4","xyInt","nSegsInOct","totPts","xInc","x4","coordTrans","setNumPoints","setBase","base","setRotation","setWidth","width","createEllipse","xRadius","yRadius","centreX","centreY","iPt","createSquircle","setEnvelope","setCentre","createArc","startAng","angExtent","angSize","angInc","createArcPolygon","createRectangle","ipt","nSide","XsegLen","YsegLen","createCircle","setHeight","height","setSize","getBase","SineStarFactory","_numArms","_armLengthRatio","origin","nArms","armLengthRatio","gsf","setArmLengthRatio","setNumArms","createSineStar","numArms","armRatio","armMaxLen","insideRadius","ptArcFrac","armAngFrac","armAng","armLenFrac","curveRadius","PointPairDistance","_pt","_distance","_isNull","setMinimum","ptDist","initialize","getDistance","setMaximum","DistanceToPoint","computeDistance","tempSegment","segment","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","densifyFrac","setDensifyFraction","computeOrientedDistance","discreteGeom","distFilter","MaxPointDistanceFilter","getMaxPointDistance","fracFilter","MaxDensifiedByFractionDistanceFilter","orientedDistance","_maxPtDist","_minPtDist","_euclideanDist","_geom","_numSubSegs","fraction","delx","dely","ItemVisitor","visitItem","item","PointOnGeometryLocator","locate","IntervalRTreeNode","_min","_max","getMin","queryMin","queryMax","getMax","NodeComparator","mid1","mid2","IntervalRTreeLeafNode","_item","query","visitor","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","_root","_level","buildTree","buildLevel","insert","buildRoot","printNode","node","ArrayListVisitor","_items","getItems","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","locatePointInRing","counter","countSegment","isOnSegment","getLocation","minx","maxx","orient","isPointInPolygon","IndexedPointInAreaLocator","_index","IntervalIndexedGeometry","rcc","SegmentVisitor","_counter","_isEmpty","addLine","PointLocation","isOnLine","lineIntersector","locateInRing","isInRing","GeometryCollectionIterator","_parent","_atStart","_subcollectionIterator","isAtomic","getName","SimplePointInAreaLocator","locatePointInPolygon","shellLoc","holeLoc","containsPointInPolygon","locateInGeometry","geomi","loc","isContained","SimilarityMeasure","measure","AreaSimilarityMeasure","areaInt","areaUnion","union","HausdorffSimilarityMeasure","diagonalSize","hgt","DENSIFY_FRACTION","envSize","SimilarityMeasureCombiner","measure1","measure2","Centroid","_areaBasePt","_triangleCent3","_areasum2","_cg3","_lineCentSum","_totalLength","_ptCount","_ptCentSum","area2","centroid3","getCentroid","cent","setAreaBasePoint","basePt","addPoint","addLineSegments","lineLen","segmentLen","addHole","isPositiveArea","addTriangle","addShell","EmptyStackException","Stack","pop","peek","empty","search","UniqueCoordinateArrayFilter","_coordSet","_list","filterCoordinates","ConvexHull","_inputPts","extractCoordinates","preSort","RadialComparator","computeOctRing","inputPts","octPts","computeOctPts","lineOrPolygon","cleanRing","linearRing","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","reduce","polyPts","reducedSet","reducedPts","padArray3","getConvexHull","sortedPts","cHS","grahamScan","cH","pad","stack","ps","_origin","polarCompare","dxp","dyp","dxq","dyq","oq","InteriorPointArea","_interiorPoint","_maxWidth","process","getInteriorPoint","avg","processPolygon","intPtPoly","InteriorPointPolygon","_polygon","_interiorPointY","_interiorSectionWidth","ScanLineYOrdinateFinder","getScanLineY","isEdgeCrossingCounted","scanY","intersectsHorizontalLine","segDX","segDY","findBestMidpoint","crossings","DoubleComparator","interiorPointX","scanRing","ptPrev","addEdgeCrossing","_poly","_centreY","_hiY","_loY","finder","updateInterval","scanLineY","InteriorPointLine","_centroid","_minDistance","addInterior","addEndpoints","InteriorPointPoint","BoundaryNodeRule","isInBoundary","boundaryCount","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInPolygonRing","updateLocationInfo","computeLocation","locateOnPoint","locateOnLineString","locateInPolygon","ml","mpoly","ptCoord","MinimumBoundingCircle","_input","_extremalPts","_centre","_radius","farthestPoints","dist01","dist12","dist20","pointWitMinAngleWithX","minSin","minAngPt","lowestPoint","pointWithMinAngleWithSegment","Q","minAng","getRadius","getExtremalPoints","computeCirclePoints","hullPts","R","computeCentre","getCircle","centrePoint","getMaximumDiameter","maxDiameter","MinimumDiameter","_isConvex","_convexHullPts","_minBaseSeg","_minWidthPt","_minPtIndex","_minWidth","isConvex","nextIndex","computeC","getMinimumDiameter","getMinimumRectangle","computeSegmentForLine","getWidthCoordinate","computeMinimumDiameter","getSupportingSegment","computeWidthConvex","convexGeom","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","startIndex","maxPerpDistance","nextPerpDistance","maxIndex","minPara","maxPara","minPerp","maxPerp","paraC","perpC","maxPerpLine","minPerpLine","maxParaLine","minParaLine","Densifier","_distanceTolerance","densifyPoints","distanceTolerance","precModel","densifiedSegCount","densifiedSegLen","segFract","densify","densifier","setDistanceTolerance","getResultGeometry","DensifyTransformer","roughGeom","createValidArea","newPts","roughAreaGeom","Quadrant","isNorthern","quad","NE","NW","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","SE","SW","quadrant","HalfEdge","_orig","_sym","_next","orig","e0","e1","link","find","oNext","isEdgesSorted","lowest","findLowest","eNext","isSorted","directionY","directionPt","eAdd","insertAfter","ePrev","insertionEdge","save","setNext","sym","degree","compareAngularDirection","directionX","quadrant2","prevNode","toStringNode","sb","format","setSym","toStringNodeEdge","MarkHalfEdge","_isMarked","setMarkBoth","isMarked","setMark","markBoth","mark","EdgeGraph","_vertexMap","isValidEdge","cmp","eAdj","eAdjDest","createEdge","addEdge","eSame","getVertexEdges","findEdge","DissolveHalfEdge","_isStart","setStart","isStart","DissolveEdgeGraph","LineDissolver","_graph","_nodeEdgeStack","_ringStartEdge","dissolve","getResult","updateRingStartEdge","computeResult","eNode","stackEdges","buildLines","buildRing","eStartRing","buildLine","eStart","edges","component","lineString","doneStart","Position","opposite","ON","MonotoneChain","mce","chainIndex","computeIntersections","mc","si","computeIntersectsForChain","SweepLineEvent","_label","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","DELETE","label","INSERT","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector","_hasIntersection","_hasProper","_hasProperInterior","_properIntersectionPoint","_li","_includeProper","_recordIsolated","_isSelfIntersection","_numIntersections","numTests","_bdyNodes","_isDoneWhenProperInt","includeProper","recordIsolated","isAdjacentSegments","isTrivialIntersection","segIndex0","segIndex1","maxSegIndex","getProperIntersectionPoint","setIsDoneIfProperInt","isDoneWhenProperInt","hasProperInteriorIntersection","isBoundaryPointInternal","bdyNodes","hasProperIntersection","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","addIntersections","p00","p01","p10","p11","setIsolated","SimpleMCSweepLineIntersector","events","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","addEdges","testAllSegments","edge","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","ev1","mc1","TopologyLocation","location","on","gl","left","right","setAllLocations","locValue","setAllLocationsIfNull","isLine","merge","newLoc","getLocations","flip","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","isEqualOnSide","allPositionsEqual","Label","elt","onLoc","lbl","geomIndex","leftLoc","rightLoc","toLineLabel","lineLabel","getGeometryCount","count","side","toLine","EdgeIntersection","getSegmentIndex","print","maxSegmentIndex","SortedMap","BLACK","RED","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","containsKey","EdgeIntersectionList","_nodeMap","ei","addSplitEdges","edgeList","eiPrev","newEdge","createSplitEdge","ei0","ei1","lastSegStartPt","useIntPt1","Edge","eiNew","IntArrayList","_data","_size","initialCapacity","capacity","MonotoneChainIndexer","toIntArray","getChainStartIndices","startIndexList","findChainEnd","chainQuad","OLDgetChainStartIndices","MonotoneChainEdge","mcb","chainIndex0","chainIndex1","start0","end0","start1","end1","overlaps","mid0","computeIntersects","Depth","_depth","NULL_VALUE","depthAtLocation","getDepth","setDepth","depthValue","minDepth","newValue","getDelta","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","setVisited","isVisited","setInResult","isInResult","isCovered","isCoveredSet","setLabel","getLabel","setCovered","updateIM","computeIM","_env","eiList","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newe","isIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getDepthDelta","printReverse","addIntersection","normalizedSegmentIndex","nextSegIndex","nextPt","isPointwiseEqual","setDepthDelta","depthDelta","getEdgeIntersectionList","Node","_coord","_edges","isIncidentEdgeInResult","getEdges","de","getEdge","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","mergeLabel","thisLoc","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","getBoundaryNodes","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","compareDirection","getDy","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","getNode","computeLabel","boundaryNodeRule","TopologyException","DirectedEdge","_isForward","_nextMin","_edgeRing","_minEdgeRing","computeDirectedLabel","depthFactor","currLocation","nextLocation","getNextMin","getNext","depthVal","isInteriorAreaEdge","setNextMin","nextMin","setMinEdgeRing","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","setEdgeRing","edgeRing","getMinEdgeRing","getSym","printEdge","setVisitedEdge","setEdgeDepths","depth","directionFactor","oppositePos","delta","oppositeDepth","getEdgeRing","NodeFactory","PlanarGraph","_nodes","_edgeEndList","linkResultDirectedEdges","nodes","nodeit","printEdges","getNodeIterator","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","edgesToAdd","de1","de2","getNodes","GeometryGraph","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","_ptLocator","parentGeom","determineBoundary","insertBoundaryPoint","computeSelfNodes","computeRingSelfNodes","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","getBoundaryNodeRule","hasTooFewPoints","insertPoint","addPolygon","addPolygonRing","addLineString","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eLoc","eiIt","addCollection","KdNodeVisitor","KdNode","_left","_right","_count","data","isRepeated","getRight","setLeft","getData","getCount","getLeft","increment","setRight","KdTree","_numberOfNodes","_tolerance","toCoordinates","kdnodes","includeRepeated","matchNode","findBestMatchNode","insertExact","queryEnv","queryNode","currentNode","odd","discriminant","searchLeft","searchRight","BestMatchVisitor","queryEnvelope","leafNode","isOddLevel","isLessThan","isInTolerance","_matchNode","_matchDist","update","NodeBase","_subnode","getSubnodeIndex","centrex","centrey","subnodeIndex","hasChildren","isPrunable","hasItems","addAllItems","resultItems","getNodeCount","subSize","addAllItemsFromOverlapping","searchEnv","isSearchMatch","visitItems","itemEnv","found","maxSubDepth","sqd","DoubleBits","exponent","CVTFWD","powerOf2","NumW","Qty","Sign","Expo","Mant","Bin","Inf","ExW","Key","computeKey","computeQuadLevel","dMax","level","getLevel","quadSize","getPoint","_centrex","_centrey","createExpanded","addEnv","expandEnv","largerNode","insertNode","getSubnode","createSubnode","miny","maxy","sqEnv","childNode","IntervalSize","isZeroWidth","maxAbs","scaledInterval","MIN_BINARY_EXPONENT","Root","insertContained","tree","isZeroX","isZeroY","SpatialIndex","Quadtree","_minExtent","ensureExtent","collectStats","insertEnv","queryAll","foundItems","posEnv","delX","delY","Boundable","getBounds","ItemBoundable","_bounds","bounds","getItem","PriorityQueue","poll","minItem","reorder","child","AbstractNode","_childBoundables","getChildBoundables","addChildBoundable","childBoundable","computeBounds","EnvelopeDistance","maxDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","maximumDistance","env2","minMaxDistance","aminx","aminy","amaxx","amaxy","bminx","bminy","bmaxx","bmaxy","BoundablePair","_boundable1","_boundable2","_itemDistance","boundable1","boundable2","itemDistance","isComposite","expandToQueue","priQ","isComp1","isComp2","expand","isLeaves","nd","bndComposite","bndOther","isFlipped","children","bp","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity","compareDoubles","queryInternal","searchBounds","childBoundables","getIntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","top","boundable","createHigherLevels","getRoot","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","IntersectsOp","ItemDistance","item1","item2","STRtree","kNearestNeighbors","items","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","nearestNeighbourK","initBndPair","distanceLowerBound","bndPair","pairDistance","bp1","bp2","STRtreeNode","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","yComparator","minLeafCount","xComparator","nearestNeighbour","itemDist","minPair","bnd","isWithinDistance","distanceUpperBound","aBounds","bBounds","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","bbox","FeatureCollection","featureCollection","features","sub","multipoint","geoJson","linestring","multilinestring","shellGeoJson","holeGeoJson","multipolygon","GeoJSONReader","GeoJSONWriter","WKTReader","p2c","OL3Parser","olReference","ol","inject","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","getLinearRings","multiPoint","multiLineString","getLineStrings","multiPolygon","getGeometries","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","geometryCollection","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","isInterior","SegmentNodeList","getSplitCoordinates","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","createSplitEdgePts","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","NodedSegmentString","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","edgePts","split0","pt0","splitn","splitnPts","ptn","Octant","adx","ady","SegmentString","setData","NodableSegmentString","_nodeList","getNodedSubstrings","segStrings","resultEdgelist","ss","getNodeList","safeOctant","addIntersectionNode","MonotoneChainOverlapAction","_overlapSeg1","_overlapSeg2","overlap","mc2","start2","getLineSegment","_start","_end","_context","_id","context","computeSelect","mcs","select","computeOverlaps","mco","setId","id","getEndIndex","getStartIndex","getContext","getId","MonotoneChainBuilder","safeStart","getChains","mcList","chainStart","chainEnd","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","getMonotoneChains","getIndex","segStr","segChains","inputSegStrings","intersectChains","overlapAction","SegmentOverlapAction","queryChain","overlapChains","testChain","_si","ss1","ss2","processIntersections","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","noder","scaleFactor","isIntegerPrecision","rescale","nodedSegmentStrings","roundPts","roundPtsNoDup","splitSS","intSegStrings","BoundaryOp","_bnRule","_endpointMap","bnRule","bop","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","boundaryLineString","closedEndpointOnBoundary","addEndpoint","valence","Counter","IsSimpleOp","_isClosedEndpointsInInterior","_nonSimpleLocation","isSimpleMultiPoint","mp","isSimplePolygonal","isSimpleLinearGeometry","hasClosedEndpointIntersection","graph","endPoints","eiInfo","getNonSimpleLocation","hasNonEndpointIntersection","EndpointInfo","computeSimple","isSimpleGeometryCollection","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","endCapStyle","setEndCapStyle","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","bufferDistanceError","quadSegs","alpha","getEndCapStyle","isSingleSided","JOIN_BEVEL","JOIN_MITRE","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","CAP_FLAT","CAP_SQUARE","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getRightmostEdge","dirEdgeList","rightmostSide","LinkedList","addLast","removeFirst","shift","BufferSubgraph","_finder","_dirEdgeList","_rightMostCoord","clearVisitedEdges","getRightmostCoordinate","computeNodeDepth","startEdge","computeDepths","copySymDepths","computeDepth","outsideDepth","addReachable","findResultEdges","nodesVisited","nodeQueue","startNode","adjNode","edgeEnv","dirEdge","nodeStack","symNode","getDirectedEdges","EdgeRing","_startDe","_maxNodeDegree","_ring","_isHole","_geometryFactory","computePoints","computeRing","isFirstEdge","addPoints","getLinearRing","computeMaxNodeDegree","getOutgoingDegree","isHole","containsPoint","isShell","getMaxNodeDegree","getShell","deLabel","setShell","toPolygon","holeLR","MinimalEdgeRing","er","MaximalEdgeRing","buildMinimalRings","minEdgeRings","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","PolygonBuilder","_shellList","findEdgeRingContaining","testEr","shellList","testRing","testEnv","minShell","minShellEnv","tryShell","tryShellRing","tryShellEnv","sortShellsAndHoles","edgeRings","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","shellCount","BufferInputLineSimplifier","_inputLine","_distanceTol","_isDeleted","_angleOrientation","inputLine","simplify","distanceTol","simp","isDeletable","i0","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","isAngleToSimplify","NUM_PTS_TO_CHECK","collapseLine","INIT","KEEP","OffsetSegmentString","_ptList","_minimimVertexDistance","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","addPts","lastPt","startPt","setMinimumVertexDistance","minimimVertexDistance","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addDirectedFillet","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","mitreRatio","addLimitedMitreJoin","OFFSET_SEGMENT_SEPARATION_FACTOR","addBevelJoin","addCornerFillet","createSquare","addSegments","addFirstSegment","startAngle","endAngle","addLastSegment","initSideSegments","s1","s2","ang0","angDiff","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelDelta","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","totalAngle","nSegs","angleInc","offset","sideSign","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","numInt","hasNarrowConcaveAngle","OffsetCurveBuilder","copyCoordinates","getOffsetCurve","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","computeLineBufferCurve","getLineCurve","isLineOffsetEmpty","lineCoord","getBufferParameters","bufDistance","getRingCurve","SubgraphDepthLocater","_subgraphs","_seg","subgraphs","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","ds","DepthSegment","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","OffsetCurveSetBuilder","_curveBuilder","_curveList","curveBuilder","addRingSide","cwLeftLoc","cwRightLoc","curve","addCurve","addRingBothSides","offsetSide","shellCoord","isErodedCompletely","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","distToCentre","getCurves","ringCoord","envMinDimension","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","checkAreaLabelsConsistent","lastEdgeIndex","startLabel","findIndex","eSearch","computeLabelling","hasDimensionalCollapseEdge","getDegree","insertEdgeEnd","DirectedEdgeStar","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","lastDepth","endIndex","currDepth","nextDe","mergeSymLabels","findCoveredLineEdges","eLabel","OverlayNodeFactory","OrientedCoordinateArray","_orientation","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","oca","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","matchEdge","IntersectionAdder","_hasInterior","numIntersections","numInteriorIntersections","numProperIntersections","getLineIntersector","hasInteriorIntersection","BufferBuilder","_workingPrecisionModel","_workingNoder","lLoc","rLoc","convertSegStrings","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","existingDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","locater","createSubgraphs","createEmptyResultGeometry","emptyGeom","getNoder","curveSetBuilder","bufferSegStrList","computeNodedEdges","resultGeom","nodedSegStrings","oldLabel","setNoder","NodingValidator","_segStrings","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","snap","hotPixel","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","HotPixelSnapAction","isNodeAdded","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","printStackTrace","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","bufferOp","gBuf","geomBuf","bufOp","params","precisionScaleFactor","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","MAX_PRECISION_DIGITS","precisionDigits","sizeBasedScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","CAP_BUTT","GeometryLocation","_component","_segIndex","INSIDE_AREA","isInsideArea","toPoint","getGeometryComponent","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_minDistanceLocation","terminateDistance","distOp","envDist","nearestPoints","computeContainmentDistance","locPtPoly","polyGeomIndex","polyGeom","locationsIndex","polys","insideLocs","locs","ptLoc","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPts","coord0","segClosestPoint","line0","line1","segEnv0","segEnv1","points0","points1","pt1","EdgeString","_directedEdges","forwardDirectedEdges","reverseDirectedEdges","coordinateList","directedEdge","getEdgeDirection","getLine","getComponentWithVisitedState","visitedState","visited","setMarked","marked","setContext","_from","_to","_edgeDirection","_angle","edgeDirection","toEdges","isRemoved","getDirectionPt","getAngle","getFromNode","setEdge","getToNode","LineMergeDirectedEdge","getOutEdges","_dirEdge","setDirectedEdges","addOutEdge","getDirEdge","fromNode","getOppositeNode","_outEdges","_sorted","getNextEdge","sortEdges","getNextCWEdge","modi","_deStar","deStar","getEdgesBetween","node0","node1","commonEdges","retainAll","LineMergeEdge","_line","_dirEdges","findNodesOfDegree","nodesFound","nodeIterator","dirEdgeIterator","edgeIterator","outEdges","findNode","LineMergeGraph","startCoordinate","endCoordinate","endNode","directedEdge0","directedEdge1","LineMerger","_mergedLineStrings","_edgeStrings","buildEdgeStringsForUnprocessedNodes","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","buildEdgeStringsForObviousStartNodes","getMergedLineStrings","buildEdgeStringStartingWith","buildEdgeStringsForIsolatedLoops","edgeString","Subgraph","_parentGraph","parentGraph","getParent","ConnectedSubgraphFinder","findSubgraph","getConnectedSubgraphs","toNode","LineSequencer","_lineCount","_isRun","_sequencedGeometry","_isSequenceable","findUnvisitedBestOrientedDE","wellOrientedDE","unvisitedDE","findLowestDegreeNode","minDegree","minDegreeNode","isSequenced","mls","prevSubgraphNodes","currNodes","revPts","sequence","sequencer","getSequencedLineStrings","hasSequence","oddDegreeCount","computeSequence","sequences","findSequences","buildSequencedGeometry","finalLineCount","csFinder","findSequence","addReverseSubpath","lit","expectedClosed","unvisitedOutDE","startDE","startDESym","listIterator","hasPrevious","previous","orientedSeq","newSeq","addFirst","endEdge","flipSeq","hasDegree1Node","hasObviousStartNode","lineToAdd","isSequenceable","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","_srcGeom","srcGeom","snapGeom","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","minDimension","snapTol","SNAP_PRECISION_FACTOR","snapToSelf","cleanResult","extractTargetCoordinates","snapTrans","SnapTransformer","snappedGeom","computeSnapTolerance","ringPts","minSegLen","computeMinimumSegmentLength","ptSet","segLen","_snapPts","_isSelfSnap","isSelfSnap","snapLine","snapper","BasicSegmentString","NodingIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_keepIntersections","_isInteriorIntersectionsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","createAllIntersectionsFinder","setFindAllIntersections","isInteriorVertexIntersection","isEnd0","isEnd1","isEnd00","isEnd01","isEnd10","isEnd11","createInteriorIntersectionCounter","setInteriorIntersectionsOnly","setKeepIntersections","createIntersectionCounter","isEndSegment","createAnyIntersectionFinder","createInteriorIntersectionsFinder","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","findAllIntersections","keepIntersections","isSameSegString","isSameSegment","isEndSegPresent","isInteriorInt","isInteriorVertexInt","isAdjacentSegment","isInteriorIntersectionsOnly","FastNodingValidator","_isValid","execute","getErrorMessage","intSegs","EdgeNodingValidator","_nv","toSegmentStrings","validator","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","INTERSECTION","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numSignExp","numCommonMostSigMantissaBits","zeroLowerBits","numStr","padStr","bitStr","getBit","nBits","prop","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","addCommonBits","Translater","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","SnapOverlayOp","_cbr","overlayOp","UNION","symDifference","SYMDIFFERENCE","difference","DIFFERENCE","selfSnap","remGeom","prepareResult","prepGeom","SnapIfNeededOverlayOp","isSuccess","savedException","GeometryGraphOperation","_resultPrecisionModel","_arg","setComputationPrecision","_resultGeom","_resultPolyList","geom1","gov","geomOv","createEmptyResult","resultDimension","dim0","dim1","overlayOpCode","resultDim","loc0","loc1","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","replaceCollapsedEdges","newEdges","updateNodeLabelling","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","newNode","ni","PolygonizeDirectedEdge","setRing","getRing","PolygonizeEdge","ConnectedInteriorTester","_geomGraph","_disconnectedRingcoord","findDifferentPoint","visitInteriorRing","intDe","visitLinkedDirectedEdges","visitShellInteriors","setInteriorEdgesInResult","startDe","buildEdgeRings","hasUnvisitedShellEdge","isInteriorsConnected","EdgeEndBuilder","createEdgeEndForNext","eiCurr","eiNext","createEdgeEndForPrev","computeEdgeEnds","EdgeEndBundle","_edgeEnds","computeLabelOn","foundInterior","computeLabelSide","computeLabelSides","EdgeEndBundleStar","esb","eb","RelateNode","updateIMFromEdges","RelateNodeFactory","RelateNodeGraph","insertEdgeEnds","copyNodesAndLabels","nodeIt","computeIntersectionNodes","eeBuilder","eeList","edgeIt","ConsistentAreaTester","_nodeGraph","isNodeEdgeAreaLabelsConsistent","hasDuplicateRings","eeb","isNodeConsistentArea","intersector","IndexedNestedRingTester","_rings","_totalEnv","_nestedPt","buildIndex","getNestedPoint","isNonNested","innerRing","innerRingPts","results","searchRing","searchRingPts","innerRingPt","IsValidOp","findPtNotNode","isInside","TopologyValidationError","_errorType","errorType","getErrorType","getMessage","errMsg","locStr","ERROR","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","_parentGeometry","_isSelfTouchingRingFormingHoleValid","_validErr","parentGeometry","testCoords","searchEdge","isValidOp","checkInvalidCoordinates","checkHolesNotNested","nestedTester","innerHole","checkConsistentArea","cat","isValidArea","checkShellInsideHole","shellPts","holePts","shellPt","insideHole","holePt","insideShell","checkNoSelfIntersectingRings","checkNoSelfIntersectingRing","checkConnectedInteriors","cit","nodeSet","isFirst","checkHolesInShell","isShellEmpty","pir","outside","checkTooFewPoints","getValidationError","checkClosedRing","checkClosedRings","checkShellsNotNested","setSelfTouchingRingFormingHoleValid","checkShellNotNested","polyShell","insidePolyShell","badNestedPt","_deList","_lowestEdge","_locator","_ringPts","_isProcessed","_isIncludedSet","_isIncluded","findDirEdgesInRing","erList","minRing","minRingEnv","tryEdgeRing","tryRing","isIncluded","isIncludedSet","getLocator","isOuterHole","hasShell","getPolygon","isProcessed","holeER","setIncluded","getOuterHole","adjRing","computeHole","isOuterShell","getLineString","updateIncluded","adjShell","setProcessed","EnvelopeComparator","r0","r1","PolygonizeGraph","findLabeledEdgeRings","edgeRingStarts","currLabel","getDegreeNonDeleted","deleteAllEdges","computeNextCWEdges","prevDE","outDE","computeNextCCWEdges","firstOutDE","prevInDE","inDE","findIntersectionNodes","intNodes","findEdgeRing","computeDepthParity","iNode","linePts","endPt","nStart","nEnd","deleteCutEdges","cutLines","getEdgeRings","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","ringEdges","deleteDangles","nodesToRemove","dangleLines","nodeOutEdges","HoleAssigner","_shells","_shellIndex","shells","assignHolesToShells","assigner","holeList","assignHoleToShell","queryOverlappingShells","ringEnv","findShellContaining","candidateShells","Polygonizer","_lineStringAdder","LineStringAdder","_dangles","_cutEdges","_invalidRingLines","_holeList","_polyList","_isCheckingRingsValid","_extractOnlyPolygonal","extractOnlyPolygonal","extractPolygons","includeAll","polyList","findOuterShells","outerHoleER","findDisjointShells","isMoreToScan","polygonize","getInvalidRingLines","findValidRings","validEdgeRingList","invalidRingList","findShellsAndHoles","getDangles","getCutEdges","setCheckRingsValid","isCheckingRingsValid","RelateComputer","_im","_isolatedEdges","arg","computeProperIntersectionIM","dimA","dimB","hasProper","hasProperInterior","labelIsolatedEdges","thisIndex","labelIsolatedEdge","target","computeDisjointIM","labelIsolatedNodes","ee0","ee1","labelNodeEdges","labelIntersectionNodes","labelIsolatedNode","ga","gb","RectangleContains","_rectEnv","rectangle","rc","isContainedInBoundary","isPointContainedInBoundary","isLineStringContainedInBoundary","isLineSegmentContainedInBoundary","RectangleLineIntersector","_diagUp0","_diagUp1","_diagDown0","_diagDown1","rectEnv","segEnv","isSegUpwards","RectangleIntersects","_rectangle","rp","EnvelopeIntersectsVisitor","ecpVisitor","GeometryContainsPointVisitor","riVisitor","RectangleIntersectsSegmentVisitor","_intersects","elementEnv","_rectSeq","_containsPoint","rectPt","_rectIntersector","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","RelateOp","_relate","getIntersectionMatrix","touches","relate","relOp","crosses","PointGeometryUnion","_pointGeom","_otherGeom","pointGeom","unioner","exteriorCoords","ptComp","InputExtracter","_polygons","extracter","recordDimension","getExtract","UnionOp","OverlapUnion","_isUnionSafe","containsProperly","overlapEnvelope","g0Env","g1Env","overlapEnv","extractBorderSegments","segs","isBorder","unionBuffer","gColl","isBorderSegmentsSame","segsBefore","segsAfter","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","segs0","segs1","g0Copy","g1Copy","disjointPolys","g0Overlap","g1Overlap","unionGeom","unionFull","isUnionOptimized","CascadedPolygonUnion","_inputPolys","restrictToPolygons","reduceToGeometries","geomTree","unionTree","STRTREE_NODE_CAPACITY","itemTree","unionAll","binaryUnion","unionSafe","repeatedUnion","unionActual","bufferUnion","UnaryUnionOp","_extracter","unionNoOpt","unionWithNull","unionPoints","ptGeom","unionLines","lineGeom","unionPolygons","unionLA","CommonBitsOp","_returnToOriginalPrecision","returnToOriginalPrecision","computeResultPrecision","EnhancedPrecisionOp","originalEx","cbo","resultEP","ex2","PrecisionReducerCoordinateOperation","_targetPM","_removeCollapsed","targetPM","removeCollapsed","reducedCoords","noRepeatedCoordList","noRepeatedCoords","minLength","collapsedCoords","GeometryPrecisionReducer","_changePrecisionModel","_isPointwise","reducer","reducePointwise","setPointwise","fixPolygonalTopology","geomToBuffer","changePM","bufGeom","geomEdit","newFactory","createFactory","finalRemoveCollapsed","reduceGeom","newPM","geomEditor","createEditor","setRemoveCollapsedComponents","inputFactory","setChangePrecisionModel","changePrecisionModel","reducePW","isPointwise","FacetSequence","computeDistanceLineLine","facetSeq","q0","updateNearestLocationsLineLine","updateNearestLocationsPointLine","isPoint","isPointOther","seqPt","computeDistancePointLine","FacetSequenceTreeBuilder","addFacetSequences","sections","FACET_SEQUENCE_SIZE","sect","computeFacetSequences","STR_TREE_NODE_CAPACITY","section","MinimumClearance","_minClearance","_minClearancePts","nearest","MinClearanceDistance","mcd","_minDist","_minPts","vertexDistance","fs1","fs2","segmentDistance","updatePts","b1","b2","SimpleMinimumClearance","updateClearance","candidateValue","VertexCoordinateFilter","smc","ComputeMCCoordinateSequenceFilter","_queryPt","queryPt","checkVertexDistance","vertex","vertexDist","checkSegmentDistance","segDist","DouglasPeuckerLineSimplifier","_usePt","simplifySection","DouglasPeuckerSimplifier","_isEnsureValidTopology","tss","setEnsureValid","isEnsureValidTopology","DPTransformer","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","TaggedLineSegment","TaggedLineString","_parentLine","_segs","_resultSegs","_minimumSize","parentLine","minimumSize","addToResult","asLineString","getResultSize","resultSegsSize","getSegment","getParentCoordinates","getMinimumSize","asLinearRing","getSegments","getResultCoordinates","LineSegmentIndex","querySeg","LineSegmentVisitor","itemsFound","_querySeg","TaggedLineStringSimplifier","_inputIndex","_outputIndex","_linePts","inputIndex","outputIndex","isInLineSection","sectionIndex","flatten","newSeg","hasBadIntersection","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","isValidToSimplify","worstCaseSize","furthestPtIndex","findFurthestPoint","querySegs","maxDist","midPt","TaggedLinesSimplifier","taggedLines","tlss","TopologyPreservingSimplifier","_lineSimplifier","_linestringMap","LineStringMapBuilderFilter","LineStringTransformer","linestringMap","taggedLine","tps","minSize","VWLineSimplifier","simplifyVertex","vwLine","curr","minArea","minVertex","isLive","VWVertex","_prev","_area","MAX_AREA","_isLive","first","v","setPrev","updateArea","tmpPrev","tmpNext","VWSimplifier","VWTransformer","SplitSegment","_segLen","_splitPt","_minimumLen","pointAlongReverse","splitAt","minFrac","actualLen","getConstrainedLength","setMinimumLength","minLen","getSplitPoint","ConstraintSplitPointFinder","findSplitPoint","encroachPt","NonEncroachingSplitPointFinder","projectedSplitPoint","lineSeg","projPt","midPtLen","splitSeg","nonEncroachDiam","maxSplitLen","TrianglePredicate","triArea","isInCircleDDNormalized","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","isInCircle","checkRobustInCircle","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","isInCircleDDFast","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","cc","ccRadius","pRadiusDiff","isInCircleNormalized","triAreaDDSlow","isInCircleRobust","t1","t2","Vertex","_z","ptLen","pz","circleCenter","cab","bisector","cbc","hcc","nre","err","dot","magn","interpolateZValue","xm","ym","zm","crossProduct","times","cross","classify","sa","BEHIND","BEYOND","ORIGIN","DESTINATION","BETWEEN","circumRadiusRatio","edgeLength","el","ConstraintVertex","_isOnConstraint","_constraint","getConstraint","setOnConstraint","isOnConstraint","setConstraint","constraint","QuadEdge","_rot","_vertex","makeEdge","q3","setOrig","setDest","oPrev","lNext","rot","beta","t3","t4","connect","equalsNonOriented","qe","equalsOriented","toLineSegment","dNext","lPrev","rPrev","invRot","delete","rNext","getPrimary","dPrev","IncrementalDelaunayTriangulator","_subdiv","_isUsingTolerance","subdiv","getTolerance","insertSite","isVertexOfEdge","isOnEdge","insertSites","vertices","QuadEdgeLocator","LastFoundQuadEdgeLocator","_lastEdge","locateFromEdge","LocateFailureException","msgWithSpatial","TriangleVisitor","triEdges","QuadEdgeSubdivision","_visitedKey","_quadEdges","_startingEdge","_edgeCoincidenceTolerance","_frameVertex","_frameEnv","_triEdges","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","initSubdiv","getTriangleEdges","startQE","triEdge","getTriangleVertices","includeFrame","TriangleVertexListVisitor","visitTriangles","isFrameVertex","getVoronoiCellPolygon","cellPts","cellPoly","setLocator","locator","ea","ec","isFrameBorderEdge","leftTri","rightTri","vLeftTriOther","vRightTriOther","triVisitor","edgeStack","visitedEdges","fetchTriangleToVisit","isFrameEdge","getTriangleCoordinates","TriangleCoordinatesVisitor","getTriangles","getVertices","vd","edgeCount","isFrame","quadEdges","getPrimaryEdges","getVertexUniqueEdges","visitedVertices","qd","TriangleEdgesListVisitor","priQE","eSym","eRot","eRotSym","iter","maxIter","getVoronoiCellPolygons","TriangleCircumcentreVisitor","cells","getVoronoiDiagram","vorCells","triPtsList","tris","triPt","locEdge","ccVertex","_triList","_coordList","_triCoords","checkTriangleSize","Segment","_ls","z1","z2","getEndZ","getStartZ","getStart","getEnd","getEndY","getStartX","getStartY","getEndX","ConstraintEnforcementException","msgWithCoord","ConformingDelaunayTriangulator","_initialVertices","_segVertices","_segments","_incDel","_convexHull","_splitFinder","_kdt","_vertexFactory","_computeAreaEnv","initialVertices","computeVertexEnvelope","getInitialVertices","getKDT","enforceConstraints","addConstraintVertices","splits","enforceGabriel","MAX_SPLIT_ITER","getVertexFactory","getPointArray","setConstraints","segments","segVertices","computeConvexHull","hull","findNonGabrielPoint","segRadius","closestNonGabriel","nextNode","testRadius","testDist","getConstraintSegments","setSplitPointFinder","splitFinder","segsToInsert","newSegments","segsToRemove","splitVertex","createVertex","insertedVertex","removeAll","getSubdivision","computeBoundingBox","vertexEnv","allPointsEnv","setVertexFactory","vertexFactory","formInitialDelaunay","kdnode","snappedV","DelaunayTriangulationBuilder","_siteCoords","extractUniqueCoordinates","unique","coordsCopy","toVertices","verts","siteEnv","triangulator","setTolerance","setSites","ConformingDelaunayTriangulationBuilder","_constraintLines","_constraintVertexMap","createConstraintSegments","constraintSegs","createSiteVertices","createVertices","sites","cdt","constraintLines","VoronoiDiagramBuilder","_clipEnv","_diagramEnv","clipGeometryCollection","clipEnv","clipPoly","clipped","getDiagram","setClipEnvelope","LinearIterator","_linearGeom","_numLines","_currentLine","_componentIndex","_vertexIndex","linear","getComponentIndex","segmentEndVertexIndex","linearGeom","componentIndex","loadCurrentLine","getSegmentFraction","getVertexIndex","getSegmentEnd","getSegmentStart","isEndOfLine","LengthIndexOfPoint","indexOfAfter","minIndex","indexOfFromStart","ptMeasure","segmentStartMeasure","segDistance","segMeasureToPt","segmentNearestMeasure","closestAfter","projFactor","LinearLocation","_segmentIndex","_segmentFraction","doNormalize","getEndLocation","setToEnd","pointAlongSegmentByFraction","compareLocationValues","componentIndex0","segmentIndex0","segmentFraction0","componentIndex1","segmentIndex1","segmentFraction1","numSegments","isEndpoint","lineComp","nseg","toLowest","lastLine","isOnSameSegment","snapToVertex","getSegmentLength","lenToStart","lenToEnd","isVertex","LocationIndexOfPoint","minComponentIndex","minSegmentIndex","candidateComponentIndex","candidateSegmentIndex","endLoc","LocationIndexOfLine","indicesOf","subLine","locPt","subLineLoc","LengthLocationMap","resolveLower","totalLength","resolveHigher","compIndex","forwardLength","getLocationForward","LinearGeometryBuilder","_ignoreInvalidLines","_fixInvalidLines","_lastPt","endLine","getLastCoordinate","rawPts","validCoordinateSequence","setFixInvalidLines","fixInvalidLines","allowRepeatedPoints","setIgnoreInvalidLines","ignoreInvalidLines","validPts","ExtractLineByLocation","computeLinear","computeLine","startSegmentIndex","lastSegmentIndex","newCoordinateArray","LengthIndexedLine","clampIndex","positiveIndex","locationOf","extractPoint","locLow","isValidIndex","extractLine","startIndex2","endIndex2","resolveStartLower","LocationIndexedLine","checkGeometryType","indexLow","CollectionUtil","func","Boolean","Function","CoordinateArrayFilter","CoordinateCountFilter","_n","ObjectCounter","_counts","PrintStream","StringReader","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","chars","String","getStackTrace","os","stackTrace","lineNumberReader","readLine","NEWLINE","spaces","split","separator","separatorlen","tokenList","tmpString","prototype","coveredBy","within","intersectionPattern","centPt","interiorPt","toText","writer","version"],"mappings":"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"}